apiVersion: config.openshift.io/v1
kind: TestReporting
metadata:
  creationTimestamp: null
  name: cluster
spec:
  testsForFeatureGates:
  - featureGate: CRDValidationRatcheting
    tests:
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] [Beta] MUST NOT fail to update a resource
        due to CRD Validation Rule errors on unchanged correlatable fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] [Beta] MUST NOT fail to update a resource
        due to JSONSchema errors on unchanged correlatable fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] [Beta] MUST NOT ratchet errors raised
        by transition rules'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] [Beta] MUST evaluate a CRD Validation
        Rule with oldSelf = nil for new values when optionalOldSelf is true'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] [Beta] MUST fail to update a resource
        due to CRD Validation Rule errors on changed fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] [Beta] MUST fail to update a resource
        due to CRD Validation Rule errors on unchanged uncorrelatable fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] [Beta] MUST fail to update a resource
        due to JSONSchema errors on changed fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] [Beta] MUST fail to update a resource
        due to JSONSchema errors on unchanged uncorrelatable fields'
  - featureGate: CSIVolumeHealth
    tests:
    - testName: '[sig-storage] CSI Mock Node Volume Health [Feature:CSIVolumeHealth]
        [FeatureGate:CSIVolumeHealth] [Alpha] CSI Mock Node Volume Health [Slow] return
        normal volume stats'
    - testName: '[sig-storage] CSI Mock Node Volume Health [Feature:CSIVolumeHealth]
        [FeatureGate:CSIVolumeHealth] [Alpha] CSI Mock Node Volume Health [Slow] return
        normal volume stats with abnormal volume condition'
    - testName: '[sig-storage] CSI Mock Node Volume Health [Feature:CSIVolumeHealth]
        [FeatureGate:CSIVolumeHealth] [Alpha] CSI Mock Node Volume Health [Slow] return
        normal volume stats without volume condition'
  - featureGate: ChunkSizeMiB
    tests:
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should not accept invalid ChunkSizeMiB
        value'
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should reject ChunkSizeMiB value greater
        than 5 GiB'
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should set ChunkSizeMiB value'
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should set maximum valid ChunkSizeMiB value'
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should set minimum valid ChunkSizeMiB value'
  - featureGate: DNSNameResolver
    tests:
    - testName: '[sig-network][OCPFeatureGate:DNSNameResolver][Feature:EgressFirewall]
        when using openshift ovn-kubernetes should ensure egressfirewall with wildcard
        dns rules is created'
  - featureGate: Example
    tests:
    - testName: '[sig-arch][OCPFeatureGate:Example] should only run FeatureGated test
        when enabled'
  - featureGate: GatewayAPI
    tests:
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure CRD of experimental group can not be created'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure CRD of experimental group is not installed'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure CRD of standard group can not be created'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure existing CRDs can not be deleted'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure existing CRDs can not be updated'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure required CRDs should already be installed'
  - featureGate: GatewayAPIController
    tests:
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure HTTPRoute object is created'
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure LB, service, and dnsRecord are created for a Gateway object'
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure OSSM and OLM related resources are created after creating GatewayClass'
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure custom gatewayclass can be accepted'
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure default gatewayclass is accepted'
  - featureGate: HardwareSpeed
    tests:
    - testName: '[sig-etcd][OCPFeatureGate:HardwareSpeed][Serial] etcd is able to
        set the hardware speed to "" [Timeout:30m][apigroup:machine.openshift.io]'
    - testName: '[sig-etcd][OCPFeatureGate:HardwareSpeed][Serial] etcd is able to
        set the hardware speed to Slower [Timeout:30m][apigroup:machine.openshift.io]'
    - testName: '[sig-etcd][OCPFeatureGate:HardwareSpeed][Serial] etcd is able to
        set the hardware speed to Standard [Timeout:30m][apigroup:machine.openshift.io]'
  - featureGate: HonorPVReclaimPolicy
    tests:
    - testName: '[sig-storage] CSI Mock honor pv reclaim policy [Feature:HonorPVReclaimPolicy]
        [FeatureGate:HonorPVReclaimPolicy] [Beta] CSI honor pv reclaim policy using
        mock driver Dynamic provisioning should honor pv delete reclaim policy'
    - testName: '[sig-storage] CSI Mock honor pv reclaim policy [Feature:HonorPVReclaimPolicy]
        [FeatureGate:HonorPVReclaimPolicy] [Beta] CSI honor pv reclaim policy using
        mock driver Dynamic provisioning should honor pv retain reclaim policy'
    - testName: '[sig-storage] CSI Mock honor pv reclaim policy [Feature:HonorPVReclaimPolicy]
        [FeatureGate:HonorPVReclaimPolicy] [Beta] CSI honor pv reclaim policy using
        mock driver Static provisioning should honor pv delete reclaim policy'
    - testName: '[sig-storage] CSI Mock honor pv reclaim policy [Feature:HonorPVReclaimPolicy]
        [FeatureGate:HonorPVReclaimPolicy] [Beta] CSI honor pv reclaim policy using
        mock driver Static provisioning should honor pv retain reclaim policy'
  - featureGate: ImageStreamImportMode
    tests:
    - testName: '[sig-imageregistry][OCPFeatureGate:ImageStreamImportMode][Serial]
        ImageStream API import mode should be Legacy if the import mode specified
        in image.config.openshift.io config is Legacy [apigroup:image.openshift.io]'
    - testName: '[sig-imageregistry][OCPFeatureGate:ImageStreamImportMode][Serial]
        ImageStream API import mode should be PreserveOriginal if the import mode
        specified in image.config.openshift.io config is PreserveOriginal [apigroup:image.openshift.io]'
    - testName: '[sig-imageregistry][OCPFeatureGate:ImageStreamImportMode][Serial]
        ImageStream API import mode should be PreserveOriginal or Legacy depending
        on desired.architecture field in the CV [apigroup:image.openshift.io]'
  - featureGate: ManagedBootImages
    tests:
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImages][Serial] Should degrade
        on a MachineSet with an OwnerReference [apigroup:machineconfiguration.openshift.io]'
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImages][Serial] Should not update
        boot images on any MachineSet when not configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImages][Serial] Should stamp
        coreos-bootimages configmap with current MCO hash and release version [apigroup:machineconfiguration.openshift.io]'
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImages][Serial] Should update
        boot images on all MachineSets when configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImages][Serial] Should update
        boot images only on MachineSets that are opted in [apigroup:machineconfiguration.openshift.io]'
  - featureGate: ManagedBootImagesAWS
    tests:
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial] Should degrade
        on a MachineSet with an OwnerReference [apigroup:machineconfiguration.openshift.io]'
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial] Should not
        update boot images on any MachineSet when not configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial] Should stamp
        coreos-bootimages configmap with current MCO hash and release version [apigroup:machineconfiguration.openshift.io]'
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial] Should update
        boot images on all MachineSets when configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial] Should update
        boot images only on MachineSets that are opted in [apigroup:machineconfiguration.openshift.io]'
  - featureGate: MetricsCollectionProfiles
    tests:
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set in a heterogeneous environment, should
        expose information about the applied collection profile using meta-metrics'
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set in a heterogeneous environment, should
        have at least one implementation for each collection profile'
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set in a heterogeneous environment, should
        revert to default collection profile when an empty collection profile value
        is specified'
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set in a homogeneous minimal environment,
        should hide default metrics'
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set initially, in a homogeneous default environment,
        should expose default metrics'
  - featureGate: MultiCIDRServiceAllocator
    tests:
    - testName: '[sig-network] [Feature:ServiceCIDRs] [FeatureGate:MultiCIDRServiceAllocator]
        [Beta] should create Services and serve on different Service CIDRs'
  - featureGate: NetworkDiagnosticsConfig
    tests:
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        be enabled by default'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        function without any target pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        move the source diagnostics pods based on the new selector and tolerations'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        move the target diagnostics pods based on the new selector and tolerations'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        remove all network diagnostics pods when disabled'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        set the condition to false if there are no nodes able to host the source pods'
  - featureGate: NetworkSegmentation
    tests:
    - testName: '[sig-network][Feature:Layer2LiveMigration][OCPFeatureGate:NetworkSegmentation][Suite:openshift/network/virtualization]
        primary UDN smoke test when using openshift ovn-kubernetes assert the primary
        UDN feature works as expected'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions does not mirror EndpointSlices in namespaces
        not using user defined primary networks L2 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions does not mirror EndpointSlices in namespaces
        not using user defined primary networks L3 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions mirrors EndpointSlices managed by the default
        controller for namespaces with user defined primary networks L2 primary UDN,
        cluster-networked pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions mirrors EndpointSlices managed by the default
        controller for namespaces with user defined primary networks L2 primary UDN,
        host-networked pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions mirrors EndpointSlices managed by the default
        controller for namespaces with user defined primary networks L3 primary UDN,
        cluster-networked pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions mirrors EndpointSlices managed by the default
        controller for namespaces with user defined primary networks L3 primary UDN,
        host-networked pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork does not mirror EndpointSlices in namespaces not using
        user defined primary networks L2 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork does not mirror EndpointSlices in namespaces not using
        user defined primary networks L3 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork mirrors EndpointSlices managed by the default controller
        for namespaces with user defined primary networks L2 primary UDN, cluster-networked
        pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork mirrors EndpointSlices managed by the default controller
        for namespaces with user defined primary networks L2 primary UDN, host-networked
        pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork mirrors EndpointSlices managed by the default controller
        for namespaces with user defined primary networks L3 primary UDN, cluster-networked
        pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork mirrors EndpointSlices managed by the default controller
        for namespaces with user defined primary networks L3 primary UDN, host-networked
        pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        Network Policies when using openshift ovn-kubernetes allow ingress traffic
        to one pod from a particular namespace in L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        Network Policies when using openshift ovn-kubernetes allow ingress traffic
        to one pod from a particular namespace in L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        Network Policies when using openshift ovn-kubernetes pods within namespace
        should be isolated when deny policy is present in L2 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        Network Policies when using openshift ovn-kubernetes pods within namespace
        should be isolated when deny policy is present in L3 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        pod connected to ClusterUserDefinedNetwork CR & managed NADs cannot be deleted
        when being used'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        should create NAD according to spec in each target namespace and report active
        namespaces'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        should create NAD in new created namespaces that apply to namespace-selector'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        when CR is deleted, should delete all managed NAD in each target namespace'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        when namespace-selector is mutated should create NAD in namespaces that apply
        to mutated namespace-selector'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        when namespace-selector is mutated should delete managed NAD in namespaces
        that no longer apply to namespace-selector'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes UDN Pod should react to k8s.ovn.org/open-default-ports
        annotations changes'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes UserDefinedNetwork CRD controller pod
        connected to UserDefinedNetwork cannot be deleted when being used'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes UserDefinedNetwork CRD controller should
        create NetworkAttachmentDefinition according to spec'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes UserDefinedNetwork CRD controller should
        delete NetworkAttachmentDefinition when UserDefinedNetwork is deleted'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        can perform east/west traffic between nodes for two pods connected over a
        L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        can perform east/west traffic between nodes two pods connected over a L3 primary
        UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        is isolated from the default network with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        is isolated from the default network with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        isolates overlapping CIDRs with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        isolates overlapping CIDRs with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        can perform east/west traffic between nodes for two pods connected over a
        L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        can perform east/west traffic between nodes two pods connected over a L3 primary
        UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        is isolated from the default network with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        is isolated from the default network with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        isolates overlapping CIDRs with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        isolates overlapping CIDRs with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork can perform
        east/west traffic between nodes for two pods connected over a L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork can perform
        east/west traffic between nodes two pods connected over a L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork is isolated
        from the default network with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork is isolated
        from the default network with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork isolates
        overlapping CIDRs with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork isolates
        overlapping CIDRs with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes when primary network exist, ClusterUserDefinedNetwork
        status should report not-ready'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes when primary network exist, UserDefinedNetwork
        status should report not-ready'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VM attached to a primary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VM attached to a primary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VMI attached to a primary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VM attached to a primary UDN
        is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VM attached to a primary UDN
        is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VMI attached to a primary UDN
        is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VM attached to a secondary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VM attached to a secondary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VMI attached to a secondary UDN is migrated between nodes'
  - featureGate: NewOLM
    tests:
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM] OLMv1 CRDs should be installed'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 Catalogs
        should be installed'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 New
        Catalog Install should fail to install if it has an invalid reference'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 operator
        installation should block cluster upgrades if an incompatible operator is
        installed'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 operator
        installation should fail to install a non-existing cluster extension'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 operator
        installation should install a cluster extension'
  - featureGate: OrderedNamespaceDeletion
    tests:
    - testName: '[sig-api-machinery] OrderedNamespaceDeletion namespace deletion should
        delete pod first [Feature:OrderedNamespaceDeletion] [FeatureGate:OrderedNamespaceDeletion]
        [Beta]'
  - featureGate: PersistentIPsForVirtualization
    tests:
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VM attached to a primary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VM attached to a primary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VMI attached to a primary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip when the VM attached
        to a secondary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip when the VM attached
        to a secondary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip when the VMI attached
        to a secondary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VM attached to a primary UDN
        is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VM attached to a primary UDN
        is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VMI attached to a primary UDN
        is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VM attached to a secondary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VM attached to a secondary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VMI attached to a secondary UDN is migrated between nodes'
  - featureGate: RouteAdvertisements
    tests:
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising a cluster user
        defined network [Serial][apigroup:user.openshift.io][apigroup:security.openshift.io]
        External host should be able to query route advertised pods by the pod IP'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising a cluster user
        defined network [Serial][apigroup:user.openshift.io][apigroup:security.openshift.io]
        pods should communicate with external host without being SNATed'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising the default network
        [apigroup:user.openshift.io][apigroup:security.openshift.io] External host
        should be able to query route advertised pods by the pod IP'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising the default network
        [apigroup:user.openshift.io][apigroup:security.openshift.io] pods should communicate
        with external host without being SNATed'
  - featureGate: RouteExternalCertificate
    tests:
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate if inline
        certificate is also present'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate if the
        route termination type is Passthrough'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate if the
        secret is in a different namespace'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate if the
        secret is not of type kubernetes.io/tls'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate without
        proper permissions'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and routes
        are reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to remove the external certificate and again re-add the same external
        certificate then also the route is reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to remove the external certificate then also the route is reachable
        and serves the default certificate'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use new external certificate then also the route is reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use new external certificate, but RBAC permissions are not added
        route update is rejected'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use new external certificate, but secret does not exist route
        update is rejected'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use new external certificate, but secret is not of type kubernetes.io/tls
        route update is rejected'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use same external certificate then also the route is reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use same external certificate, but RBAC permissions are dropped
        route update is rejected'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is deleted and re-created again but RBAC permissions are dropped then routes
        are not reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is deleted and re-created again then routes are reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is deleted then routes are not reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is updated but RBAC permissions are dropped then routes are not reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is updated then also routes are reachable'
  - featureGate: SELinuxMount
    tests:
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not unstage RWO volume when starting a second pod
        with the same SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWO volume with SELinuxMount
        enabled [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxMount]
        [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWO volume when starting a second pod with
        different SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] error is bumped on two Pods with a
        different context on RWO volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] error is bumped on two Pods with a
        different context on RWX volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped on two Pods with
        the same context on RWO volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Alpha]'
  - featureGate: SELinuxMountReadWriteOncePod
    tests:
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should add SELinux mount option to existing mount options
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for CSI driver that
        does not support SELinux mount [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for Pod without SELinux
        context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for RWO volume with
        SELinuxMount disabled [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not unstage RWO volume when starting a second pod
        with the same SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not unstage RWOP volume when starting a second pod
        with the same SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWO volume with SELinuxMount
        enabled [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxMount]
        [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWOP volume and Pod
        with SELinux context set [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWO volume when starting a second pod with
        different SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWOP volume when starting a second pod with
        different SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] error is bumped on two Pods with a
        different context on RWO volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] error is bumped on two Pods with a
        different context on RWOP volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] error is bumped on two Pods with a
        different context on RWX volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped on two Pods with
        the same context on RWO volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Alpha]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] warning is bumped on two Pods with
        a different context on RWO volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics SELinuxMount metrics
        [LinuxOnly] [Feature:SELinux] [Serial] warning is not bumped on two Pods with
        the same context on RWO volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
  - featureGate: VSphereDriverConfiguration
    tests:
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        allow all limits to be set at once'
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        allow setting VSAN limit'
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        allow setting VVOL limit'
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        allow setting global snapshot limit'
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        use default when unset'
  - featureGate: VolumeAttributesClass
    tests:
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (block volmode)] volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (block volmode)] volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume that already has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (block volmode)] volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (default fs)] volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (default fs)] volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume that already has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (default fs)] volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (ntfs)] [Feature:Windows] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (ntfs)] [Feature:Windows] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should modify volume that already
        has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (ntfs)] [Feature:Windows] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (block volmode)] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (block volmode)] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should modify volume that already
        has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (block volmode)] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (default fs)] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (default fs)] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should modify volume that already
        has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (default fs)] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (ntfs)] [Feature:Windows] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (ntfs)] [Feature:Windows] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should modify volume that already
        has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (ntfs)] [Feature:Windows] volume-modify [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] VolumeAttributesClass [Feature:VolumeAttributesClass]
        [FeatureGate:VolumeAttributesClass] [Beta] should run through the lifecycle
        of a VolumeAttributesClass'
    - testName: '[sig-storage] [Serial] Volume metrics PVController should create
        bound pv/pvc count metrics for pvc controller with volume attributes class
        dimension after creating both pv and pvc [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta]'
    - testName: '[sig-storage] [Serial] Volume metrics PVController should create
        unbound pvc count metrics for pvc controller with volume attributes class
        dimension after creating pvc only [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta]'
  - featureGate: VolumeGroupSnapshot
    tests:
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern:  (delete policy)] volumegroupsnapshottable
        [Feature:volumegroupsnapshot] VolumeGroupSnapshottable should create snapshots
        for multiple volumes in a pod'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should create read-only inline ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should create read/write inline ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should support multiple inline ephemeral volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should support two pods which have the same volume definition'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)(allowExpansion)]
        volume-expand Verify if offline PVC expansion works'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)(allowExpansion)]
        volume-expand should resize volume when PVC is edited while pod is using it'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        disruptive [Disruptive] [LinuxOnly] Should test that pv used in a pod that
        is deleted while the kubelet is down cleans up when the kubelet returns.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        disruptive [Disruptive] [LinuxOnly] Should test that pv used in a pod that
        is force deleted while the kubelet is down cleans up when the kubelet returns.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        disruptive [Disruptive] [LinuxOnly] Should test that pv written before kubelet
        restart is readable after restart.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the single read-only volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the single volume from pods
        on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the single volume from pods
        on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the volume and its clone from
        pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the volume and restored snapshot
        from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should mount multiple PV pointing to the same storage on the
        same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision correct filesystem size when restoring snapshot
        to larger size pvc [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with any volume data source [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with mount options'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with pvc data source'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with pvc data source (ROX mode)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with pvc data source in parallel [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with snapshot data source (ROX mode)
        [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        pvc-deletion-performance should delete volumes at scale within performance
        constraints [Slow] [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-expand should not allow expansion of pvcs without AllowVolumeExpansion
        property'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-stress multiple pods should access different volumes repeatedly [Slow]
        [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volumeMode should fail to use a volume in a pod with mismatched mode [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volumeMode should not mount / map unused volumes in a pod [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)(allowExpansion)]
        volume-expand Verify if offline PVC expansion works'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)(allowExpansion)]
        volume-expand should resize volume when PVC is edited while pod is using it'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        capacity provides storage capacity information'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup,
        new pod fsgroup applied to volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup,
        volume contents ownership changed via chgrp in first pod, new pod with different
        fsgroup applied to the volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup,
        volume contents ownership changed via chgrp in first pod, new pod with same
        fsgroup applied to the volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (Always)[LinuxOnly], rwop pod created with an initial
        fsgroup, new pod fsgroup applied to volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial
        fsgroup, new pod fsgroup applied to volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial
        fsgroup, volume contents ownership changed via chgrp in first pod, new pod
        with different fsgroup applied to the volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial
        fsgroup, volume contents ownership changed via chgrp in first pod, new pod
        with same fsgroup skips ownership changes to the volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should mount multiple PV pointing to the same storage on the
        same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision correct filesystem size when restoring snapshot
        to larger size pvc [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with any volume data source [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with mount options'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with pvc data source'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with pvc data source (ROX mode)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with pvc data source in parallel [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with snapshot data source (ROX mode)
        [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        read-write-once-pod [MinimumKubeletVersion:1.27] should block a second pod
        from using an in-use ReadWriteOncePod volume on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        read-write-once-pod [MinimumKubeletVersion:1.27] should preempt lower priority
        pods using ReadWriteOncePod volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should fail if non-existent subpath is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should fail if subpath directory is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should fail if subpath file is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should fail if subpath with backstepping is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support creating multiple subpath from same volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support existing directories when readOnly specified in the
        volumeSource'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support existing directory'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support existing single file [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support file as subpath [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support non-existent path'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support readOnly directory specified in the volumeMount'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support readOnly file specified in the volumeMount [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support restarting containers using directory as subpath [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support restarting containers using file as subpath [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should unmount if pod is force deleted while kubelet is down [Disruptive]
        [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should unmount if pod is gracefully deleted while kubelet is down
        [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should verify container cannot write to subpath readonly volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-expand should not allow expansion of pvcs without AllowVolumeExpansion
        property'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-stress multiple pods should access different volumes repeatedly [Slow]
        [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volumeIO should write files of various sizes, verify size, validate content
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (delayed binding)]
        topology should fail to schedule a pod which has topologies that conflict
        with AllowedTopologies'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (delayed binding)]
        topology should provision a volume and schedule a pod with AllowedTopologies'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext3)] volumes
        should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext3)] volumes
        should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should access to two volumes with different volume mode and retain
        data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should access to two volumes with different volume mode and retain
        data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should access to two volumes with the same volume mode and retain data
        across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should access to two volumes with the same volume mode and retain data
        across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the single read-only volume from pods on
        the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the single volume from pods on different
        node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the single volume from pods on the same
        node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the volume and its clone from pods on the
        same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the volume and restored snapshot from pods
        on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] volumes
        should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] volumes
        should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down is usable by a new pod when
        kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down is usable by a new pod with
        a different SELinux context when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down is usable by a new pod
        when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down is usable by a new pod
        with a different SELinux context when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv written
        before kubelet restart is readable after restart.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single read-only
        volume from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the volume and its
        clone from pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the volume and restored
        snapshot from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volume-lifecycle-performance should provision volumes at scale within
        performance constraints [Slow] [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volumeLimits should support volume limits [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volumeLimits should verify that all csinodes have volume limits'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volumeMode should fail to use a volume in a pod with mismatched
        mode [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (immediate binding)]
        topology should fail to schedule a pod which has topologies that conflict
        with AllowedTopologies'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (immediate binding)]
        topology should provision a volume and schedule a pod with AllowedTopologies'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)(allowExpansion)]
        [Feature:Windows] volume-expand Verify if offline PVC expansion works'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)(allowExpansion)]
        [Feature:Windows] volume-expand should resize volume when PVC is edited while
        pod is using it'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the single read-only volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the single volume from pods
        on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the single volume from pods
        on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the volume and its clone from
        pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the volume and restored snapshot
        from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should mount multiple PV pointing to the same storage on the
        same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision correct filesystem size when restoring snapshot
        to larger size pvc [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with any volume data source [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with mount options'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with pvc data source'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with pvc data source (ROX mode)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with pvc data source in parallel [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with snapshot data source (ROX mode)
        [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should fail if non-existent subpath is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should fail if subpath directory is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should fail if subpath file is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should fail if subpath with backstepping is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support creating multiple subpath from same volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support existing directories when readOnly specified in the
        volumeSource'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support existing directory'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support existing single file [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support file as subpath [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support non-existent path'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support readOnly directory specified in the volumeMount'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support readOnly file specified in the volumeMount [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support restarting containers using directory as subpath [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support restarting containers using file as subpath [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should unmount if pod is force deleted while kubelet is down [Disruptive]
        [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should unmount if pod is gracefully deleted while kubelet is down
        [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should verify container cannot write to subpath readonly volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-expand should not allow expansion of pvcs without AllowVolumeExpansion
        property'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [Feature:VolumeAttributesClass] [FeatureGate:VolumeAttributesClass]
        [Beta] should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volumeIO should write files of various sizes, verify size, validate content
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the single read-only volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the single volume from pods
        on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the single volume from pods
        on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the volume and its clone from
        pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the volume and restored snapshot
        from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (delete
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (delete
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (delete
        policy)] snapshottable-stress [Feature:VolumeSnapshotDataSource] should support
        snapshotting of many volumes repeatedly [Slow] [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (retain
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (retain
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (retain
        policy)] snapshottable-stress [Feature:VolumeSnapshotDataSource] should support
        snapshotting of many volumes repeatedly [Slow] [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Ephemeral Snapshot (delete
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Ephemeral Snapshot (delete
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Ephemeral Snapshot (retain
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Ephemeral Snapshot (retain
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral
        volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should create read/write inline
        ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should support expansion of pvcs
        created for ephemeral pvcs'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral
        volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should support two pods which have
        the same volume definition'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should create read-only inline
        ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should create read/write inline
        ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should support expansion of pvcs
        created for ephemeral pvcs'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should support multiple inline
        ephemeral volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should support two pods which
        have the same volume definition'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should create read-only inline ephemeral
        volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should create read/write inline ephemeral
        volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should support expansion of pvcs created
        for ephemeral pvcs'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should support multiple inline ephemeral
        volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should support two pods which have
        the same volume definition'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs)] volumeLimits should support volume limits [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs)] volumeLimits should verify that all csinodes have volume limits'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should be able to unmount after the subpath directory is deleted
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should fail if non-existent subpath is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should fail if subpath directory is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should fail if subpath file is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should fail if subpath with backstepping is outside the volume
        [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support creating multiple subpath from same volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support existing directories when readOnly specified in
        the volumeSource'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support existing directory'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support existing single file [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support file as subpath [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support non-existent path'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support readOnly directory specified in the volumeMount'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support restarting containers using directory as subpath
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support restarting containers using file as subpath [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should unmount if pod is force deleted while kubelet is down
        [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should unmount if pod is gracefully deleted while kubelet is
        down [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should verify container cannot write to subpath readonly volumes
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] volumeIO should write files of various sizes, verify size, validate content
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ext3)] volumes
        should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ext3)] volumes
        should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ext4)] volumes
        should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ext4)] volumes
        should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ntfs)] [Feature:Windows]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ntfs)] [Feature:Windows]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (xfs)] [Slow]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (xfs)] [Slow]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down cleans up when the kubelet
        returns.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down cleans up when the kubelet
        returns.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv written
        before kubelet restart is readable after restart.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the single read-only
        volume from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the volume and its
        clone from pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the volume and restored
        snapshot from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] volumeMode should fail to use a volume in a pod with mismatched
        mode [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should be able to unmount after the subpath directory is deleted
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should fail if non-existent subpath is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should fail if subpath directory is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should fail if subpath file is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should fail if subpath with backstepping is outside the volume
        [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support creating multiple subpath from same volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support existing directories when readOnly specified in
        the volumeSource'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support existing directory'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support existing single file [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support file as subpath [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support non-existent path'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support readOnly directory specified in the volumeMount'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support restarting containers using directory as subpath
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support restarting containers using file as subpath [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should unmount if pod is force deleted while kubelet is down
        [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should unmount if pod is gracefully deleted while kubelet is
        down [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should verify container cannot write to subpath readonly volumes
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] volumeIO should write files of various sizes, verify size, validate content
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ext3)]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ext3)]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ext4)]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ext4)]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down is usable by a new pod when
        kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down is usable by a new pod with
        a different SELinux context when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down is usable by a new pod
        when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down is usable by a new pod
        with a different SELinux context when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv written
        before kubelet restart is readable after restart.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single read-only
        volume from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the volume and its
        clone from pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the volume and restored
        snapshot from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] volumeMode should fail to use a volume in a pod with mismatched
        mode [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ntfs)]
        [Feature:Windows] volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ntfs)]
        [Feature:Windows] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (xfs)]
        [Slow] volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (xfs)]
        [Slow] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned Snapshot
        (delete policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned Snapshot
        (delete policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned Snapshot
        (retain policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned Snapshot
        (retain policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
status: {}

apiVersion: config.openshift.io/v1
kind: TestReporting
metadata:
  creationTimestamp: null
  name: cluster
spec:
  testsForFeatureGates:
  - featureGate: CRDValidationRatcheting
    tests:
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] MUST NOT fail to update a resource due
        to CRD Validation Rule errors on unchanged correlatable fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] MUST NOT fail to update a resource due
        to JSONSchema errors on unchanged correlatable fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] MUST NOT ratchet errors raised by transition
        rules'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] MUST evaluate a CRD Validation Rule
        with oldSelf = nil for new values when optionalOldSelf is true'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] MUST fail to update a resource due to
        CRD Validation Rule errors on changed fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] MUST fail to update a resource due to
        CRD Validation Rule errors on unchanged uncorrelatable fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] MUST fail to update a resource due to
        JSONSchema errors on changed fields'
    - testName: '[sig-api-machinery] CRDValidationRatcheting [Privileged:ClusterAdmin]
        [FeatureGate:CRDValidationRatcheting] MUST fail to update a resource due to
        JSONSchema errors on unchanged uncorrelatable fields'
  - featureGate: CSIVolumeHealth
    tests:
    - testName: '[sig-storage] CSI Mock Node Volume Health [FeatureGate:CSIVolumeHealth]
        [Alpha] [Feature:OffByDefault] CSI Mock Node Volume Health [Slow] return normal
        volume stats'
    - testName: '[sig-storage] CSI Mock Node Volume Health [FeatureGate:CSIVolumeHealth]
        [Alpha] [Feature:OffByDefault] CSI Mock Node Volume Health [Slow] return normal
        volume stats with abnormal volume condition'
    - testName: '[sig-storage] CSI Mock Node Volume Health [FeatureGate:CSIVolumeHealth]
        [Alpha] [Feature:OffByDefault] CSI Mock Node Volume Health [Slow] return normal
        volume stats without volume condition'
  - featureGate: ChunkSizeMiB
    tests:
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should not accept invalid ChunkSizeMiB
        value'
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should reject ChunkSizeMiB value greater
        than 5 GiB'
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should set ChunkSizeMiB value'
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should set maximum valid ChunkSizeMiB value'
    - testName: '[sig-imageregistry][OCPFeatureGate:ChunkSizeMiB][Serial][apigroup:imageregistry.operator.openshift.io]
        Image Registry Config ChunkSizeMiB should set minimum valid ChunkSizeMiB value'
  - featureGate: ClusterTrustBundle
    tests:
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be able to mount a big number (>100) of CTBs'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be able to mount a single ClusterTrustBundle by name'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be able to specify multiple CTB volumes'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be capable to mount multiple trust bundles by signer+labels can combine all
        signer CTBs with an empty label selector'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be capable to mount multiple trust bundles by signer+labels can combine multiple
        CTBs with signer name and label selector'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be capable to mount multiple trust bundles by signer+labels should start if
        only signer name and explicit label selector matches nothing + optional=true'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be capable to mount multiple trust bundles by signer+labels should start if
        only signer name and nil label selector + optional=true'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        prevent a pod from starting if:  sets optional=false and no trust bundle matches
        query'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        prevent a pod from starting if:  sets optional=false and the configured CTB
        does not exist'
  - featureGate: ClusterTrustBundleProjection
    tests:
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be able to mount a big number (>100) of CTBs'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be able to mount a single ClusterTrustBundle by name'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be able to specify multiple CTB volumes'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be capable to mount multiple trust bundles by signer+labels can combine all
        signer CTBs with an empty label selector'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be capable to mount multiple trust bundles by signer+labels can combine multiple
        CTBs with signer name and label selector'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be capable to mount multiple trust bundles by signer+labels should start if
        only signer name and explicit label selector matches nothing + optional=true'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        be capable to mount multiple trust bundles by signer+labels should start if
        only signer name and nil label selector + optional=true'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        prevent a pod from starting if:  sets optional=false and no trust bundle matches
        query'
    - testName: '[sig-auth] [FeatureGate:ClusterTrustBundle] [Beta] [Feature:OffByDefault]
        [FeatureGate:ClusterTrustBundleProjection] [Beta] [Feature:OffByDefault] should
        prevent a pod from starting if:  sets optional=false and the configured CTB
        does not exist'
  - featureGate: CoordinatedLeaderElection
    tests:
    - testName: '[sig-api-machinery] CoordinatedLeaderElection [Feature:CoordinatedLeaderElection]
        [FeatureGate:CoordinatedLeaderElection] [Beta] [Feature:OffByDefault] CLE
        Preemption'
    - testName: '[sig-api-machinery] CoordinatedLeaderElection [Feature:CoordinatedLeaderElection]
        [FeatureGate:CoordinatedLeaderElection] [Beta] [Feature:OffByDefault] CLE
        downgrade to disabled'
    - testName: '[sig-api-machinery] CoordinatedLeaderElection [Feature:CoordinatedLeaderElection]
        [FeatureGate:CoordinatedLeaderElection] [Beta] [Feature:OffByDefault] CLE
        upgrade to enabled'
    - testName: '[sig-api-machinery] CoordinatedLeaderElection [Feature:CoordinatedLeaderElection]
        [FeatureGate:CoordinatedLeaderElection] [Beta] [Feature:OffByDefault] multiple
        LeaseCandidate'
    - testName: '[sig-api-machinery] CoordinatedLeaderElection [Feature:CoordinatedLeaderElection]
        [FeatureGate:CoordinatedLeaderElection] [Beta] [Feature:OffByDefault] multiple
        LeaseCandidates third party strategy'
    - testName: '[sig-api-machinery] CoordinatedLeaderElection [Feature:CoordinatedLeaderElection]
        [FeatureGate:CoordinatedLeaderElection] [Beta] [Feature:OffByDefault] single
        LeaseCandidate'
  - featureGate: DNSNameResolver
    tests:
    - testName: '[sig-network][OCPFeatureGate:DNSNameResolver][Feature:EgressFirewall]
        when using openshift ovn-kubernetes should ensure egressfirewall with wildcard
        dns rules is created'
  - featureGate: DRAAdminAccess
    tests:
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] cluster DaemonSet with admin access [Feature:DRAAdminAccess]
        [FeatureGate:DRAAdminAccess] [Alpha] [Feature:OffByDefault] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] cluster validate ResourceClaimTemplate and ResourceClaim
        for admin access [Feature:DRAAdminAccess] [FeatureGate:DRAAdminAccess] [Alpha]
        [Feature:OffByDefault] [FeatureGate:DynamicResourceAllocation] [Beta] [Feature:OffByDefault]'
  - featureGate: DRADeviceTaints
    tests:
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with device taints [Feature:DRADeviceTaints]
        [FeatureGate:DRADeviceTaints] [Alpha] [Feature:OffByDefault] DeviceTaint keeps
        pod pending'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with device taints [Feature:DRADeviceTaints]
        [FeatureGate:DRADeviceTaints] [Alpha] [Feature:OffByDefault] DeviceTaintRule
        evicts pod'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with device taints [Feature:DRADeviceTaints]
        [FeatureGate:DRADeviceTaints] [Alpha] [Feature:OffByDefault] DeviceToleration
        enables pod scheduling'
  - featureGate: DRAResourceClaimDeviceStatus
    tests:
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node must be possible for the driver
        to update the ResourceClaim.Status.Devices once allocated [Feature:DRAResourceClaimDeviceStatus]
        [FeatureGate:DRAResourceClaimDeviceStatus] [Beta] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault]'
  - featureGate: DualReplica
    tests:
    - testName: '[sig-etcd][apigroup:config.openshift.io][OCPFeatureGate:DualReplica][Suite:openshift/two-node]
        Two Node with Fencing pods and podman containers Should validate the number
        of etcd pods and containers as configured'
    - testName: '[sig-etcd][apigroup:config.openshift.io][OCPFeatureGate:DualReplica][Suite:openshift/two-node]
        Two Node with Fencing pods and podman containers Should verify the number
        of podman-etcd containers as configured'
    - testName: '[sig-etcd][apigroup:config.openshift.io][OCPFeatureGate:DualReplica][Suite:openshift/two-node][Disruptive]
        Two Node with Fencing etcd recovery Should recover from graceful node shutdown
        with etcd member re-addition'
    - testName: '[sig-etcd][apigroup:config.openshift.io][OCPFeatureGate:DualReplica][Suite:openshift/two-node][Disruptive]
        Two Node with Fencing etcd recovery Should recover from ungraceful node shutdown
        with etcd member re-addition'
    - testName: '[sig-node][apigroup:config.openshift.io][OCPFeatureGate:DualReplica][Suite:openshift/two-node]
        Two Node with Fencing topology Should validate the number of control-planes,
        arbiters as configured'
  - featureGate: DynamicResourceAllocation
    tests:
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] ResourceSlice Controller creates slices'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] cluster DaemonSet with admin access [Feature:DRAAdminAccess]
        [FeatureGate:DRAAdminAccess] [Alpha] [Feature:OffByDefault] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] cluster must apply per-node permission checks'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] cluster must manage ResourceSlices [Slow]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] cluster supports count/resourceclaims.resource.k8s.io
        ResourceQuota'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] cluster truncates the name of a generated resource
        claim'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] cluster validate ResourceClaimTemplate and ResourceClaim
        for admin access [Feature:DRAAdminAccess] [FeatureGate:DRAAdminAccess] [Alpha]
        [Feature:OffByDefault] [FeatureGate:DynamicResourceAllocation] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] failed update'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] kubelet must call NodePrepareResources even
        if not used by any container'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] kubelet must map configs and devices to the
        right containers'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] kubelet must not run a pod if a claim is not
        ready'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] kubelet must retry NodePrepareResources'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] kubelet must unprepare resources for force-deleted
        pod'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] kubelet registers plugin'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] multiple drivers using only drapbv1beta1 work'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on multiple nodes with different ResourceSlices
        keeps pod pending because of CEL runtime errors'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on multiple nodes with network-attached resources
        supports sharing a claim sequentially [Slow]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on multiple nodes with node-local resources
        uses all resources'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node deletes generated claims when
        pod is done'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node does not delete generated claims
        when pod is restarting'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node must be possible for the driver
        to update the ResourceClaim.Status.Devices once allocated [Feature:DRAResourceClaimDeviceStatus]
        [FeatureGate:DRAResourceClaimDeviceStatus] [Beta] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node must deallocate after use'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node removes reservation from claim
        when pod is done'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node retries pod scheduling after
        creating device class'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node retries pod scheduling after
        updating device class'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node runs a pod without a generated
        resource claim'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports claim and class parameters'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports external claim referenced
        by multiple containers of multiple pods'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports external claim referenced
        by multiple pods'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports init containers'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports inline claim referenced
        by multiple containers'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports reusing resources'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports sharing a claim concurrently'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports simple pod referencing
        external resource claim'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] on single node supports simple pod referencing
        inline resource claim'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] rolling update'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] runs pod after driver starts'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] sequential update with pods replacing each other
        [Slow]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with device taints [Feature:DRADeviceTaints]
        [FeatureGate:DRADeviceTaints] [Alpha] [Feature:OffByDefault] DeviceTaint keeps
        pod pending'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with device taints [Feature:DRADeviceTaints]
        [FeatureGate:DRADeviceTaints] [Alpha] [Feature:OffByDefault] DeviceTaintRule
        evicts pod'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with device taints [Feature:DRADeviceTaints]
        [FeatureGate:DRADeviceTaints] [Alpha] [Feature:OffByDefault] DeviceToleration
        enables pod scheduling'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with prioritized list chooses the correct subrequest
        subject to constraints [Feature:DRAPrioritizedList]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with prioritized list filters config correctly
        for multiple devices [Feature:DRAPrioritizedList]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with prioritized list selects the first subrequest
        that can be satisfied [Feature:DRAPrioritizedList]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with prioritized list uses the config for the
        selected subrequest [Feature:DRAPrioritizedList]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with v1beta2 API supports requests with alternatives
        [Feature:DRAPrioritizedList]'
    - testName: '[sig-node] DRA [Feature:DynamicResourceAllocation] [FeatureGate:DynamicResourceAllocation]
        [Beta] [Feature:OffByDefault] with v1beta2 API supports simple ResourceClaim'
  - featureGate: Example
    tests:
    - testName: '[sig-arch][OCPFeatureGate:Example] should only run FeatureGated test
        when enabled'
  - featureGate: ExternalOIDC
    tests:
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] external IdP is configured should accept authentication
        via a certificate-based kubeconfig (break-glass)'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] external IdP is configured should configure
        kube-apiserver'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] external IdP is configured should map cluster
        identities correctly'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] external IdP is configured should not accept
        tokens provided by the OAuth server'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] external IdP is configured should remove the
        OpenShift OAuth stack'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] reverting to IntegratedOAuth should accept tokens
        provided by the OpenShift OAuth server'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] reverting to IntegratedOAuth should not accept
        tokens provided by an external IdP'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] reverting to IntegratedOAuth should rollout
        configuration on the kube-apiserver successfully'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDC] reverting to IntegratedOAuth should rollout
        the OpenShift OAuth stack'
  - featureGate: ExternalOIDCWithUIDAndExtraClaimMappings
    tests:
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDCWithUIDAndExtraClaimMappings] external IdP is
        configured with invalid specified UID or Extra claim mappings should reject
        admission when Extra claim expression is not compilable CEL'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDCWithUIDAndExtraClaimMappings] external IdP is
        configured with invalid specified UID or Extra claim mappings should reject
        admission when UID claim expression is not compilable CEL'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDCWithUIDAndExtraClaimMappings] external IdP is
        configured with valid specified UID or Extra claim mappings checking cluster
        identity mapping should map Extra correctly'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDCWithUIDAndExtraClaimMappings] external IdP is
        configured with valid specified UID or Extra claim mappings checking cluster
        identity mapping should map UID correctly'
    - testName: '[sig-auth][Suite:openshift/auth/external-oidc][Serial][Slow][Disruptive]
        [OCPFeatureGate:ExternalOIDCWithUIDAndExtraClaimMappings] external IdP is
        configured without specified UID or Extra claim mappings should default UID
        to the ''sub'' claim in the access token from the IdP'
  - featureGate: GatewayAPI
    tests:
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure CRD of experimental group can not be created'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure CRD of experimental group is not installed'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure CRD of standard group can not be created'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure existing CRDs can not be deleted'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure existing CRDs can not be updated'
    - testName: '[sig-network][OCPFeatureGate:GatewayAPI][Feature:Router][apigroup:gateway.networking.k8s.io]
        Verify Gateway API CRDs and ensure required CRDs should already be installed'
  - featureGate: GatewayAPIController
    tests:
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure HTTPRoute object is created'
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure LB, service, and dnsRecord are created for a Gateway object'
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure OSSM and OLM related resources are created after creating GatewayClass'
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure custom gatewayclass can be accepted'
    - testName: '[sig-network-edge][OCPFeatureGate:GatewayAPIController][Feature:Router][apigroup:gateway.networking.k8s.io]
        Ensure default gatewayclass is accepted'
  - featureGate: GitRepoVolumeDriver
    tests:
    - testName: '[sig-storage] EmptyDir wrapper volumes should not cause race condition
        when used for git_repo [FeatureGate:GitRepoVolumeDriver] [Deprecated] [Feature:OffByDefault]
        [Serial] [Slow]'
  - featureGate: HPAConfigurableTolerance
    tests:
    - testName: '[sig-autoscaling] [Feature:HPAConfigurableTolerance] [FeatureGate:HPAConfigurableTolerance]
        [Alpha] [Feature:OffByDefault] [Serial] [Slow] Horizontal pod autoscaling
        (configurable tolerance) with large configurable tolerance should not scale'
  - featureGate: HardwareSpeed
    tests:
    - testName: '[sig-etcd][OCPFeatureGate:HardwareSpeed][Serial] etcd is able to
        set the hardware speed to "" [Timeout:30m][apigroup:machine.openshift.io]'
    - testName: '[sig-etcd][OCPFeatureGate:HardwareSpeed][Serial] etcd is able to
        set the hardware speed to Slower [Timeout:30m][apigroup:machine.openshift.io]'
    - testName: '[sig-etcd][OCPFeatureGate:HardwareSpeed][Serial] etcd is able to
        set the hardware speed to Standard [Timeout:30m][apigroup:machine.openshift.io]'
  - featureGate: HighlyAvailableArbiter
    tests:
    - testName: '[sig-apps][apigroup:apps.openshift.io][OCPFeatureGate:HighlyAvailableArbiter]
        Deployments on HighlyAvailableArbiterMode topology should be created on arbiter
        nodes when arbiter node is selected'
    - testName: '[sig-apps][apigroup:apps.openshift.io][OCPFeatureGate:HighlyAvailableArbiter]
        Deployments on HighlyAvailableArbiterMode topology should be created on master
        nodes when no node selected'
    - testName: '[sig-apps][apigroup:apps.openshift.io][OCPFeatureGate:HighlyAvailableArbiter]
        Evaluate DaemonSet placement in HighlyAvailableArbiterMode topology should
        not create a DaemonSet on the Arbiter node'
    - testName: '[sig-etcd][apigroup:config.openshift.io][OCPFeatureGate:HighlyAvailableArbiter]
        Ensure etcd health and quorum in HighlyAvailableArbiterMode should have all
        etcd pods running and quorum met'
    - testName: '[sig-etcd][apigroup:config.openshift.io][OCPFeatureGate:HighlyAvailableArbiter][Suite:openshift/two-node][Disruptive]
        One master node outage is handled seamlessly should maintain etcd quorum and
        workloads with one master node down'
    - testName: '[sig-etcd][apigroup:config.openshift.io][OCPFeatureGate:HighlyAvailableArbiter][Suite:openshift/two-node][Disruptive]
        Recovery when arbiter node is down and master nodes restart should regain
        quorum after arbiter down and master nodes restart'
    - testName: '[sig-node][apigroup:config.openshift.io][OCPFeatureGate:HighlyAvailableArbiter]
        expected Master and Arbiter node counts Should validate that there are Master
        and Arbiter nodes as specified in the cluster'
    - testName: '[sig-node][apigroup:config.openshift.io][OCPFeatureGate:HighlyAvailableArbiter]
        required pods on the Arbiter node Should verify that the correct number of
        pods are running on the Arbiter node'
  - featureGate: ImageStreamImportMode
    tests:
    - testName: '[sig-cluster-lifecycle][OCPFeatureGate:ImageStreamImportMode] ClusterVersion
        API desired architecture should be valid when architecture is set in release
        payload metadata [apigroup:config.openshift.io]'
    - testName: '[sig-imageregistry][OCPFeatureGate:ImageStreamImportMode][Serial]
        ImageStream API import mode should be Legacy if the import mode specified
        in image.config.openshift.io config is Legacy [apigroup:image.openshift.io]'
    - testName: '[sig-imageregistry][OCPFeatureGate:ImageStreamImportMode][Serial]
        ImageStream API import mode should be PreserveOriginal if the import mode
        specified in image.config.openshift.io config is PreserveOriginal [apigroup:image.openshift.io]'
    - testName: '[sig-imageregistry][OCPFeatureGate:ImageStreamImportMode][Serial]
        ImageStream API import mode should be PreserveOriginal or Legacy depending
        on desired.architecture field in the CV [apigroup:image.openshift.io]'
  - featureGate: ImageVolume
    tests:
    - testName: '[sig-node] [FeatureGate:ImageVolume] ImageVolume should fail when
        image does not exist'
    - testName: '[sig-node] [FeatureGate:ImageVolume] ImageVolume should handle multiple
        image volumes'
    - testName: '[sig-node] [FeatureGate:ImageVolume] ImageVolume should succeed if
        image volume is not existing but unused'
    - testName: '[sig-node] [FeatureGate:ImageVolume] ImageVolume should succeed with
        multiple pods and same image on the same node'
    - testName: '[sig-node] [FeatureGate:ImageVolume] ImageVolume should succeed with
        pod and pull policy of Always'
    - testName: '[sig-node] [FeatureGate:ImageVolume] ImageVolume when subPath is
        used should fail to mount image volume with invalid subPath'
    - testName: '[sig-node] [FeatureGate:ImageVolume] ImageVolume when subPath is
        used should handle image volume with subPath'
  - featureGate: InPlacePodVerticalScaling
    tests:
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] BestEffort QoS pod - empty resize'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] BestEffort pod - try requesting memory, expect error'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod with memory requests + limits - decrease memory limit'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, mixed containers - add limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, mixed containers - add requests'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, mixed containers - scale up cpu and memory'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container - decrease CPU (NotRequired) & memory
        (RestartContainer)'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container - decrease memory request (RestartContainer
        memory resize policy)'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container - increase memory request (NoRestart
        memory resize policy)'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with CPU requests + limits, cpu requests
        - remove memory requests'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - decrease CPU limits only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - decrease CPU requests and increase CPU limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - decrease CPU requests and increase memory limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - decrease CPU requests and limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - decrease CPU requests only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - decrease memory requests and increase CPU limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - decrease memory requests and increase memory limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - decrease memory requests only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - increase CPU limits only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - increase CPU requests and decrease CPU limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - increase CPU requests and limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - increase CPU requests only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - increase memory limits only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - increase memory requests and decrease CPU limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - increase memory requests and limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - increase memory requests only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - remove CPU limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests + limits
        - remove memory limits'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests - decrease
        memory request'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu & memory requests - increase
        cpu request'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with cpu requests and limits - resize
        with equivalents'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container with memory requests + limits, cpu
        requests - remove CPU requests'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container, one restartable init container -
        decrease init container CPU only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container, one restartable init container -
        decrease init container memory requests only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container, one restartable init container -
        increase init container CPU & memory'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container, one restartable init container -
        increase init container CPU only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, one container, one restartable init container -
        increase init container memory only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, three containers - decrease c1 resources, increase
        c2 resources, no change for c3 (net increase for pod)'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, three containers - increase c1 resources, no change
        for c2, decrease c3 resources (no net change for pod)'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, three containers - no change for c1, increase c2
        resources, decrease c3 (net decrease for pod)'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Burstable QoS pod, two containers with cpu & memory requests + limits
        - reorder containers'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Guaranteed QoS pod, one container - decrease CPU only'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Guaranteed QoS pod, one container - increase CPU & memory'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Guaranteed QoS pod, one container - increase CPU & memory with an extended
        resource'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Guaranteed QoS pod, one container - increase CPU (NotRequired) & memory
        (RestartContainer)'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Guaranteed QoS pod, one container, one restartable init container -
        decrease init container CPU'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Guaranteed QoS pod, one restartable init container - decrease CPU &
        increase memory'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Guaranteed QoS pod, one restartable init container - increase CPU &
        memory'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] Guaranteed QoS pod, three containers (c1, c2, c3) - increase: CPU (c1,c3),
        memory (c2, c3) ; decrease: CPU (c2)'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] pod-resize-limit-ranger-test'
    - testName: '[sig-node] Pod InPlace Resize Container [FeatureGate:InPlacePodVerticalScaling]
        [Beta] pod-resize-resource-quota-test'
    - testName: '[sig-node] [Serial] Pod InPlace Resize Container (scheduler-focused)
        [FeatureGate:InPlacePodVerticalScaling] [Beta] pod-resize-scheduler-tests'
  - featureGate: MachineConfigNodes
    tests:
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        All Nodes in a Custom Pool should have the PinnedImages in PIS [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        All Nodes in a custom Pool should have the PinnedImages even after Garbage
        Collection [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        All Nodes in a standard Pool should have the PinnedImages PIS [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        Invalid PIS leads to degraded MCN in a custom Pool [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        Invalid PIS leads to degraded MCN in a standard Pool [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:MachineConfigNodes]
        [Serial][Slow]Should properly create and remove MCN on node creation and deletion
        [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:MachineConfigNodes]
        [Serial][Slow]Should properly report MCN conditions on node degrade [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:MachineConfigNodes]
        [Suite:openshift/conformance/parallel]Should have MCN properties matching
        associated node properties for nodes in default MCPs [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:MachineConfigNodes]
        [Suite:openshift/conformance/parallel]Should properly block MCN updates by
        impersonation of the MCD SA [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:MachineConfigNodes]
        [Suite:openshift/conformance/parallel]Should properly block MCN updates from
        a MCD that is not the associated one [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:MachineConfigNodes]
        [Suite:openshift/conformance/serial][Serial]Should have MCN properties matching
        associated node properties for nodes in custom MCPs [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:MachineConfigNodes]
        [Suite:openshift/conformance/serial][Serial]Should properly transition through
        MCN conditions on rebootless node update [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:MachineConfigNodes]
        [Suite:openshift/conformance/serial][Serial]Should properly update the MCN
        from the associated MCD [apigroup:machineconfiguration.openshift.io]'
  - featureGate: ManagedBootImages
    tests:
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImages][Serial]
        Should degrade on a MachineSet with an OwnerReference [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImages][Serial]
        Should not update boot images on any MachineSet when not configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImages][Serial]
        Should stamp coreos-bootimages configmap with current MCO hash and release
        version [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImages][Serial]
        Should update boot images on all MachineSets when configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImages][Serial]
        Should update boot images only on MachineSets that are opted in [apigroup:machineconfiguration.openshift.io]'
  - featureGate: ManagedBootImagesAWS
    tests:
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial]
        Should degrade on a MachineSet with an OwnerReference [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial]
        Should not update boot images on any MachineSet when not configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial]
        Should stamp coreos-bootimages configmap with current MCO hash and release
        version [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial]
        Should update boot images on all MachineSets when configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:ManagedBootImagesAWS][Serial]
        Should update boot images only on MachineSets that are opted in [apigroup:machineconfiguration.openshift.io]'
  - featureGate: ManagedBootImagesvSphere
    tests:
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:ManagedBootImagesvSphere][Serial]
        Should degrade on a MachineSet with an OwnerReference [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:ManagedBootImagesvSphere][Serial]
        Should not update boot images on any MachineSet when not configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:ManagedBootImagesvSphere][Serial]
        Should stamp coreos-bootimages configmap with current MCO hash and release
        version [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:ManagedBootImagesvSphere][Serial]
        Should update boot images on all MachineSets when configured [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:ManagedBootImagesvSphere][Serial]
        Should update boot images only on MachineSets that are opted in [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][sig-mco][OCPFeatureGate:ManagedBootImagesvSphere][Serial]
        Should upload the latest bootimage to the appropriate vCentre [apigroup:machineconfiguration.openshift.io]'
  - featureGate: MetricsCollectionProfiles
    tests:
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set in a heterogeneous environment, should
        expose information about the applied collection profile using meta-metrics'
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set in a heterogeneous environment, should
        have at least one implementation for each collection profile'
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set in a heterogeneous environment, should
        revert to default collection profile when an empty collection profile value
        is specified'
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set in a homogeneous minimal environment,
        should hide default metrics'
    - testName: '[sig-instrumentation][OCPFeatureGate:MetricsCollectionProfiles][Serial]
        The collection profiles feature-set initially, in a homogeneous default environment,
        should expose default metrics'
  - featureGate: MutatingAdmissionPolicy
    tests:
    - testName: '[sig-api-machinery] MutatingAdmissionPolicy [Privileged:ClusterAdmin]
        [Feature:MutatingAdmissionPolicy] [FeatureGate:MutatingAdmissionPolicy] [Alpha]
        [Feature:OffByDefault] should mutate a Deployment'
    - testName: '[sig-api-machinery] MutatingAdmissionPolicy [Privileged:ClusterAdmin]
        [Feature:MutatingAdmissionPolicy] [FeatureGate:MutatingAdmissionPolicy] [Alpha]
        [Feature:OffByDefault] should support MutatingAdmissionPolicy API operations'
    - testName: '[sig-api-machinery] MutatingAdmissionPolicy [Privileged:ClusterAdmin]
        [Feature:MutatingAdmissionPolicy] [FeatureGate:MutatingAdmissionPolicy] [Alpha]
        [Feature:OffByDefault] should support MutatingAdmissionPolicyBinding API operations'
  - featureGate: NetworkDiagnosticsConfig
    tests:
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        be enabled by default'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        function without any target pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        move the source diagnostics pods based on the new selector and tolerations'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        move the target diagnostics pods based on the new selector and tolerations'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        remove all network diagnostics pods when disabled'
    - testName: '[sig-network][OCPFeatureGate:NetworkDiagnosticsConfig][Serial] Should
        set the condition to false if there are no nodes able to host the source pods'
  - featureGate: NetworkSegmentation
    tests:
    - testName: '[sig-network][Feature:Layer2LiveMigration][OCPFeatureGate:NetworkSegmentation][Suite:openshift/network/virtualization]
        primary UDN smoke test when using openshift ovn-kubernetes assert the primary
        UDN feature works as expected'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions does not mirror EndpointSlices in namespaces
        not using user defined primary networks L2 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions does not mirror EndpointSlices in namespaces
        not using user defined primary networks L3 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions mirrors EndpointSlices managed by the default
        controller for namespaces with user defined primary networks L2 primary UDN,
        cluster-networked pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions mirrors EndpointSlices managed by the default
        controller for namespaces with user defined primary networks L2 primary UDN,
        host-networked pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions mirrors EndpointSlices managed by the default
        controller for namespaces with user defined primary networks L3 primary UDN,
        cluster-networked pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        NetworkAttachmentDefinitions mirrors EndpointSlices managed by the default
        controller for namespaces with user defined primary networks L3 primary UDN,
        host-networked pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork does not mirror EndpointSlices in namespaces not using
        user defined primary networks L2 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork does not mirror EndpointSlices in namespaces not using
        user defined primary networks L3 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork mirrors EndpointSlices managed by the default controller
        for namespaces with user defined primary networks L2 primary UDN, cluster-networked
        pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork mirrors EndpointSlices managed by the default controller
        for namespaces with user defined primary networks L2 primary UDN, host-networked
        pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork mirrors EndpointSlices managed by the default controller
        for namespaces with user defined primary networks L3 primary UDN, cluster-networked
        pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        EndpointSlices mirroring when using openshift ovn-kubernetes created using
        UserDefinedNetwork mirrors EndpointSlices managed by the default controller
        for namespaces with user defined primary networks L3 primary UDN, host-networked
        pods'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        Network Policies when using openshift ovn-kubernetes allow ingress traffic
        to one pod from a particular namespace in L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        Network Policies when using openshift ovn-kubernetes allow ingress traffic
        to one pod from a particular namespace in L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        Network Policies when using openshift ovn-kubernetes pods within namespace
        should be isolated when deny policy is present in L2 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        Network Policies when using openshift ovn-kubernetes pods within namespace
        should be isolated when deny policy is present in L3 dualstack primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        pod connected to ClusterUserDefinedNetwork CR & managed NADs cannot be deleted
        when being used'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        should create NAD according to spec in each target namespace and report active
        namespaces'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        should create NAD in new created namespaces that apply to namespace-selector'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        when CR is deleted, should delete all managed NAD in each target namespace'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        when namespace-selector is mutated should create NAD in namespaces that apply
        to mutated namespace-selector'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes ClusterUserDefinedNetwork CRD Controller
        when namespace-selector is mutated should delete managed NAD in namespaces
        that no longer apply to namespace-selector'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes UDN Pod should react to k8s.ovn.org/open-default-ports
        annotations changes'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes UserDefinedNetwork CRD controller pod
        connected to UserDefinedNetwork cannot be deleted when being used'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes UserDefinedNetwork CRD controller should
        create NetworkAttachmentDefinition according to spec'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes UserDefinedNetwork CRD controller should
        delete NetworkAttachmentDefinition when UserDefinedNetwork is deleted'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        can perform east/west traffic between nodes for two pods connected over a
        L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        can perform east/west traffic between nodes two pods connected over a L3 primary
        UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        is isolated from the default network with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        is isolated from the default network with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        isolates overlapping CIDRs with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using ClusterUserDefinedNetwork
        isolates overlapping CIDRs with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        can perform east/west traffic between nodes for two pods connected over a
        L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        can perform east/west traffic between nodes two pods connected over a L3 primary
        UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        is isolated from the default network with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        is isolated from the default network with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        isolates overlapping CIDRs with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions
        isolates overlapping CIDRs with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork can perform
        east/west traffic between nodes for two pods connected over a L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork can perform
        east/west traffic between nodes two pods connected over a L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork is isolated
        from the default network with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork is isolated
        from the default network with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork isolates
        overlapping CIDRs with L2 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes created using UserDefinedNetwork isolates
        overlapping CIDRs with L3 primary UDN'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes when primary network exist, ClusterUserDefinedNetwork
        status should report not-ready'
    - testName: '[sig-network][OCPFeatureGate:NetworkSegmentation][Feature:UserDefinedPrimaryNetworks]
        when using openshift ovn-kubernetes when primary network exist, UserDefinedNetwork
        status should report not-ready'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VM attached to a primary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VM attached to a primary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VMI attached to a primary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VM attached to a primary UDN
        is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VM attached to a primary UDN
        is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VMI attached to a primary UDN
        is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VM attached to a secondary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VM attached to a secondary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VMI attached to a secondary UDN is migrated between nodes'
  - featureGate: NewOLM
    tests:
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 Catalogs
        should be installed'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 New
        Catalog Install should fail to install if it has an invalid reference'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 openshift-certified-operators
        Catalog should serve FBC via the /v1/api/all endpoint'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 openshift-community-operators
        Catalog should serve FBC via the /v1/api/all endpoint'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 openshift-redhat-marketplace
        Catalog should serve FBC via the /v1/api/all endpoint'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLM][Skipped:Disconnected] OLMv1 openshift-redhat-operators
        Catalog should serve FBC via the /v1/api/all endpoint'
  - featureGate: NewOLMCatalogdAPIV1Metas
    tests:
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMCatalogdAPIV1Metas][Skipped:Disconnected]
        OLMv1 openshift-certified-operators Catalog should serve FBC via the /v1/api/metas
        endpoint'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMCatalogdAPIV1Metas][Skipped:Disconnected]
        OLMv1 openshift-community-operators Catalog should serve FBC via the /v1/api/metas
        endpoint'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMCatalogdAPIV1Metas][Skipped:Disconnected]
        OLMv1 openshift-redhat-marketplace Catalog should serve FBC via the /v1/api/metas
        endpoint'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMCatalogdAPIV1Metas][Skipped:Disconnected]
        OLMv1 openshift-redhat-operators Catalog should serve FBC via the /v1/api/metas
        endpoint'
  - featureGate: NewOLMPreflightPermissionChecks
    tests:
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMPreflightPermissionChecks][Skipped:Disconnected]
        OLMv1 operator preflight checks should report error when {ClusterRoleBindings}
        are not specified'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMPreflightPermissionChecks][Skipped:Disconnected]
        OLMv1 operator preflight checks should report error when {ConfigMap:resourceNames}
        are not all specified'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMPreflightPermissionChecks][Skipped:Disconnected]
        OLMv1 operator preflight checks should report error when {clusterextension/finalizer}
        is not specified'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMPreflightPermissionChecks][Skipped:Disconnected]
        OLMv1 operator preflight checks should report error when {create} verb is
        not specified'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMPreflightPermissionChecks][Skipped:Disconnected]
        OLMv1 operator preflight checks should report error when {escalate, bind}
        is not specified'
    - testName: '[sig-olmv1][OCPFeatureGate:NewOLMPreflightPermissionChecks][Skipped:Disconnected]
        OLMv1 operator preflight checks should report error when {services} are not
        specified'
  - featureGate: OrderedNamespaceDeletion
    tests:
    - testName: '[sig-api-machinery] OrderedNamespaceDeletion namespace deletion should
        delete pod first [Feature:OrderedNamespaceDeletion] [FeatureGate:OrderedNamespaceDeletion]
        [Beta] [Serial]'
  - featureGate: PersistentIPsForVirtualization
    tests:
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VM attached to a primary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VM attached to a primary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip [OCPFeatureGate:NetworkSegmentation]
        when the VMI attached to a primary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip when the VM attached
        to a secondary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip when the VM attached
        to a secondary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using NetworkAttachmentDefinitions
        [Suite:openshift/network/virtualization] should keep ip when the VMI attached
        to a secondary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VM attached to a primary UDN
        is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VM attached to a primary UDN
        is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        [OCPFeatureGate:NetworkSegmentation] when the VMI attached to a primary UDN
        is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VM attached to a secondary UDN is migrated between nodes'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VM attached to a secondary UDN is restarted'
    - testName: '[sig-network][OCPFeatureGate:PersistentIPsForVirtualization][Feature:Layer2LiveMigration]
        Kubevirt Virtual Machines when using openshift ovn-kubernetes with user defined
        networks and persistent ips configured created using [OCPFeatureGate:NetworkSegmentation]
        UserDefinedNetwork [Suite:openshift/network/virtualization] should keep ip
        when the VMI attached to a secondary UDN is migrated between nodes'
  - featureGate: PinnedImages
    tests:
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        All Nodes in a Custom Pool should have the PinnedImages in PIS [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        All Nodes in a custom Pool should have the PinnedImages even after Garbage
        Collection [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        All Nodes in a standard Pool should have the PinnedImages PIS [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        Invalid PIS leads to degraded MCN in a custom Pool [apigroup:machineconfiguration.openshift.io]'
    - testName: '[Suite:openshift/machine-config-operator/disruptive][Suite:openshift/conformance/serial][sig-mco][OCPFeatureGate:PinnedImages][OCPFeatureGate:MachineConfigNodes][Serial]
        Invalid PIS leads to degraded MCN in a standard Pool [apigroup:machineconfiguration.openshift.io]'
  - featureGate: PodObservedGenerationTracking
    tests:
    - testName: '[sig-node] Pods Extended (pod generation) [Feature:PodObservedGenerationTracking]
        [FeatureGate:PodObservedGenerationTracking] [Alpha] [Feature:OffByDefault]
        Pod Generation custom-set generation on new pods and graceful delete'
    - testName: '[sig-node] Pods Extended (pod generation) [Feature:PodObservedGenerationTracking]
        [FeatureGate:PodObservedGenerationTracking] [Alpha] [Feature:OffByDefault]
        Pod Generation issue 500 podspec updates and verify generation and observedGeneration
        eventually converge'
    - testName: '[sig-node] Pods Extended (pod generation) [Feature:PodObservedGenerationTracking]
        [FeatureGate:PodObservedGenerationTracking] [Alpha] [Feature:OffByDefault]
        Pod Generation pod generation should start at 1 and increment per update'
    - testName: '[sig-node] Pods Extended (pod generation) [Feature:PodObservedGenerationTracking]
        [FeatureGate:PodObservedGenerationTracking] [Alpha] [Feature:OffByDefault]
        Pod Generation pod observedGeneration field set in pod conditions'
    - testName: '[sig-node] Pods Extended (pod generation) [Feature:PodObservedGenerationTracking]
        [FeatureGate:PodObservedGenerationTracking] [Alpha] [Feature:OffByDefault]
        Pod Generation pod rejected by kubelet should have updated generation and
        observedGeneration'
  - featureGate: PreferSameTrafficDistribution
    tests:
    - testName: '[sig-network] Traffic Distribution should route traffic correctly
        between pods on multiple nodes when using PreferSameZone [FeatureGate:PreferSameTrafficDistribution]
        [Alpha] [Feature:OffByDefault]'
    - testName: '[sig-network] Traffic Distribution should route traffic to an endpoint
        in the same zone when using PreferSameZone [FeatureGate:PreferSameTrafficDistribution]
        [Alpha] [Feature:OffByDefault]'
    - testName: '[sig-network] Traffic Distribution should route traffic to an endpoint
        on the same node or fall back to same zone when using PreferSameNode [FeatureGate:PreferSameTrafficDistribution]
        [Alpha] [Feature:OffByDefault]'
    - testName: '[sig-network] Traffic Distribution should route traffic to an endpoint
        on the same node when using PreferSameNode and fall back when the endpoint
        becomes unavailable [FeatureGate:PreferSameTrafficDistribution] [Alpha] [Feature:OffByDefault]'
  - featureGate: ProcMountType
    tests:
    - testName: '[Suite:openshift/usernamespace] [sig-node] [FeatureGate:ProcMountType]
        [FeatureGate:UserNamespacesSupport] nested container should pass podman localsystem
        test in baseline mode'
  - featureGate: RecoverVolumeExpansionFailure
    tests:
    - testName: '[sig-storage] CSI Mock volume expansion Expansion with recovery [Feature:RecoverVolumeExpansionFailure]
        [FeatureGate:RecoverVolumeExpansionFailure] [Beta] recovery should be possible
        for node-only expanded volumes with final error'
    - testName: '[sig-storage] CSI Mock volume expansion Expansion with recovery [Feature:RecoverVolumeExpansionFailure]
        [FeatureGate:RecoverVolumeExpansionFailure] [Beta] recovery should be possible
        for node-only expanded volumes with infeasible error'
    - testName: '[sig-storage] CSI Mock volume expansion Expansion with recovery [Feature:RecoverVolumeExpansionFailure]
        [FeatureGate:RecoverVolumeExpansionFailure] [Beta] recovery should not be
        possible in partially expanded volumes'
    - testName: '[sig-storage] CSI Mock volume expansion Expansion with recovery [Feature:RecoverVolumeExpansionFailure]
        [FeatureGate:RecoverVolumeExpansionFailure] [Beta] should allow recovery if
        controller expansion fails with final error'
    - testName: '[sig-storage] CSI Mock volume expansion Expansion with recovery [Feature:RecoverVolumeExpansionFailure]
        [FeatureGate:RecoverVolumeExpansionFailure] [Beta] should allow recovery if
        controller expansion fails with infeasible error'
    - testName: '[sig-storage] CSI Mock volume expansion Expansion with recovery [Feature:RecoverVolumeExpansionFailure]
        [FeatureGate:RecoverVolumeExpansionFailure] [Beta] should record target size
        in allocated resources'
  - featureGate: RelaxedDNSSearchValidation
    tests:
    - testName: '[sig-network] DNS [Feature:RelaxedDNSSearchValidation] [FeatureGate:RelaxedDNSSearchValidation]
        [Beta] should work with a search path containing an underscore and a search
        path with a single dot'
  - featureGate: RouteAdvertisements
    tests:
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [EgressIP] Advertising EgressIP [apigroup:user.openshift.io][apigroup:security.openshift.io]
        For cluster user defined networks When the network topology is Layer 3 UDN
        pods should have the assigned EgressIPs and EgressIPs can be created, updated
        and deleted [apigroup:route.openshift.io] When the network is IPv4'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [EgressIP] Advertising EgressIP [apigroup:user.openshift.io][apigroup:security.openshift.io]
        For cluster user defined networks When the network topology is Layer 3 UDN
        pods should have the assigned EgressIPs and EgressIPs can be created, updated
        and deleted [apigroup:route.openshift.io] When the network is IPv6'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [EgressIP] Advertising EgressIP [apigroup:user.openshift.io][apigroup:security.openshift.io]
        For the default network Pods should have the assigned EgressIPs and EgressIPs
        can be created, updated and deleted [apigroup:route.openshift.io] When the
        network is IPv4'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [EgressIP] Advertising EgressIP [apigroup:user.openshift.io][apigroup:security.openshift.io]
        For the default network Pods should have the assigned EgressIPs and EgressIPs
        can be created, updated and deleted [apigroup:route.openshift.io] When the
        network is IPv6'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising a cluster user
        defined network [apigroup:user.openshift.io][apigroup:security.openshift.io]
        Over a VRF-Lite configuration Pods should be able to communicate on a secondary
        network [Timeout:30m]'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising a cluster user
        defined network [apigroup:user.openshift.io][apigroup:security.openshift.io]
        Over the default VRF When the network topology is Layer 2 External host should
        be able to query route advertised pods by the pod IP'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising a cluster user
        defined network [apigroup:user.openshift.io][apigroup:security.openshift.io]
        Over the default VRF When the network topology is Layer 2 Pods should communicate
        with external host without being SNATed'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising a cluster user
        defined network [apigroup:user.openshift.io][apigroup:security.openshift.io]
        Over the default VRF When the network topology is Layer 3 External host should
        be able to query route advertised pods by the pod IP'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising a cluster user
        defined network [apigroup:user.openshift.io][apigroup:security.openshift.io]
        Over the default VRF When the network topology is Layer 3 Pods should communicate
        with external host without being SNATed'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising the default network
        [apigroup:user.openshift.io][apigroup:security.openshift.io] External host
        should be able to query route advertised pods by the pod IP'
    - testName: '[sig-network][OCPFeatureGate:RouteAdvertisements][Feature:RouteAdvertisements][apigroup:operator.openshift.io]
        when using openshift ovn-kubernetes [PodNetwork] Advertising the default network
        [apigroup:user.openshift.io][apigroup:security.openshift.io] Pods should communicate
        with external host without being SNATed'
  - featureGate: RouteExternalCertificate
    tests:
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate if inline
        certificate is also present'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate if the
        route termination type is Passthrough'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate if the
        secret is in a different namespace'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate if the
        secret is not of type kubernetes.io/tls'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with invalid setup the router should not support external certificate without
        proper permissions'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and routes
        are reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to remove the external certificate and again re-add the same external
        certificate then also the route is reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to remove the external certificate then also the route is reachable
        and serves the default certificate'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use new external certificate then also the route is reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use new external certificate, but RBAC permissions are not added
        route update is rejected'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use new external certificate, but secret does not exist route
        update is rejected'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use new external certificate, but secret is not of type kubernetes.io/tls
        route update is rejected'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use same external certificate then also the route is reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the route
        is updated to use same external certificate, but RBAC permissions are dropped
        route update is rejected'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is deleted and re-created again but RBAC permissions are dropped then routes
        are not reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is deleted and re-created again then routes are reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is deleted then routes are not reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is updated but RBAC permissions are dropped then routes are not reachable'
    - testName: '[sig-network][OCPFeatureGate:RouteExternalCertificate][Feature:Router][apigroup:route.openshift.io]
        with valid setup the router should support external certificate and the secret
        is updated then also routes are reachable'
  - featureGate: SELinuxChangePolicy
    tests:
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for RWO volume with
        SELinuxMount disabled and Recursive policy [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for RWO volume with
        only SELinuxChangePolicy enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [Feature:SELinuxMountReadWriteOncePodOnly] [FeatureGate:SELinuxChangePolicy]
        [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWO volume with SELinuxMount
        enabled and MountOption policy [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWO volume with SELinuxMount
        enabled and nil policy [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with MountOption policy and a different context on RWOP volume
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different context on RWO volume and SELinuxMount enabled
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different context on RWOP volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different context on RWX volume and SELinuxMount enabled
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (Recursive + MountOption) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount] [Beta]
        [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (Recursive + nil) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (nil + Recursive) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with Recursive policy and a different context on RWX volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with a different policy RWX volume (MountOption + MountOption)
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with a different policy RWX volume (nil + MountOption) [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with the same context on RWO volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] warning is bumped
        on two Pods with a different context on RWO volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] warning is bumped
        on two Pods with different policies on RWO volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] warning is not
        bumped on two Pods with Recursive policy and a different context on RWO volume
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] warning is not
        bumped on two Pods with the same context on RWO volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
  - featureGate: SELinuxMount
    tests:
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for RWO volume with
        SELinuxMount disabled and Recursive policy [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not unstage RWO volume when starting a second pod
        with the same SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWO volume with SELinuxMount
        enabled and MountOption policy [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWO volume with SELinuxMount
        enabled and nil policy [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWO volume when starting a second pod with
        different SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWO volume when starting a second pod with
        different policy (MountOption -> Recursive) [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWO volume when starting a second pod with
        different policy (Recursive -> MountOption) [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with MountOption policy and a different context on RWOP volume
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different context on RWO volume and SELinuxMount enabled
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different context on RWX volume and SELinuxMount enabled
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (Recursive + MountOption) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount] [Beta]
        [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (Recursive + nil) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (nil + Recursive) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with Recursive policy and a different context on RWX volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with a different policy RWX volume (MountOption + MountOption)
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with a different policy RWX volume (nil + MountOption) [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with the same context on RWO volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
  - featureGate: SELinuxMountReadWriteOncePod
    tests:
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should add SELinux mount option to existing mount options
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for CSI driver that
        does not support SELinux mount [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for Pod without SELinux
        context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for RWO volume with
        SELinuxMount disabled [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for RWO volume with
        SELinuxMount disabled and Recursive policy [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not pass SELinux mount option for RWO volume with
        only SELinuxChangePolicy enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [Feature:SELinuxMountReadWriteOncePodOnly] [FeatureGate:SELinuxChangePolicy]
        [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not unstage RWO volume when starting a second pod
        with the same SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should not unstage RWOP volume when starting a second pod
        with the same SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWO volume with SELinuxMount
        enabled and MountOption policy [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWO volume with SELinuxMount
        enabled and nil policy [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should pass SELinux mount option for RWOP volume and Pod
        with SELinux context set [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWO volume when starting a second pod with
        different SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWO volume when starting a second pod with
        different policy (MountOption -> Recursive) [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWO volume when starting a second pod with
        different policy (Recursive -> MountOption) [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount SELinuxMount [LinuxOnly]
        [Feature:SELinux] should unstage RWOP volume when starting a second pod with
        different SELinux context [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with MountOption policy and a different context on RWOP volume
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different context on RWO volume and SELinuxMount enabled
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different context on RWOP volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different context on RWX volume and SELinuxMount enabled
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (Recursive + MountOption) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta]
        [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount] [Beta]
        [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (Recursive + nil) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is bumped
        on two Pods with a different policy on RWO volume and SELinuxMount enabled
        (nil + Recursive) [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with Recursive policy and a different context on RWX volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with a different policy RWX volume (MountOption + MountOption)
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxMount] [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with a different policy RWX volume (nil + MountOption) [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] error is not bumped
        on two Pods with the same context on RWO volume and SELinuxMount enabled [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [FeatureGate:SELinuxMount]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] warning is bumped
        on two Pods with a different context on RWO volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] warning is bumped
        on two Pods with different policies on RWO volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] warning is not
        bumped on two Pods with Recursive policy and a different context on RWO volume
        [FeatureGate:SELinuxMountReadWriteOncePod] [Beta] [FeatureGate:SELinuxChangePolicy]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
    - testName: '[sig-storage] CSI Mock selinux on mount metrics and SELinuxWarningController
        SELinuxMount metrics [LinuxOnly] [Feature:SELinux] [Serial] warning is not
        bumped on two Pods with the same context on RWO volume [FeatureGate:SELinuxMountReadWriteOncePod]
        [Beta] [FeatureGate:SELinuxChangePolicy] [Beta] [Feature:SELinuxMountReadWriteOncePodOnly]'
  - featureGate: SchedulerAsyncPreemption
    tests:
    - testName: '[sig-scheduling] SchedulerPreemption [Serial] validates various priority
        Pods preempt expectedly with the async preemption [Feature:SchedulerAsyncPreemption]
        [FeatureGate:SchedulerAsyncPreemption] [Beta]'
  - featureGate: ShortCertRotation
    tests:
    - testName: '[sig-arch][Late][Jira:"kube-apiserver"] [OCPFeatureGate:ShortCertRotation]
        all certificates should expire in no more than 8 hours'
  - featureGate: SigstoreImageVerification
    tests:
    - testName: '[sig-imagepolicy][OCPFeatureGate:SigstoreImageVerification][Serial]
        Should fail clusterimagepolicy signature validation root of trust does not
        match the identity in the signature'
    - testName: '[sig-imagepolicy][OCPFeatureGate:SigstoreImageVerification][Serial]
        Should fail clusterimagepolicy signature validation when scope in allowedRegistries
        list does not skip signature verification'
    - testName: '[sig-imagepolicy][OCPFeatureGate:SigstoreImageVerification][Serial]
        Should fail imagepolicy signature validation in different namespaces root
        of trust does not match the identity in the signature'
    - testName: '[sig-imagepolicy][OCPFeatureGate:SigstoreImageVerification][Serial]
        Should pass clusterimagepolicy signature validation with signed image'
    - testName: '[sig-imagepolicy][OCPFeatureGate:SigstoreImageVerification][Serial]
        Should pass imagepolicy signature validation with signed image in namespaces'
  - featureGate: SupplementalGroupsPolicy
    tests:
    - testName: '[sig-node] Security Context SupplementalGroupsPolicy [LinuxOnly]
        [Feature:SupplementalGroupsPolicy] [FeatureGate:SupplementalGroupsPolicy]
        [Beta] when SupplementalGroupsPolicy nil in SecurityContext when if the container''s
        primary UID belongs to some groups in the image when scheduled node does not
        support SupplementalGroupsPolicy it should add SupplementalGroups to them
        [LinuxOnly]'
    - testName: '[sig-node] Security Context SupplementalGroupsPolicy [LinuxOnly]
        [Feature:SupplementalGroupsPolicy] [FeatureGate:SupplementalGroupsPolicy]
        [Beta] when SupplementalGroupsPolicy nil in SecurityContext when if the container''s
        primary UID belongs to some groups in the image when scheduled node supports
        SupplementalGroupsPolicy it should add SupplementalGroups to them [LinuxOnly]'
    - testName: '[sig-node] Security Context SupplementalGroupsPolicy [LinuxOnly]
        [Feature:SupplementalGroupsPolicy] [FeatureGate:SupplementalGroupsPolicy]
        [Beta] when SupplementalGroupsPolicy was set to Merge in PodSpec when the
        container''s primary UID belongs to some groups in the image when scheduled
        node does not support SupplementalGroupsPolicy it should add SupplementalGroups
        to them [LinuxOnly]'
    - testName: '[sig-node] Security Context SupplementalGroupsPolicy [LinuxOnly]
        [Feature:SupplementalGroupsPolicy] [FeatureGate:SupplementalGroupsPolicy]
        [Beta] when SupplementalGroupsPolicy was set to Merge in PodSpec when the
        container''s primary UID belongs to some groups in the image when scheduled
        node supports SupplementalGroupsPolicy it should add SupplementalGroups to
        them [LinuxOnly]'
    - testName: '[sig-node] Security Context SupplementalGroupsPolicy [LinuxOnly]
        [Feature:SupplementalGroupsPolicy] [FeatureGate:SupplementalGroupsPolicy]
        [Beta] when SupplementalGroupsPolicy was set to Strict in PodSpec when the
        container''s primary UID belongs to some groups in the image when scheduled
        node does not support SupplementalGroupsPolicy it should reject the pod [LinuxOnly]'
    - testName: '[sig-node] Security Context SupplementalGroupsPolicy [LinuxOnly]
        [Feature:SupplementalGroupsPolicy] [FeatureGate:SupplementalGroupsPolicy]
        [Beta] when SupplementalGroupsPolicy was set to Strict in PodSpec when the
        container''s primary UID belongs to some groups in the image when scheduled
        node supports SupplementalGroupsPolicy it should NOT add SupplementalGroups
        to them [LinuxOnly]'
  - featureGate: UpgradeStatus
    tests:
    - testName: '[sig-cli][OCPFeatureGate:UpgradeStatus] oc adm upgrade status reports
        correctly when the cluster is not updating'
  - featureGate: UserNamespacesSupport
    tests:
    - testName: '[Suite:openshift/usernamespace] [sig-node] [FeatureGate:ProcMountType]
        [FeatureGate:UserNamespacesSupport] nested container should pass podman localsystem
        test in baseline mode'
  - featureGate: VSphereDriverConfiguration
    tests:
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        allow all limits to be set at once'
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        allow setting VSAN limit'
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        allow setting VVOL limit'
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        allow setting global snapshot limit'
    - testName: '[sig-storage][FeatureGate:VSphereDriverConfiguration][Serial][apigroup:operator.openshift.io]
        vSphere CSI Driver Configuration snapshot options in clusterCSIDriver should
        use default when unset'
  - featureGate: VolumeAttributesClass
    tests:
    - testName: '[sig-api-machinery] ResourceQuota [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should verify ResourceQuota''s volume attributes
        class scope (quota set to pvc count: 1) against 2 pvcs with same volume attributes
        class.'
    - testName: '[sig-api-machinery] ResourceQuota [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should verify ResourceQuota''s volume attributes
        class scope (quota set to pvc count: 1) against a pvc with different volume
        attributes class.'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should be protected by vac-protection finalizer'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should modify volume that already has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should recover from invalid target VAC by updating
        PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should be protected by vac-protection finalizer'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should modify volume that already has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault] should recover from invalid target VAC by updating
        PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should be protected by vac-protection finalizer'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should modify volume that already has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic
        PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should recover from invalid target VAC by updating
        PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should be protected by vac-protection finalizer'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should modify volume that already has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (block volmode)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should recover from invalid target VAC by updating
        PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should be protected by vac-protection finalizer'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should modify volume that already has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (default fs)] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should recover from invalid target VAC by updating
        PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should be protected by vac-protection finalizer'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should create a volume with VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should modify volume that already has a VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should modify volume with no VAC'
    - testName: '[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io] [Serial]
        [Testpattern: Dynamic PV (ntfs)] [Feature:Windows] volume-modify [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should recover from invalid target VAC by updating
        PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should be protected by vac-protection finalizer'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should recover from invalid target VAC by updating PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should be protected by vac-protection finalizer'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should recover from invalid target VAC by updating PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should be protected by vac-protection finalizer'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should recover from invalid target VAC by updating PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] VolumeAttributesClass [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault] should run through the lifecycle of a VolumeAttributesClass'
    - testName: '[sig-storage] [Serial] Volume metrics PVController should create
        bound pv/pvc count metrics for pvc controller with volume attributes class
        dimension after creating both pv and pvc [FeatureGate:VolumeAttributesClass]
        [Beta] [Feature:OffByDefault]'
    - testName: '[sig-storage] [Serial] Volume metrics PVController should create
        unbound pvc count metrics for pvc controller with volume attributes class
        dimension after creating pvc only [FeatureGate:VolumeAttributesClass] [Beta]
        [Feature:OffByDefault]'
  - featureGate: VolumeGroupSnapshot
    tests:
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern:  (delete policy)] volumegroupsnapshottable
        [Feature:volumegroupsnapshot] VolumeGroupSnapshottable should create snapshots
        for multiple volumes in a pod'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should create read-only inline ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should create read/write inline ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should support multiple inline ephemeral volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: CSI Ephemeral-volume (default
        fs)] ephemeral should support two pods which have the same volume definition'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)(allowExpansion)]
        volume-expand Verify if offline PVC expansion works'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)(allowExpansion)]
        volume-expand should resize volume when PVC is edited while pod is using it'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        disruptive [Disruptive] [LinuxOnly] Should test that pv used in a pod that
        is deleted while the kubelet is down cleans up when the kubelet returns.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        disruptive [Disruptive] [LinuxOnly] Should test that pv used in a pod that
        is force deleted while the kubelet is down cleans up when the kubelet returns.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        disruptive [Disruptive] [LinuxOnly] Should test that pv written before kubelet
        restart is readable after restart.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the single read-only volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the single volume from pods
        on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the single volume from pods
        on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the volume and its clone from
        pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        multiVolume [Slow] should concurrently access the volume and restored snapshot
        from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should mount multiple PV pointing to the same storage on the
        same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision correct filesystem size when restoring snapshot
        to larger size pvc [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with any volume data source [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with mount options'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with pvc data source'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with pvc data source (ROX mode)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with pvc data source in parallel [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with snapshot data source (ROX mode)
        [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        pvc-deletion-performance should delete volumes at scale within performance
        constraints [Slow] [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-expand should not allow expansion of pvcs without AllowVolumeExpansion
        property'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should be protected by vac-protection finalizer'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should recover from invalid target VAC by updating PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volume-stress multiple pods should access different volumes repeatedly [Slow]
        [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volumeMode should fail to use a volume in a pod with mismatched mode [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volumeMode should not mount / map unused volumes in a pod [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (block volmode)]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)(allowExpansion)]
        volume-expand Verify if offline PVC expansion works'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)(allowExpansion)]
        volume-expand should resize volume when PVC is edited while pod is using it'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        capacity provides storage capacity information'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup,
        new pod fsgroup applied to volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup,
        volume contents ownership changed via chgrp in first pod, new pod with different
        fsgroup applied to the volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup,
        volume contents ownership changed via chgrp in first pod, new pod with same
        fsgroup applied to the volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (Always)[LinuxOnly], rwop pod created with an initial
        fsgroup, new pod fsgroup applied to volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial
        fsgroup, new pod fsgroup applied to volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial
        fsgroup, volume contents ownership changed via chgrp in first pod, new pod
        with different fsgroup applied to the volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial
        fsgroup, volume contents ownership changed via chgrp in first pod, new pod
        with same fsgroup skips ownership changes to the volume contents'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should mount multiple PV pointing to the same storage on the
        same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision correct filesystem size when restoring snapshot
        to larger size pvc [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with any volume data source [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with mount options'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with pvc data source'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with pvc data source (ROX mode)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with pvc data source in parallel [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with snapshot data source (ROX mode)
        [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        read-write-once-pod [MinimumKubeletVersion:1.27] should block a second pod
        from using an in-use ReadWriteOncePod volume on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        read-write-once-pod [MinimumKubeletVersion:1.27] should preempt lower priority
        pods using ReadWriteOncePod volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should fail if non-existent subpath is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should fail if subpath directory is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should fail if subpath file is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should fail if subpath with backstepping is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support creating multiple subpath from same volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support existing directories when readOnly specified in the
        volumeSource'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support existing directory'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support existing single file [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support file as subpath [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support non-existent path'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support readOnly directory specified in the volumeMount'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support readOnly file specified in the volumeMount [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support restarting containers using directory as subpath [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should support restarting containers using file as subpath [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should unmount if pod is force deleted while kubelet is down [Disruptive]
        [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should unmount if pod is gracefully deleted while kubelet is down
        [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        subPath should verify container cannot write to subpath readonly volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-expand should not allow expansion of pvcs without AllowVolumeExpansion
        property'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should be protected by vac-protection finalizer'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should recover from invalid target VAC by updating PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volume-stress multiple pods should access different volumes repeatedly [Slow]
        [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volumeIO should write files of various sizes, verify size, validate content
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (default fs)]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (delayed binding)]
        topology should fail to schedule a pod which has topologies that conflict
        with AllowedTopologies'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (delayed binding)]
        topology should provision a volume and schedule a pod with AllowedTopologies'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext3)] volumes
        should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext3)] volumes
        should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should access to two volumes with different volume mode and retain
        data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should access to two volumes with different volume mode and retain
        data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should access to two volumes with the same volume mode and retain data
        across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should access to two volumes with the same volume mode and retain data
        across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the single read-only volume from pods on
        the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the single volume from pods on different
        node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the single volume from pods on the same
        node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the volume and its clone from pods on the
        same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] multiVolume
        [Slow] should concurrently access the volume and restored snapshot from pods
        on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] volumes
        should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ext4)] volumes
        should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down is usable by a new pod when
        kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down is usable by a new pod with
        a different SELinux context when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down is usable by a new pod
        when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down is usable by a new pod
        with a different SELinux context when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv written
        before kubelet restart is readable after restart.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single read-only
        volume from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the volume and its
        clone from pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the volume and restored
        snapshot from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volume-lifecycle-performance should provision volumes at scale within
        performance constraints [Slow] [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volumeLimits should support volume limits [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volumeLimits should verify that all csinodes have volume limits'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volumeMode should fail to use a volume in a pod with mismatched
        mode [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (filesystem
        volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (immediate binding)]
        topology should fail to schedule a pod which has topologies that conflict
        with AllowedTopologies'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (immediate binding)]
        topology should provision a volume and schedule a pod with AllowedTopologies'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)(allowExpansion)]
        [Feature:Windows] volume-expand Verify if offline PVC expansion works'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)(allowExpansion)]
        [Feature:Windows] volume-expand should resize volume when PVC is edited while
        pod is using it'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the single read-only volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the single volume from pods
        on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the single volume from pods
        on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the volume and its clone from
        pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        multiVolume [Slow] should concurrently access the volume and restored snapshot
        from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should mount multiple PV pointing to the same storage on the
        same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision correct filesystem size when restoring snapshot
        to larger size pvc [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with any volume data source [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with mount options'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with pvc data source'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with pvc data source (ROX mode)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with pvc data source in parallel [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with snapshot data source (ROX mode)
        [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should fail if non-existent subpath is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should fail if subpath directory is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should fail if subpath file is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should fail if subpath with backstepping is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support creating multiple subpath from same volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support existing directories when readOnly specified in the
        volumeSource'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support existing directory'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support existing single file [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support file as subpath [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support non-existent path'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support readOnly directory specified in the volumeMount'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support readOnly file specified in the volumeMount [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support restarting containers using directory as subpath [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should support restarting containers using file as subpath [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should unmount if pod is force deleted while kubelet is down [Disruptive]
        [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should unmount if pod is gracefully deleted while kubelet is down
        [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        subPath should verify container cannot write to subpath readonly volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-expand should not allow expansion of pvcs without AllowVolumeExpansion
        property'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should be protected by vac-protection finalizer'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should create a volume with VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume that already has a VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should modify volume with no VAC'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volume-modify [FeatureGate:VolumeAttributesClass] [Beta] [Feature:OffByDefault]
        should recover from invalid target VAC by updating PVC to new valid VAC [Flaky]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volumeIO should write files of various sizes, verify size, validate content
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (ntfs)] [Feature:Windows]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should access to two volumes with different volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should access to two volumes with the same volume mode
        and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the single read-only volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the single volume from pods
        on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the single volume from pods
        on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the volume and its clone from
        pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        multiVolume [Slow] should concurrently access the volume and restored snapshot
        from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic PV (xfs)] [Slow]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (delete
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (delete
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (delete
        policy)] snapshottable-stress [Feature:VolumeSnapshotDataSource] should support
        snapshotting of many volumes repeatedly [Slow] [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (retain
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (retain
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Dynamic Snapshot (retain
        policy)] snapshottable-stress [Feature:VolumeSnapshotDataSource] should support
        snapshotting of many volumes repeatedly [Slow] [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Ephemeral Snapshot (delete
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Ephemeral Snapshot (delete
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Ephemeral Snapshot (retain
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Ephemeral Snapshot (retain
        policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral
        volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should create read/write inline
        ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should support expansion of pvcs
        created for ephemeral pvcs'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral
        volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (block volmode) (late-binding)] ephemeral should support two pods which have
        the same volume definition'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should create read-only inline
        ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should create read/write inline
        ephemeral volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should support expansion of pvcs
        created for ephemeral pvcs'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should support multiple inline
        ephemeral volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (immediate-binding)] ephemeral should support two pods which
        have the same volume definition'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should create read-only inline ephemeral
        volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should create read/write inline ephemeral
        volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should support expansion of pvcs created
        for ephemeral pvcs'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should support multiple inline ephemeral
        volumes'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs) (late-binding)] ephemeral should support two pods which have
        the same volume definition'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs)] volumeLimits should support volume limits [Serial]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Generic Ephemeral-volume
        (default fs)] volumeLimits should verify that all csinodes have volume limits'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should be able to unmount after the subpath directory is deleted
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should fail if non-existent subpath is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should fail if subpath directory is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should fail if subpath file is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should fail if subpath with backstepping is outside the volume
        [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support creating multiple subpath from same volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support existing directories when readOnly specified in
        the volumeSource'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support existing directory'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support existing single file [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support file as subpath [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support non-existent path'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support readOnly directory specified in the volumeMount'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support restarting containers using directory as subpath
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should support restarting containers using file as subpath [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should unmount if pod is force deleted while kubelet is down
        [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should unmount if pod is gracefully deleted while kubelet is
        down [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] subPath should verify container cannot write to subpath readonly volumes
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] volumeIO should write files of various sizes, verify size, validate content
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (default
        fs)] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ext3)] volumes
        should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ext3)] volumes
        should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ext4)] volumes
        should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ext4)] volumes
        should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ntfs)] [Feature:Windows]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (ntfs)] [Feature:Windows]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (xfs)] [Slow]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Inline-volume (xfs)] [Slow]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down cleans up when the kubelet
        returns.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down cleans up when the kubelet
        returns.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv written
        before kubelet restart is readable after restart.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the single read-only
        volume from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the volume and its
        clone from pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] multiVolume [Slow] should concurrently access the volume and restored
        snapshot from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] volumeMode should fail to use a volume in a pod with mismatched
        mode [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (block
        volmode)] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should be able to unmount after the subpath directory is deleted
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should fail if non-existent subpath is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should fail if subpath directory is outside the volume [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should fail if subpath file is outside the volume [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should fail if subpath with backstepping is outside the volume
        [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support creating multiple subpath from same volumes [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support existing directories when readOnly specified in
        the volumeSource'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support existing directory'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support existing single file [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support file as subpath [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support non-existent path'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support readOnly directory specified in the volumeMount'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support restarting containers using directory as subpath
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should support restarting containers using file as subpath [Slow]
        [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should unmount if pod is force deleted while kubelet is down
        [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should unmount if pod is gracefully deleted while kubelet is
        down [Disruptive] [Slow] [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] subPath should verify container cannot write to subpath readonly volumes
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] volumeIO should write files of various sizes, verify size, validate content
        [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (default
        fs)] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ext3)]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ext3)]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ext4)]
        volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ext4)]
        volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down is usable by a new pod when
        kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is deleted while the kubelet is down is usable by a new pod with
        a different SELinux context when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down is usable by a new pod
        when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv used in
        a pod that is force deleted while the kubelet is down is usable by a new pod
        with a different SELinux context when kubelet returns [Feature:SELinux]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] disruptive [Disruptive] [LinuxOnly] Should test that pv written
        before kubelet restart is readable after restart.'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with different volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should access to two volumes with the same volume
        mode and retain data across pod recreation on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single read-only
        volume from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on different node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the single volume
        from pods on the same node'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the volume and its
        clone from pods on the same node [LinuxOnly] [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] multiVolume [Slow] should concurrently access the volume and restored
        snapshot from pods on the same node [LinuxOnly] [Feature:VolumeSnapshotDataSource]
        [Feature:VolumeSourceXFS]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] volumeMode should fail to use a volume in a pod with mismatched
        mode [Slow]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (filesystem
        volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ntfs)]
        [Feature:Windows] volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (ntfs)]
        [Feature:Windows] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (xfs)]
        [Slow] volumes should allow exec of files on the volume'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned PV (xfs)]
        [Slow] volumes should store data'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned Snapshot
        (delete policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned Snapshot
        (delete policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned Snapshot
        (retain policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works after
        modifying source data, check deletion (persistent)'
    - testName: '[sig-storage] OCP CSI Volumes [Driver: csi-hostpath-groupsnapshot]
        [OCPFeatureGate:VolumeGroupSnapshot] [Testpattern: Pre-provisioned Snapshot
        (retain policy)] snapshottable [Feature:VolumeSnapshotDataSource] volume snapshot
        controller should check snapshot fields, check restore correctly works, check
        deletion (ephemeral)'
  - featureGate: WatchList
    tests:
    - testName: '[sig-api-machinery] API Streaming (aka. WatchList) [FeatureGate:WatchList]
        [Beta] [Feature:OffByDefault] [Serial] doesn''t support receiving resources
        as Tables'
    - testName: '[sig-api-machinery] API Streaming (aka. WatchList) [FeatureGate:WatchList]
        [Beta] [Feature:OffByDefault] [Serial] falls backs to supported content type
        when when receiving resources as Tables was requested'
    - testName: '[sig-api-machinery] API Streaming (aka. WatchList) [FeatureGate:WatchList]
        [Beta] [Feature:OffByDefault] [Serial] should be requested by client-go''s
        List method when WatchListClient is enabled'
    - testName: '[sig-api-machinery] API Streaming (aka. WatchList) [FeatureGate:WatchList]
        [Beta] [Feature:OffByDefault] [Serial] should be requested by dynamic client''s
        List method when WatchListClient is enabled'
    - testName: '[sig-api-machinery] API Streaming (aka. WatchList) [FeatureGate:WatchList]
        [Beta] [Feature:OffByDefault] [Serial] should be requested by informers when
        WatchListClient is enabled'
    - testName: '[sig-api-machinery] API Streaming (aka. WatchList) [FeatureGate:WatchList]
        [Beta] [Feature:OffByDefault] [Serial] should be requested by metadata client''s
        List method when WatchListClient is enabled'
status: {}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SatelliteRegistration satellite registration
//
// swagger:model SatelliteRegistration
type SatelliteRegistration struct {

	// Requested Number of Days to Delay Order Activation. Defaults to 1.
	DaysToDelay int64 `json:"daysToDelay,omitempty"`

	// Billing ID for Power Private Cloud Satellite Subscription
	// Required: true
	OrderID *string `json:"orderID"`

	// CRN of satellite to register
	// Required: true
	SatelliteID *string `json:"satelliteID"`

	// Usage mode to activate in the pod
	// Required: true
	UsageMode *string `json:"usageMode"`
}

// Validate validates this satellite registration
func (m *SatelliteRegistration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSatelliteID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsageMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SatelliteRegistration) validateOrderID(formats strfmt.Registry) error {

	if err := validate.Required("orderID", "body", m.OrderID); err != nil {
		return err
	}

	return nil
}

func (m *SatelliteRegistration) validateSatelliteID(formats strfmt.Registry) error {

	if err := validate.Required("satelliteID", "body", m.SatelliteID); err != nil {
		return err
	}

	return nil
}

func (m *SatelliteRegistration) validateUsageMode(formats strfmt.Registry) error {

	if err := validate.Required("usageMode", "body", m.UsageMode); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this satellite registration based on context it is used
func (m *SatelliteRegistration) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SatelliteRegistration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SatelliteRegistration) UnmarshalBinary(b []byte) error {
	var res SatelliteRegistration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

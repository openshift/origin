// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NetworkSecurityGroupAddMember network security group add member
//
// swagger:model NetworkSecurityGroupAddMember
type NetworkSecurityGroupAddMember struct {

	// The target member to add. An IP4 address if ipv4-address type or a network interface ID if network-interface type
	// Required: true
	Target *string `json:"target"`

	// The type of member
	// Required: true
	// Enum: ["ipv4-address","network-interface"]
	Type *string `json:"type"`
}

// Validate validates this network security group add member
func (m *NetworkSecurityGroupAddMember) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NetworkSecurityGroupAddMember) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("target", "body", m.Target); err != nil {
		return err
	}

	return nil
}

var networkSecurityGroupAddMemberTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ipv4-address","network-interface"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		networkSecurityGroupAddMemberTypeTypePropEnum = append(networkSecurityGroupAddMemberTypeTypePropEnum, v)
	}
}

const (

	// NetworkSecurityGroupAddMemberTypeIPV4DashAddress captures enum value "ipv4-address"
	NetworkSecurityGroupAddMemberTypeIPV4DashAddress string = "ipv4-address"

	// NetworkSecurityGroupAddMemberTypeNetworkDashInterface captures enum value "network-interface"
	NetworkSecurityGroupAddMemberTypeNetworkDashInterface string = "network-interface"
)

// prop value enum
func (m *NetworkSecurityGroupAddMember) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, networkSecurityGroupAddMemberTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *NetworkSecurityGroupAddMember) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this network security group add member based on context it is used
func (m *NetworkSecurityGroupAddMember) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NetworkSecurityGroupAddMember) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetworkSecurityGroupAddMember) UnmarshalBinary(b []byte) error {
	var res NetworkSecurityGroupAddMember
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package p_cloud_s_a_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPcloudSapGetallParams creates a new PcloudSapGetallParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPcloudSapGetallParams() *PcloudSapGetallParams {
	return &PcloudSapGetallParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPcloudSapGetallParamsWithTimeout creates a new PcloudSapGetallParams object
// with the ability to set a timeout on a request.
func NewPcloudSapGetallParamsWithTimeout(timeout time.Duration) *PcloudSapGetallParams {
	return &PcloudSapGetallParams{
		timeout: timeout,
	}
}

// NewPcloudSapGetallParamsWithContext creates a new PcloudSapGetallParams object
// with the ability to set a context for a request.
func NewPcloudSapGetallParamsWithContext(ctx context.Context) *PcloudSapGetallParams {
	return &PcloudSapGetallParams{
		Context: ctx,
	}
}

// NewPcloudSapGetallParamsWithHTTPClient creates a new PcloudSapGetallParams object
// with the ability to set a custom HTTPClient for a request.
func NewPcloudSapGetallParamsWithHTTPClient(client *http.Client) *PcloudSapGetallParams {
	return &PcloudSapGetallParams{
		HTTPClient: client,
	}
}

/*
PcloudSapGetallParams contains all the parameters to send to the API endpoint

	for the pcloud sap getall operation.

	Typically these are written to a http.Request.
*/
type PcloudSapGetallParams struct {

	/* CloudInstanceID.

	   Cloud Instance ID of a PCloud Instance
	*/
	CloudInstanceID string

	/* ProfileFamily.

	   SAP profile family to filter by
	*/
	ProfileFamily *string

	/* ProfilePrefix.

	   SAP profile prefix to filter by
	*/
	ProfilePrefix *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pcloud sap getall params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PcloudSapGetallParams) WithDefaults() *PcloudSapGetallParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pcloud sap getall params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PcloudSapGetallParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pcloud sap getall params
func (o *PcloudSapGetallParams) WithTimeout(timeout time.Duration) *PcloudSapGetallParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pcloud sap getall params
func (o *PcloudSapGetallParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pcloud sap getall params
func (o *PcloudSapGetallParams) WithContext(ctx context.Context) *PcloudSapGetallParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pcloud sap getall params
func (o *PcloudSapGetallParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pcloud sap getall params
func (o *PcloudSapGetallParams) WithHTTPClient(client *http.Client) *PcloudSapGetallParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pcloud sap getall params
func (o *PcloudSapGetallParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloudInstanceID adds the cloudInstanceID to the pcloud sap getall params
func (o *PcloudSapGetallParams) WithCloudInstanceID(cloudInstanceID string) *PcloudSapGetallParams {
	o.SetCloudInstanceID(cloudInstanceID)
	return o
}

// SetCloudInstanceID adds the cloudInstanceId to the pcloud sap getall params
func (o *PcloudSapGetallParams) SetCloudInstanceID(cloudInstanceID string) {
	o.CloudInstanceID = cloudInstanceID
}

// WithProfileFamily adds the profileFamily to the pcloud sap getall params
func (o *PcloudSapGetallParams) WithProfileFamily(profileFamily *string) *PcloudSapGetallParams {
	o.SetProfileFamily(profileFamily)
	return o
}

// SetProfileFamily adds the profileFamily to the pcloud sap getall params
func (o *PcloudSapGetallParams) SetProfileFamily(profileFamily *string) {
	o.ProfileFamily = profileFamily
}

// WithProfilePrefix adds the profilePrefix to the pcloud sap getall params
func (o *PcloudSapGetallParams) WithProfilePrefix(profilePrefix *string) *PcloudSapGetallParams {
	o.SetProfilePrefix(profilePrefix)
	return o
}

// SetProfilePrefix adds the profilePrefix to the pcloud sap getall params
func (o *PcloudSapGetallParams) SetProfilePrefix(profilePrefix *string) {
	o.ProfilePrefix = profilePrefix
}

// WriteToRequest writes these params to a swagger request
func (o *PcloudSapGetallParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cloud_instance_id
	if err := r.SetPathParam("cloud_instance_id", o.CloudInstanceID); err != nil {
		return err
	}

	if o.ProfileFamily != nil {

		// query param profile_family
		var qrProfileFamily string

		if o.ProfileFamily != nil {
			qrProfileFamily = *o.ProfileFamily
		}
		qProfileFamily := qrProfileFamily
		if qProfileFamily != "" {

			if err := r.SetQueryParam("profile_family", qProfileFamily); err != nil {
				return err
			}
		}
	}

	if o.ProfilePrefix != nil {

		// query param profile_prefix
		var qrProfilePrefix string

		if o.ProfilePrefix != nil {
			qrProfilePrefix = *o.ProfilePrefix
		}
		qProfilePrefix := qrProfilePrefix
		if qProfilePrefix != "" {

			if err := r.SetQueryParam("profile_prefix", qProfilePrefix); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

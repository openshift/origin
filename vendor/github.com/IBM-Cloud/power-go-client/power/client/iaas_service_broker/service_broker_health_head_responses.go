// Code generated by go-swagger; DO NOT EDIT.

package iaas_service_broker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// ServiceBrokerHealthHeadReader is a Reader for the ServiceBrokerHealthHead structure.
type ServiceBrokerHealthHeadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceBrokerHealthHeadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceBrokerHealthHeadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServiceBrokerHealthHeadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServiceBrokerHealthHeadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServiceBrokerHealthHeadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServiceBrokerHealthHeadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[HEAD /broker/v1/health] serviceBroker.health.head", response, response.Code())
	}
}

// NewServiceBrokerHealthHeadOK creates a ServiceBrokerHealthHeadOK with default headers values
func NewServiceBrokerHealthHeadOK() *ServiceBrokerHealthHeadOK {
	return &ServiceBrokerHealthHeadOK{}
}

/*
ServiceBrokerHealthHeadOK describes a response with status code 200, with default header values.

OK
*/
type ServiceBrokerHealthHeadOK struct {
	Payload *models.Health
}

// IsSuccess returns true when this service broker health head o k response has a 2xx status code
func (o *ServiceBrokerHealthHeadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this service broker health head o k response has a 3xx status code
func (o *ServiceBrokerHealthHeadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this service broker health head o k response has a 4xx status code
func (o *ServiceBrokerHealthHeadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this service broker health head o k response has a 5xx status code
func (o *ServiceBrokerHealthHeadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this service broker health head o k response a status code equal to that given
func (o *ServiceBrokerHealthHeadOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the service broker health head o k response
func (o *ServiceBrokerHealthHeadOK) Code() int {
	return 200
}

func (o *ServiceBrokerHealthHeadOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadOK %s", 200, payload)
}

func (o *ServiceBrokerHealthHeadOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadOK %s", 200, payload)
}

func (o *ServiceBrokerHealthHeadOK) GetPayload() *models.Health {
	return o.Payload
}

func (o *ServiceBrokerHealthHeadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Health)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBrokerHealthHeadBadRequest creates a ServiceBrokerHealthHeadBadRequest with default headers values
func NewServiceBrokerHealthHeadBadRequest() *ServiceBrokerHealthHeadBadRequest {
	return &ServiceBrokerHealthHeadBadRequest{}
}

/*
ServiceBrokerHealthHeadBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ServiceBrokerHealthHeadBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this service broker health head bad request response has a 2xx status code
func (o *ServiceBrokerHealthHeadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this service broker health head bad request response has a 3xx status code
func (o *ServiceBrokerHealthHeadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this service broker health head bad request response has a 4xx status code
func (o *ServiceBrokerHealthHeadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this service broker health head bad request response has a 5xx status code
func (o *ServiceBrokerHealthHeadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this service broker health head bad request response a status code equal to that given
func (o *ServiceBrokerHealthHeadBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the service broker health head bad request response
func (o *ServiceBrokerHealthHeadBadRequest) Code() int {
	return 400
}

func (o *ServiceBrokerHealthHeadBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadBadRequest %s", 400, payload)
}

func (o *ServiceBrokerHealthHeadBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadBadRequest %s", 400, payload)
}

func (o *ServiceBrokerHealthHeadBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBrokerHealthHeadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBrokerHealthHeadUnauthorized creates a ServiceBrokerHealthHeadUnauthorized with default headers values
func NewServiceBrokerHealthHeadUnauthorized() *ServiceBrokerHealthHeadUnauthorized {
	return &ServiceBrokerHealthHeadUnauthorized{}
}

/*
ServiceBrokerHealthHeadUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServiceBrokerHealthHeadUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this service broker health head unauthorized response has a 2xx status code
func (o *ServiceBrokerHealthHeadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this service broker health head unauthorized response has a 3xx status code
func (o *ServiceBrokerHealthHeadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this service broker health head unauthorized response has a 4xx status code
func (o *ServiceBrokerHealthHeadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this service broker health head unauthorized response has a 5xx status code
func (o *ServiceBrokerHealthHeadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this service broker health head unauthorized response a status code equal to that given
func (o *ServiceBrokerHealthHeadUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the service broker health head unauthorized response
func (o *ServiceBrokerHealthHeadUnauthorized) Code() int {
	return 401
}

func (o *ServiceBrokerHealthHeadUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadUnauthorized %s", 401, payload)
}

func (o *ServiceBrokerHealthHeadUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadUnauthorized %s", 401, payload)
}

func (o *ServiceBrokerHealthHeadUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBrokerHealthHeadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBrokerHealthHeadForbidden creates a ServiceBrokerHealthHeadForbidden with default headers values
func NewServiceBrokerHealthHeadForbidden() *ServiceBrokerHealthHeadForbidden {
	return &ServiceBrokerHealthHeadForbidden{}
}

/*
ServiceBrokerHealthHeadForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ServiceBrokerHealthHeadForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this service broker health head forbidden response has a 2xx status code
func (o *ServiceBrokerHealthHeadForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this service broker health head forbidden response has a 3xx status code
func (o *ServiceBrokerHealthHeadForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this service broker health head forbidden response has a 4xx status code
func (o *ServiceBrokerHealthHeadForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this service broker health head forbidden response has a 5xx status code
func (o *ServiceBrokerHealthHeadForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this service broker health head forbidden response a status code equal to that given
func (o *ServiceBrokerHealthHeadForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the service broker health head forbidden response
func (o *ServiceBrokerHealthHeadForbidden) Code() int {
	return 403
}

func (o *ServiceBrokerHealthHeadForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadForbidden %s", 403, payload)
}

func (o *ServiceBrokerHealthHeadForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadForbidden %s", 403, payload)
}

func (o *ServiceBrokerHealthHeadForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBrokerHealthHeadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBrokerHealthHeadNotFound creates a ServiceBrokerHealthHeadNotFound with default headers values
func NewServiceBrokerHealthHeadNotFound() *ServiceBrokerHealthHeadNotFound {
	return &ServiceBrokerHealthHeadNotFound{}
}

/*
ServiceBrokerHealthHeadNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServiceBrokerHealthHeadNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this service broker health head not found response has a 2xx status code
func (o *ServiceBrokerHealthHeadNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this service broker health head not found response has a 3xx status code
func (o *ServiceBrokerHealthHeadNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this service broker health head not found response has a 4xx status code
func (o *ServiceBrokerHealthHeadNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this service broker health head not found response has a 5xx status code
func (o *ServiceBrokerHealthHeadNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this service broker health head not found response a status code equal to that given
func (o *ServiceBrokerHealthHeadNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the service broker health head not found response
func (o *ServiceBrokerHealthHeadNotFound) Code() int {
	return 404
}

func (o *ServiceBrokerHealthHeadNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadNotFound %s", 404, payload)
}

func (o *ServiceBrokerHealthHeadNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[HEAD /broker/v1/health][%d] serviceBrokerHealthHeadNotFound %s", 404, payload)
}

func (o *ServiceBrokerHealthHeadNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBrokerHealthHeadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

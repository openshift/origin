// Code generated by go-swagger; DO NOT EDIT.

package p_cloud_s_p_p_placement_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPcloudSppplacementgroupsMembersDeleteParams creates a new PcloudSppplacementgroupsMembersDeleteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPcloudSppplacementgroupsMembersDeleteParams() *PcloudSppplacementgroupsMembersDeleteParams {
	return &PcloudSppplacementgroupsMembersDeleteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPcloudSppplacementgroupsMembersDeleteParamsWithTimeout creates a new PcloudSppplacementgroupsMembersDeleteParams object
// with the ability to set a timeout on a request.
func NewPcloudSppplacementgroupsMembersDeleteParamsWithTimeout(timeout time.Duration) *PcloudSppplacementgroupsMembersDeleteParams {
	return &PcloudSppplacementgroupsMembersDeleteParams{
		timeout: timeout,
	}
}

// NewPcloudSppplacementgroupsMembersDeleteParamsWithContext creates a new PcloudSppplacementgroupsMembersDeleteParams object
// with the ability to set a context for a request.
func NewPcloudSppplacementgroupsMembersDeleteParamsWithContext(ctx context.Context) *PcloudSppplacementgroupsMembersDeleteParams {
	return &PcloudSppplacementgroupsMembersDeleteParams{
		Context: ctx,
	}
}

// NewPcloudSppplacementgroupsMembersDeleteParamsWithHTTPClient creates a new PcloudSppplacementgroupsMembersDeleteParams object
// with the ability to set a custom HTTPClient for a request.
func NewPcloudSppplacementgroupsMembersDeleteParamsWithHTTPClient(client *http.Client) *PcloudSppplacementgroupsMembersDeleteParams {
	return &PcloudSppplacementgroupsMembersDeleteParams{
		HTTPClient: client,
	}
}

/*
PcloudSppplacementgroupsMembersDeleteParams contains all the parameters to send to the API endpoint

	for the pcloud sppplacementgroups members delete operation.

	Typically these are written to a http.Request.
*/
type PcloudSppplacementgroupsMembersDeleteParams struct {

	/* CloudInstanceID.

	   Cloud Instance ID of a PCloud Instance
	*/
	CloudInstanceID string

	/* SharedProcessorPoolID.

	   Shared Processor Pool ID or Name
	*/
	SharedProcessorPoolID string

	/* SppPlacementGroupID.

	   Shared Processor Pool Placement Group ID or Name
	*/
	SppPlacementGroupID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pcloud sppplacementgroups members delete params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PcloudSppplacementgroupsMembersDeleteParams) WithDefaults() *PcloudSppplacementgroupsMembersDeleteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pcloud sppplacementgroups members delete params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PcloudSppplacementgroupsMembersDeleteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) WithTimeout(timeout time.Duration) *PcloudSppplacementgroupsMembersDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) WithContext(ctx context.Context) *PcloudSppplacementgroupsMembersDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) WithHTTPClient(client *http.Client) *PcloudSppplacementgroupsMembersDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloudInstanceID adds the cloudInstanceID to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) WithCloudInstanceID(cloudInstanceID string) *PcloudSppplacementgroupsMembersDeleteParams {
	o.SetCloudInstanceID(cloudInstanceID)
	return o
}

// SetCloudInstanceID adds the cloudInstanceId to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) SetCloudInstanceID(cloudInstanceID string) {
	o.CloudInstanceID = cloudInstanceID
}

// WithSharedProcessorPoolID adds the sharedProcessorPoolID to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) WithSharedProcessorPoolID(sharedProcessorPoolID string) *PcloudSppplacementgroupsMembersDeleteParams {
	o.SetSharedProcessorPoolID(sharedProcessorPoolID)
	return o
}

// SetSharedProcessorPoolID adds the sharedProcessorPoolId to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) SetSharedProcessorPoolID(sharedProcessorPoolID string) {
	o.SharedProcessorPoolID = sharedProcessorPoolID
}

// WithSppPlacementGroupID adds the sppPlacementGroupID to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) WithSppPlacementGroupID(sppPlacementGroupID string) *PcloudSppplacementgroupsMembersDeleteParams {
	o.SetSppPlacementGroupID(sppPlacementGroupID)
	return o
}

// SetSppPlacementGroupID adds the sppPlacementGroupId to the pcloud sppplacementgroups members delete params
func (o *PcloudSppplacementgroupsMembersDeleteParams) SetSppPlacementGroupID(sppPlacementGroupID string) {
	o.SppPlacementGroupID = sppPlacementGroupID
}

// WriteToRequest writes these params to a swagger request
func (o *PcloudSppplacementgroupsMembersDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cloud_instance_id
	if err := r.SetPathParam("cloud_instance_id", o.CloudInstanceID); err != nil {
		return err
	}

	// path param shared_processor_pool_id
	if err := r.SetPathParam("shared_processor_pool_id", o.SharedProcessorPoolID); err != nil {
		return err
	}

	// path param spp_placement_group_id
	if err := r.SetPathParam("spp_placement_group_id", o.SppPlacementGroupID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package host_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1HostsPostReader is a Reader for the V1HostsPost structure.
type V1HostsPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1HostsPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewV1HostsPostCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1HostsPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1HostsPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1HostsPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewV1HostsPostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1HostsPostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewV1HostsPostGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/hosts] v1.hosts.post", response, response.Code())
	}
}

// NewV1HostsPostCreated creates a V1HostsPostCreated with default headers values
func NewV1HostsPostCreated() *V1HostsPostCreated {
	return &V1HostsPostCreated{}
}

/*
V1HostsPostCreated describes a response with status code 201, with default header values.

Created
*/
type V1HostsPostCreated struct {
	Payload models.HostList
}

// IsSuccess returns true when this v1 hosts post created response has a 2xx status code
func (o *V1HostsPostCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 hosts post created response has a 3xx status code
func (o *V1HostsPostCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 hosts post created response has a 4xx status code
func (o *V1HostsPostCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 hosts post created response has a 5xx status code
func (o *V1HostsPostCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 hosts post created response a status code equal to that given
func (o *V1HostsPostCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the v1 hosts post created response
func (o *V1HostsPostCreated) Code() int {
	return 201
}

func (o *V1HostsPostCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostCreated %s", 201, payload)
}

func (o *V1HostsPostCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostCreated %s", 201, payload)
}

func (o *V1HostsPostCreated) GetPayload() models.HostList {
	return o.Payload
}

func (o *V1HostsPostCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1HostsPostBadRequest creates a V1HostsPostBadRequest with default headers values
func NewV1HostsPostBadRequest() *V1HostsPostBadRequest {
	return &V1HostsPostBadRequest{}
}

/*
V1HostsPostBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1HostsPostBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 hosts post bad request response has a 2xx status code
func (o *V1HostsPostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 hosts post bad request response has a 3xx status code
func (o *V1HostsPostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 hosts post bad request response has a 4xx status code
func (o *V1HostsPostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 hosts post bad request response has a 5xx status code
func (o *V1HostsPostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 hosts post bad request response a status code equal to that given
func (o *V1HostsPostBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 hosts post bad request response
func (o *V1HostsPostBadRequest) Code() int {
	return 400
}

func (o *V1HostsPostBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostBadRequest %s", 400, payload)
}

func (o *V1HostsPostBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostBadRequest %s", 400, payload)
}

func (o *V1HostsPostBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1HostsPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1HostsPostUnauthorized creates a V1HostsPostUnauthorized with default headers values
func NewV1HostsPostUnauthorized() *V1HostsPostUnauthorized {
	return &V1HostsPostUnauthorized{}
}

/*
V1HostsPostUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1HostsPostUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 hosts post unauthorized response has a 2xx status code
func (o *V1HostsPostUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 hosts post unauthorized response has a 3xx status code
func (o *V1HostsPostUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 hosts post unauthorized response has a 4xx status code
func (o *V1HostsPostUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 hosts post unauthorized response has a 5xx status code
func (o *V1HostsPostUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 hosts post unauthorized response a status code equal to that given
func (o *V1HostsPostUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 hosts post unauthorized response
func (o *V1HostsPostUnauthorized) Code() int {
	return 401
}

func (o *V1HostsPostUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostUnauthorized %s", 401, payload)
}

func (o *V1HostsPostUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostUnauthorized %s", 401, payload)
}

func (o *V1HostsPostUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1HostsPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1HostsPostForbidden creates a V1HostsPostForbidden with default headers values
func NewV1HostsPostForbidden() *V1HostsPostForbidden {
	return &V1HostsPostForbidden{}
}

/*
V1HostsPostForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1HostsPostForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 hosts post forbidden response has a 2xx status code
func (o *V1HostsPostForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 hosts post forbidden response has a 3xx status code
func (o *V1HostsPostForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 hosts post forbidden response has a 4xx status code
func (o *V1HostsPostForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 hosts post forbidden response has a 5xx status code
func (o *V1HostsPostForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 hosts post forbidden response a status code equal to that given
func (o *V1HostsPostForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 hosts post forbidden response
func (o *V1HostsPostForbidden) Code() int {
	return 403
}

func (o *V1HostsPostForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostForbidden %s", 403, payload)
}

func (o *V1HostsPostForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostForbidden %s", 403, payload)
}

func (o *V1HostsPostForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1HostsPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1HostsPostUnprocessableEntity creates a V1HostsPostUnprocessableEntity with default headers values
func NewV1HostsPostUnprocessableEntity() *V1HostsPostUnprocessableEntity {
	return &V1HostsPostUnprocessableEntity{}
}

/*
V1HostsPostUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type V1HostsPostUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 hosts post unprocessable entity response has a 2xx status code
func (o *V1HostsPostUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 hosts post unprocessable entity response has a 3xx status code
func (o *V1HostsPostUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 hosts post unprocessable entity response has a 4xx status code
func (o *V1HostsPostUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 hosts post unprocessable entity response has a 5xx status code
func (o *V1HostsPostUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 hosts post unprocessable entity response a status code equal to that given
func (o *V1HostsPostUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the v1 hosts post unprocessable entity response
func (o *V1HostsPostUnprocessableEntity) Code() int {
	return 422
}

func (o *V1HostsPostUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostUnprocessableEntity %s", 422, payload)
}

func (o *V1HostsPostUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostUnprocessableEntity %s", 422, payload)
}

func (o *V1HostsPostUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1HostsPostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1HostsPostInternalServerError creates a V1HostsPostInternalServerError with default headers values
func NewV1HostsPostInternalServerError() *V1HostsPostInternalServerError {
	return &V1HostsPostInternalServerError{}
}

/*
V1HostsPostInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1HostsPostInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 hosts post internal server error response has a 2xx status code
func (o *V1HostsPostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 hosts post internal server error response has a 3xx status code
func (o *V1HostsPostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 hosts post internal server error response has a 4xx status code
func (o *V1HostsPostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 hosts post internal server error response has a 5xx status code
func (o *V1HostsPostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 hosts post internal server error response a status code equal to that given
func (o *V1HostsPostInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 hosts post internal server error response
func (o *V1HostsPostInternalServerError) Code() int {
	return 500
}

func (o *V1HostsPostInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostInternalServerError %s", 500, payload)
}

func (o *V1HostsPostInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostInternalServerError %s", 500, payload)
}

func (o *V1HostsPostInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1HostsPostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1HostsPostGatewayTimeout creates a V1HostsPostGatewayTimeout with default headers values
func NewV1HostsPostGatewayTimeout() *V1HostsPostGatewayTimeout {
	return &V1HostsPostGatewayTimeout{}
}

/*
V1HostsPostGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. Request is still processing and taking longer than expected.
*/
type V1HostsPostGatewayTimeout struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 hosts post gateway timeout response has a 2xx status code
func (o *V1HostsPostGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 hosts post gateway timeout response has a 3xx status code
func (o *V1HostsPostGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 hosts post gateway timeout response has a 4xx status code
func (o *V1HostsPostGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 hosts post gateway timeout response has a 5xx status code
func (o *V1HostsPostGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 hosts post gateway timeout response a status code equal to that given
func (o *V1HostsPostGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the v1 hosts post gateway timeout response
func (o *V1HostsPostGatewayTimeout) Code() int {
	return 504
}

func (o *V1HostsPostGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostGatewayTimeout %s", 504, payload)
}

func (o *V1HostsPostGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/hosts][%d] v1HostsPostGatewayTimeout %s", 504, payload)
}

func (o *V1HostsPostGatewayTimeout) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1HostsPostGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

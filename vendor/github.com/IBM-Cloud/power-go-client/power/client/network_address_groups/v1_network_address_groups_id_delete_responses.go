// Code generated by go-swagger; DO NOT EDIT.

package network_address_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkAddressGroupsIDDeleteReader is a Reader for the V1NetworkAddressGroupsIDDelete structure.
type V1NetworkAddressGroupsIDDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkAddressGroupsIDDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkAddressGroupsIDDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkAddressGroupsIDDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkAddressGroupsIDDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkAddressGroupsIDDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkAddressGroupsIDDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkAddressGroupsIDDeleteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkAddressGroupsIDDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/network-address-groups/{network_address_group_id}] v1.networkAddressGroups.id.delete", response, response.Code())
	}
}

// NewV1NetworkAddressGroupsIDDeleteOK creates a V1NetworkAddressGroupsIDDeleteOK with default headers values
func NewV1NetworkAddressGroupsIDDeleteOK() *V1NetworkAddressGroupsIDDeleteOK {
	return &V1NetworkAddressGroupsIDDeleteOK{}
}

/*
V1NetworkAddressGroupsIDDeleteOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkAddressGroupsIDDeleteOK struct {
	Payload models.Object
}

// IsSuccess returns true when this v1 network address groups Id delete o k response has a 2xx status code
func (o *V1NetworkAddressGroupsIDDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network address groups Id delete o k response has a 3xx status code
func (o *V1NetworkAddressGroupsIDDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id delete o k response has a 4xx status code
func (o *V1NetworkAddressGroupsIDDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network address groups Id delete o k response has a 5xx status code
func (o *V1NetworkAddressGroupsIDDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id delete o k response a status code equal to that given
func (o *V1NetworkAddressGroupsIDDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network address groups Id delete o k response
func (o *V1NetworkAddressGroupsIDDeleteOK) Code() int {
	return 200
}

func (o *V1NetworkAddressGroupsIDDeleteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteOK %s", 200, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteOK %s", 200, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteOK) GetPayload() models.Object {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDDeleteBadRequest creates a V1NetworkAddressGroupsIDDeleteBadRequest with default headers values
func NewV1NetworkAddressGroupsIDDeleteBadRequest() *V1NetworkAddressGroupsIDDeleteBadRequest {
	return &V1NetworkAddressGroupsIDDeleteBadRequest{}
}

/*
V1NetworkAddressGroupsIDDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkAddressGroupsIDDeleteBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id delete bad request response has a 2xx status code
func (o *V1NetworkAddressGroupsIDDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id delete bad request response has a 3xx status code
func (o *V1NetworkAddressGroupsIDDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id delete bad request response has a 4xx status code
func (o *V1NetworkAddressGroupsIDDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id delete bad request response has a 5xx status code
func (o *V1NetworkAddressGroupsIDDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id delete bad request response a status code equal to that given
func (o *V1NetworkAddressGroupsIDDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network address groups Id delete bad request response
func (o *V1NetworkAddressGroupsIDDeleteBadRequest) Code() int {
	return 400
}

func (o *V1NetworkAddressGroupsIDDeleteBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteBadRequest %s", 400, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteBadRequest %s", 400, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDDeleteUnauthorized creates a V1NetworkAddressGroupsIDDeleteUnauthorized with default headers values
func NewV1NetworkAddressGroupsIDDeleteUnauthorized() *V1NetworkAddressGroupsIDDeleteUnauthorized {
	return &V1NetworkAddressGroupsIDDeleteUnauthorized{}
}

/*
V1NetworkAddressGroupsIDDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkAddressGroupsIDDeleteUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id delete unauthorized response has a 2xx status code
func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id delete unauthorized response has a 3xx status code
func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id delete unauthorized response has a 4xx status code
func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id delete unauthorized response has a 5xx status code
func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id delete unauthorized response a status code equal to that given
func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network address groups Id delete unauthorized response
func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteUnauthorized %s", 401, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteUnauthorized %s", 401, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDDeleteForbidden creates a V1NetworkAddressGroupsIDDeleteForbidden with default headers values
func NewV1NetworkAddressGroupsIDDeleteForbidden() *V1NetworkAddressGroupsIDDeleteForbidden {
	return &V1NetworkAddressGroupsIDDeleteForbidden{}
}

/*
V1NetworkAddressGroupsIDDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkAddressGroupsIDDeleteForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id delete forbidden response has a 2xx status code
func (o *V1NetworkAddressGroupsIDDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id delete forbidden response has a 3xx status code
func (o *V1NetworkAddressGroupsIDDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id delete forbidden response has a 4xx status code
func (o *V1NetworkAddressGroupsIDDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id delete forbidden response has a 5xx status code
func (o *V1NetworkAddressGroupsIDDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id delete forbidden response a status code equal to that given
func (o *V1NetworkAddressGroupsIDDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network address groups Id delete forbidden response
func (o *V1NetworkAddressGroupsIDDeleteForbidden) Code() int {
	return 403
}

func (o *V1NetworkAddressGroupsIDDeleteForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteForbidden %s", 403, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteForbidden %s", 403, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDDeleteNotFound creates a V1NetworkAddressGroupsIDDeleteNotFound with default headers values
func NewV1NetworkAddressGroupsIDDeleteNotFound() *V1NetworkAddressGroupsIDDeleteNotFound {
	return &V1NetworkAddressGroupsIDDeleteNotFound{}
}

/*
V1NetworkAddressGroupsIDDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkAddressGroupsIDDeleteNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id delete not found response has a 2xx status code
func (o *V1NetworkAddressGroupsIDDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id delete not found response has a 3xx status code
func (o *V1NetworkAddressGroupsIDDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id delete not found response has a 4xx status code
func (o *V1NetworkAddressGroupsIDDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id delete not found response has a 5xx status code
func (o *V1NetworkAddressGroupsIDDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id delete not found response a status code equal to that given
func (o *V1NetworkAddressGroupsIDDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network address groups Id delete not found response
func (o *V1NetworkAddressGroupsIDDeleteNotFound) Code() int {
	return 404
}

func (o *V1NetworkAddressGroupsIDDeleteNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteNotFound %s", 404, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteNotFound %s", 404, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDDeleteConflict creates a V1NetworkAddressGroupsIDDeleteConflict with default headers values
func NewV1NetworkAddressGroupsIDDeleteConflict() *V1NetworkAddressGroupsIDDeleteConflict {
	return &V1NetworkAddressGroupsIDDeleteConflict{}
}

/*
V1NetworkAddressGroupsIDDeleteConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkAddressGroupsIDDeleteConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id delete conflict response has a 2xx status code
func (o *V1NetworkAddressGroupsIDDeleteConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id delete conflict response has a 3xx status code
func (o *V1NetworkAddressGroupsIDDeleteConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id delete conflict response has a 4xx status code
func (o *V1NetworkAddressGroupsIDDeleteConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id delete conflict response has a 5xx status code
func (o *V1NetworkAddressGroupsIDDeleteConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id delete conflict response a status code equal to that given
func (o *V1NetworkAddressGroupsIDDeleteConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network address groups Id delete conflict response
func (o *V1NetworkAddressGroupsIDDeleteConflict) Code() int {
	return 409
}

func (o *V1NetworkAddressGroupsIDDeleteConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteConflict %s", 409, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteConflict %s", 409, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDDeleteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDDeleteInternalServerError creates a V1NetworkAddressGroupsIDDeleteInternalServerError with default headers values
func NewV1NetworkAddressGroupsIDDeleteInternalServerError() *V1NetworkAddressGroupsIDDeleteInternalServerError {
	return &V1NetworkAddressGroupsIDDeleteInternalServerError{}
}

/*
V1NetworkAddressGroupsIDDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkAddressGroupsIDDeleteInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id delete internal server error response has a 2xx status code
func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id delete internal server error response has a 3xx status code
func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id delete internal server error response has a 4xx status code
func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network address groups Id delete internal server error response has a 5xx status code
func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network address groups Id delete internal server error response a status code equal to that given
func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network address groups Id delete internal server error response
func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteInternalServerError %s", 500, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdDeleteInternalServerError %s", 500, payload)
}

func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package network_address_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkAddressGroupsIDPutReader is a Reader for the V1NetworkAddressGroupsIDPut structure.
type V1NetworkAddressGroupsIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkAddressGroupsIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkAddressGroupsIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkAddressGroupsIDPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkAddressGroupsIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkAddressGroupsIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkAddressGroupsIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkAddressGroupsIDPutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/network-address-groups/{network_address_group_id}] v1.networkAddressGroups.id.put", response, response.Code())
	}
}

// NewV1NetworkAddressGroupsIDPutOK creates a V1NetworkAddressGroupsIDPutOK with default headers values
func NewV1NetworkAddressGroupsIDPutOK() *V1NetworkAddressGroupsIDPutOK {
	return &V1NetworkAddressGroupsIDPutOK{}
}

/*
V1NetworkAddressGroupsIDPutOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkAddressGroupsIDPutOK struct {
	Payload *models.NetworkAddressGroup
}

// IsSuccess returns true when this v1 network address groups Id put o k response has a 2xx status code
func (o *V1NetworkAddressGroupsIDPutOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network address groups Id put o k response has a 3xx status code
func (o *V1NetworkAddressGroupsIDPutOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id put o k response has a 4xx status code
func (o *V1NetworkAddressGroupsIDPutOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network address groups Id put o k response has a 5xx status code
func (o *V1NetworkAddressGroupsIDPutOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id put o k response a status code equal to that given
func (o *V1NetworkAddressGroupsIDPutOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network address groups Id put o k response
func (o *V1NetworkAddressGroupsIDPutOK) Code() int {
	return 200
}

func (o *V1NetworkAddressGroupsIDPutOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutOK %s", 200, payload)
}

func (o *V1NetworkAddressGroupsIDPutOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutOK %s", 200, payload)
}

func (o *V1NetworkAddressGroupsIDPutOK) GetPayload() *models.NetworkAddressGroup {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkAddressGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDPutBadRequest creates a V1NetworkAddressGroupsIDPutBadRequest with default headers values
func NewV1NetworkAddressGroupsIDPutBadRequest() *V1NetworkAddressGroupsIDPutBadRequest {
	return &V1NetworkAddressGroupsIDPutBadRequest{}
}

/*
V1NetworkAddressGroupsIDPutBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkAddressGroupsIDPutBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id put bad request response has a 2xx status code
func (o *V1NetworkAddressGroupsIDPutBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id put bad request response has a 3xx status code
func (o *V1NetworkAddressGroupsIDPutBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id put bad request response has a 4xx status code
func (o *V1NetworkAddressGroupsIDPutBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id put bad request response has a 5xx status code
func (o *V1NetworkAddressGroupsIDPutBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id put bad request response a status code equal to that given
func (o *V1NetworkAddressGroupsIDPutBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network address groups Id put bad request response
func (o *V1NetworkAddressGroupsIDPutBadRequest) Code() int {
	return 400
}

func (o *V1NetworkAddressGroupsIDPutBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutBadRequest %s", 400, payload)
}

func (o *V1NetworkAddressGroupsIDPutBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutBadRequest %s", 400, payload)
}

func (o *V1NetworkAddressGroupsIDPutBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDPutUnauthorized creates a V1NetworkAddressGroupsIDPutUnauthorized with default headers values
func NewV1NetworkAddressGroupsIDPutUnauthorized() *V1NetworkAddressGroupsIDPutUnauthorized {
	return &V1NetworkAddressGroupsIDPutUnauthorized{}
}

/*
V1NetworkAddressGroupsIDPutUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkAddressGroupsIDPutUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id put unauthorized response has a 2xx status code
func (o *V1NetworkAddressGroupsIDPutUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id put unauthorized response has a 3xx status code
func (o *V1NetworkAddressGroupsIDPutUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id put unauthorized response has a 4xx status code
func (o *V1NetworkAddressGroupsIDPutUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id put unauthorized response has a 5xx status code
func (o *V1NetworkAddressGroupsIDPutUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id put unauthorized response a status code equal to that given
func (o *V1NetworkAddressGroupsIDPutUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network address groups Id put unauthorized response
func (o *V1NetworkAddressGroupsIDPutUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkAddressGroupsIDPutUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutUnauthorized %s", 401, payload)
}

func (o *V1NetworkAddressGroupsIDPutUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutUnauthorized %s", 401, payload)
}

func (o *V1NetworkAddressGroupsIDPutUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDPutForbidden creates a V1NetworkAddressGroupsIDPutForbidden with default headers values
func NewV1NetworkAddressGroupsIDPutForbidden() *V1NetworkAddressGroupsIDPutForbidden {
	return &V1NetworkAddressGroupsIDPutForbidden{}
}

/*
V1NetworkAddressGroupsIDPutForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkAddressGroupsIDPutForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id put forbidden response has a 2xx status code
func (o *V1NetworkAddressGroupsIDPutForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id put forbidden response has a 3xx status code
func (o *V1NetworkAddressGroupsIDPutForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id put forbidden response has a 4xx status code
func (o *V1NetworkAddressGroupsIDPutForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id put forbidden response has a 5xx status code
func (o *V1NetworkAddressGroupsIDPutForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id put forbidden response a status code equal to that given
func (o *V1NetworkAddressGroupsIDPutForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network address groups Id put forbidden response
func (o *V1NetworkAddressGroupsIDPutForbidden) Code() int {
	return 403
}

func (o *V1NetworkAddressGroupsIDPutForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutForbidden %s", 403, payload)
}

func (o *V1NetworkAddressGroupsIDPutForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutForbidden %s", 403, payload)
}

func (o *V1NetworkAddressGroupsIDPutForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDPutNotFound creates a V1NetworkAddressGroupsIDPutNotFound with default headers values
func NewV1NetworkAddressGroupsIDPutNotFound() *V1NetworkAddressGroupsIDPutNotFound {
	return &V1NetworkAddressGroupsIDPutNotFound{}
}

/*
V1NetworkAddressGroupsIDPutNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkAddressGroupsIDPutNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id put not found response has a 2xx status code
func (o *V1NetworkAddressGroupsIDPutNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id put not found response has a 3xx status code
func (o *V1NetworkAddressGroupsIDPutNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id put not found response has a 4xx status code
func (o *V1NetworkAddressGroupsIDPutNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups Id put not found response has a 5xx status code
func (o *V1NetworkAddressGroupsIDPutNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups Id put not found response a status code equal to that given
func (o *V1NetworkAddressGroupsIDPutNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network address groups Id put not found response
func (o *V1NetworkAddressGroupsIDPutNotFound) Code() int {
	return 404
}

func (o *V1NetworkAddressGroupsIDPutNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutNotFound %s", 404, payload)
}

func (o *V1NetworkAddressGroupsIDPutNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutNotFound %s", 404, payload)
}

func (o *V1NetworkAddressGroupsIDPutNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsIDPutInternalServerError creates a V1NetworkAddressGroupsIDPutInternalServerError with default headers values
func NewV1NetworkAddressGroupsIDPutInternalServerError() *V1NetworkAddressGroupsIDPutInternalServerError {
	return &V1NetworkAddressGroupsIDPutInternalServerError{}
}

/*
V1NetworkAddressGroupsIDPutInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkAddressGroupsIDPutInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups Id put internal server error response has a 2xx status code
func (o *V1NetworkAddressGroupsIDPutInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups Id put internal server error response has a 3xx status code
func (o *V1NetworkAddressGroupsIDPutInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups Id put internal server error response has a 4xx status code
func (o *V1NetworkAddressGroupsIDPutInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network address groups Id put internal server error response has a 5xx status code
func (o *V1NetworkAddressGroupsIDPutInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network address groups Id put internal server error response a status code equal to that given
func (o *V1NetworkAddressGroupsIDPutInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network address groups Id put internal server error response
func (o *V1NetworkAddressGroupsIDPutInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkAddressGroupsIDPutInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutInternalServerError %s", 500, payload)
}

func (o *V1NetworkAddressGroupsIDPutInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-address-groups/{network_address_group_id}][%d] v1NetworkAddressGroupsIdPutInternalServerError %s", 500, payload)
}

func (o *V1NetworkAddressGroupsIDPutInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsIDPutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

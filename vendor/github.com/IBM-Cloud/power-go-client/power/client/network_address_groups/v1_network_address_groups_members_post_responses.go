// Code generated by go-swagger; DO NOT EDIT.

package network_address_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkAddressGroupsMembersPostReader is a Reader for the V1NetworkAddressGroupsMembersPost structure.
type V1NetworkAddressGroupsMembersPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkAddressGroupsMembersPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkAddressGroupsMembersPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkAddressGroupsMembersPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkAddressGroupsMembersPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkAddressGroupsMembersPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkAddressGroupsMembersPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkAddressGroupsMembersPostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewV1NetworkAddressGroupsMembersPostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkAddressGroupsMembersPostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/network-address-groups/{network_address_group_id}/members] v1.networkAddressGroups.members.post", response, response.Code())
	}
}

// NewV1NetworkAddressGroupsMembersPostOK creates a V1NetworkAddressGroupsMembersPostOK with default headers values
func NewV1NetworkAddressGroupsMembersPostOK() *V1NetworkAddressGroupsMembersPostOK {
	return &V1NetworkAddressGroupsMembersPostOK{}
}

/*
V1NetworkAddressGroupsMembersPostOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkAddressGroupsMembersPostOK struct {
	Payload *models.NetworkAddressGroupMember
}

// IsSuccess returns true when this v1 network address groups members post o k response has a 2xx status code
func (o *V1NetworkAddressGroupsMembersPostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network address groups members post o k response has a 3xx status code
func (o *V1NetworkAddressGroupsMembersPostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups members post o k response has a 4xx status code
func (o *V1NetworkAddressGroupsMembersPostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network address groups members post o k response has a 5xx status code
func (o *V1NetworkAddressGroupsMembersPostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups members post o k response a status code equal to that given
func (o *V1NetworkAddressGroupsMembersPostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network address groups members post o k response
func (o *V1NetworkAddressGroupsMembersPostOK) Code() int {
	return 200
}

func (o *V1NetworkAddressGroupsMembersPostOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostOK %s", 200, payload)
}

func (o *V1NetworkAddressGroupsMembersPostOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostOK %s", 200, payload)
}

func (o *V1NetworkAddressGroupsMembersPostOK) GetPayload() *models.NetworkAddressGroupMember {
	return o.Payload
}

func (o *V1NetworkAddressGroupsMembersPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkAddressGroupMember)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsMembersPostBadRequest creates a V1NetworkAddressGroupsMembersPostBadRequest with default headers values
func NewV1NetworkAddressGroupsMembersPostBadRequest() *V1NetworkAddressGroupsMembersPostBadRequest {
	return &V1NetworkAddressGroupsMembersPostBadRequest{}
}

/*
V1NetworkAddressGroupsMembersPostBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkAddressGroupsMembersPostBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups members post bad request response has a 2xx status code
func (o *V1NetworkAddressGroupsMembersPostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups members post bad request response has a 3xx status code
func (o *V1NetworkAddressGroupsMembersPostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups members post bad request response has a 4xx status code
func (o *V1NetworkAddressGroupsMembersPostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups members post bad request response has a 5xx status code
func (o *V1NetworkAddressGroupsMembersPostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups members post bad request response a status code equal to that given
func (o *V1NetworkAddressGroupsMembersPostBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network address groups members post bad request response
func (o *V1NetworkAddressGroupsMembersPostBadRequest) Code() int {
	return 400
}

func (o *V1NetworkAddressGroupsMembersPostBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostBadRequest %s", 400, payload)
}

func (o *V1NetworkAddressGroupsMembersPostBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostBadRequest %s", 400, payload)
}

func (o *V1NetworkAddressGroupsMembersPostBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsMembersPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsMembersPostUnauthorized creates a V1NetworkAddressGroupsMembersPostUnauthorized with default headers values
func NewV1NetworkAddressGroupsMembersPostUnauthorized() *V1NetworkAddressGroupsMembersPostUnauthorized {
	return &V1NetworkAddressGroupsMembersPostUnauthorized{}
}

/*
V1NetworkAddressGroupsMembersPostUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkAddressGroupsMembersPostUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups members post unauthorized response has a 2xx status code
func (o *V1NetworkAddressGroupsMembersPostUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups members post unauthorized response has a 3xx status code
func (o *V1NetworkAddressGroupsMembersPostUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups members post unauthorized response has a 4xx status code
func (o *V1NetworkAddressGroupsMembersPostUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups members post unauthorized response has a 5xx status code
func (o *V1NetworkAddressGroupsMembersPostUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups members post unauthorized response a status code equal to that given
func (o *V1NetworkAddressGroupsMembersPostUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network address groups members post unauthorized response
func (o *V1NetworkAddressGroupsMembersPostUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkAddressGroupsMembersPostUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostUnauthorized %s", 401, payload)
}

func (o *V1NetworkAddressGroupsMembersPostUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostUnauthorized %s", 401, payload)
}

func (o *V1NetworkAddressGroupsMembersPostUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsMembersPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsMembersPostForbidden creates a V1NetworkAddressGroupsMembersPostForbidden with default headers values
func NewV1NetworkAddressGroupsMembersPostForbidden() *V1NetworkAddressGroupsMembersPostForbidden {
	return &V1NetworkAddressGroupsMembersPostForbidden{}
}

/*
V1NetworkAddressGroupsMembersPostForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkAddressGroupsMembersPostForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups members post forbidden response has a 2xx status code
func (o *V1NetworkAddressGroupsMembersPostForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups members post forbidden response has a 3xx status code
func (o *V1NetworkAddressGroupsMembersPostForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups members post forbidden response has a 4xx status code
func (o *V1NetworkAddressGroupsMembersPostForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups members post forbidden response has a 5xx status code
func (o *V1NetworkAddressGroupsMembersPostForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups members post forbidden response a status code equal to that given
func (o *V1NetworkAddressGroupsMembersPostForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network address groups members post forbidden response
func (o *V1NetworkAddressGroupsMembersPostForbidden) Code() int {
	return 403
}

func (o *V1NetworkAddressGroupsMembersPostForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostForbidden %s", 403, payload)
}

func (o *V1NetworkAddressGroupsMembersPostForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostForbidden %s", 403, payload)
}

func (o *V1NetworkAddressGroupsMembersPostForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsMembersPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsMembersPostNotFound creates a V1NetworkAddressGroupsMembersPostNotFound with default headers values
func NewV1NetworkAddressGroupsMembersPostNotFound() *V1NetworkAddressGroupsMembersPostNotFound {
	return &V1NetworkAddressGroupsMembersPostNotFound{}
}

/*
V1NetworkAddressGroupsMembersPostNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkAddressGroupsMembersPostNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups members post not found response has a 2xx status code
func (o *V1NetworkAddressGroupsMembersPostNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups members post not found response has a 3xx status code
func (o *V1NetworkAddressGroupsMembersPostNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups members post not found response has a 4xx status code
func (o *V1NetworkAddressGroupsMembersPostNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups members post not found response has a 5xx status code
func (o *V1NetworkAddressGroupsMembersPostNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups members post not found response a status code equal to that given
func (o *V1NetworkAddressGroupsMembersPostNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network address groups members post not found response
func (o *V1NetworkAddressGroupsMembersPostNotFound) Code() int {
	return 404
}

func (o *V1NetworkAddressGroupsMembersPostNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostNotFound %s", 404, payload)
}

func (o *V1NetworkAddressGroupsMembersPostNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostNotFound %s", 404, payload)
}

func (o *V1NetworkAddressGroupsMembersPostNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsMembersPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsMembersPostConflict creates a V1NetworkAddressGroupsMembersPostConflict with default headers values
func NewV1NetworkAddressGroupsMembersPostConflict() *V1NetworkAddressGroupsMembersPostConflict {
	return &V1NetworkAddressGroupsMembersPostConflict{}
}

/*
V1NetworkAddressGroupsMembersPostConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkAddressGroupsMembersPostConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups members post conflict response has a 2xx status code
func (o *V1NetworkAddressGroupsMembersPostConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups members post conflict response has a 3xx status code
func (o *V1NetworkAddressGroupsMembersPostConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups members post conflict response has a 4xx status code
func (o *V1NetworkAddressGroupsMembersPostConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups members post conflict response has a 5xx status code
func (o *V1NetworkAddressGroupsMembersPostConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups members post conflict response a status code equal to that given
func (o *V1NetworkAddressGroupsMembersPostConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network address groups members post conflict response
func (o *V1NetworkAddressGroupsMembersPostConflict) Code() int {
	return 409
}

func (o *V1NetworkAddressGroupsMembersPostConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostConflict %s", 409, payload)
}

func (o *V1NetworkAddressGroupsMembersPostConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostConflict %s", 409, payload)
}

func (o *V1NetworkAddressGroupsMembersPostConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsMembersPostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsMembersPostUnprocessableEntity creates a V1NetworkAddressGroupsMembersPostUnprocessableEntity with default headers values
func NewV1NetworkAddressGroupsMembersPostUnprocessableEntity() *V1NetworkAddressGroupsMembersPostUnprocessableEntity {
	return &V1NetworkAddressGroupsMembersPostUnprocessableEntity{}
}

/*
V1NetworkAddressGroupsMembersPostUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type V1NetworkAddressGroupsMembersPostUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups members post unprocessable entity response has a 2xx status code
func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups members post unprocessable entity response has a 3xx status code
func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups members post unprocessable entity response has a 4xx status code
func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network address groups members post unprocessable entity response has a 5xx status code
func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network address groups members post unprocessable entity response a status code equal to that given
func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the v1 network address groups members post unprocessable entity response
func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) Code() int {
	return 422
}

func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostUnprocessableEntity %s", 422, payload)
}

func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostUnprocessableEntity %s", 422, payload)
}

func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsMembersPostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkAddressGroupsMembersPostInternalServerError creates a V1NetworkAddressGroupsMembersPostInternalServerError with default headers values
func NewV1NetworkAddressGroupsMembersPostInternalServerError() *V1NetworkAddressGroupsMembersPostInternalServerError {
	return &V1NetworkAddressGroupsMembersPostInternalServerError{}
}

/*
V1NetworkAddressGroupsMembersPostInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkAddressGroupsMembersPostInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network address groups members post internal server error response has a 2xx status code
func (o *V1NetworkAddressGroupsMembersPostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network address groups members post internal server error response has a 3xx status code
func (o *V1NetworkAddressGroupsMembersPostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network address groups members post internal server error response has a 4xx status code
func (o *V1NetworkAddressGroupsMembersPostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network address groups members post internal server error response has a 5xx status code
func (o *V1NetworkAddressGroupsMembersPostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network address groups members post internal server error response a status code equal to that given
func (o *V1NetworkAddressGroupsMembersPostInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network address groups members post internal server error response
func (o *V1NetworkAddressGroupsMembersPostInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkAddressGroupsMembersPostInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostInternalServerError %s", 500, payload)
}

func (o *V1NetworkAddressGroupsMembersPostInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-address-groups/{network_address_group_id}/members][%d] v1NetworkAddressGroupsMembersPostInternalServerError %s", 500, payload)
}

func (o *V1NetworkAddressGroupsMembersPostInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkAddressGroupsMembersPostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

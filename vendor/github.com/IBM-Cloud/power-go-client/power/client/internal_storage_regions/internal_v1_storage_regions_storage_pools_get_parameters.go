// Code generated by go-swagger; DO NOT EDIT.

package internal_storage_regions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewInternalV1StorageRegionsStoragePoolsGetParams creates a new InternalV1StorageRegionsStoragePoolsGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewInternalV1StorageRegionsStoragePoolsGetParams() *InternalV1StorageRegionsStoragePoolsGetParams {
	return &InternalV1StorageRegionsStoragePoolsGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewInternalV1StorageRegionsStoragePoolsGetParamsWithTimeout creates a new InternalV1StorageRegionsStoragePoolsGetParams object
// with the ability to set a timeout on a request.
func NewInternalV1StorageRegionsStoragePoolsGetParamsWithTimeout(timeout time.Duration) *InternalV1StorageRegionsStoragePoolsGetParams {
	return &InternalV1StorageRegionsStoragePoolsGetParams{
		timeout: timeout,
	}
}

// NewInternalV1StorageRegionsStoragePoolsGetParamsWithContext creates a new InternalV1StorageRegionsStoragePoolsGetParams object
// with the ability to set a context for a request.
func NewInternalV1StorageRegionsStoragePoolsGetParamsWithContext(ctx context.Context) *InternalV1StorageRegionsStoragePoolsGetParams {
	return &InternalV1StorageRegionsStoragePoolsGetParams{
		Context: ctx,
	}
}

// NewInternalV1StorageRegionsStoragePoolsGetParamsWithHTTPClient creates a new InternalV1StorageRegionsStoragePoolsGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewInternalV1StorageRegionsStoragePoolsGetParamsWithHTTPClient(client *http.Client) *InternalV1StorageRegionsStoragePoolsGetParams {
	return &InternalV1StorageRegionsStoragePoolsGetParams{
		HTTPClient: client,
	}
}

/*
InternalV1StorageRegionsStoragePoolsGetParams contains all the parameters to send to the API endpoint

	for the internal v1 storage regions storage pools get operation.

	Typically these are written to a http.Request.
*/
type InternalV1StorageRegionsStoragePoolsGetParams struct {

	/* RegionZoneID.

	   ID of a Power Cloud Region Zone
	*/
	RegionZoneID string

	/* StoragePoolName.

	   Storage pool name
	*/
	StoragePoolName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the internal v1 storage regions storage pools get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *InternalV1StorageRegionsStoragePoolsGetParams) WithDefaults() *InternalV1StorageRegionsStoragePoolsGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the internal v1 storage regions storage pools get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *InternalV1StorageRegionsStoragePoolsGetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) WithTimeout(timeout time.Duration) *InternalV1StorageRegionsStoragePoolsGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) WithContext(ctx context.Context) *InternalV1StorageRegionsStoragePoolsGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) WithHTTPClient(client *http.Client) *InternalV1StorageRegionsStoragePoolsGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRegionZoneID adds the regionZoneID to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) WithRegionZoneID(regionZoneID string) *InternalV1StorageRegionsStoragePoolsGetParams {
	o.SetRegionZoneID(regionZoneID)
	return o
}

// SetRegionZoneID adds the regionZoneId to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) SetRegionZoneID(regionZoneID string) {
	o.RegionZoneID = regionZoneID
}

// WithStoragePoolName adds the storagePoolName to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) WithStoragePoolName(storagePoolName string) *InternalV1StorageRegionsStoragePoolsGetParams {
	o.SetStoragePoolName(storagePoolName)
	return o
}

// SetStoragePoolName adds the storagePoolName to the internal v1 storage regions storage pools get params
func (o *InternalV1StorageRegionsStoragePoolsGetParams) SetStoragePoolName(storagePoolName string) {
	o.StoragePoolName = storagePoolName
}

// WriteToRequest writes these params to a swagger request
func (o *InternalV1StorageRegionsStoragePoolsGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param region_zone_id
	if err := r.SetPathParam("region_zone_id", o.RegionZoneID); err != nil {
		return err
	}

	// path param storage_pool_name
	if err := r.SetPathParam("storage_pool_name", o.StoragePoolName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

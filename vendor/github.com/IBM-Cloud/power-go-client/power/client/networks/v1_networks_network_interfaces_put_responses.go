// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworksNetworkInterfacesPutReader is a Reader for the V1NetworksNetworkInterfacesPut structure.
type V1NetworksNetworkInterfacesPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworksNetworkInterfacesPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworksNetworkInterfacesPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworksNetworkInterfacesPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworksNetworkInterfacesPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworksNetworkInterfacesPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworksNetworkInterfacesPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewV1NetworksNetworkInterfacesPutUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworksNetworkInterfacesPutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}] v1.networks.network-interfaces.put", response, response.Code())
	}
}

// NewV1NetworksNetworkInterfacesPutOK creates a V1NetworksNetworkInterfacesPutOK with default headers values
func NewV1NetworksNetworkInterfacesPutOK() *V1NetworksNetworkInterfacesPutOK {
	return &V1NetworksNetworkInterfacesPutOK{}
}

/*
V1NetworksNetworkInterfacesPutOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworksNetworkInterfacesPutOK struct {
	Payload *models.NetworkInterface
}

// IsSuccess returns true when this v1 networks network interfaces put o k response has a 2xx status code
func (o *V1NetworksNetworkInterfacesPutOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 networks network interfaces put o k response has a 3xx status code
func (o *V1NetworksNetworkInterfacesPutOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 networks network interfaces put o k response has a 4xx status code
func (o *V1NetworksNetworkInterfacesPutOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 networks network interfaces put o k response has a 5xx status code
func (o *V1NetworksNetworkInterfacesPutOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 networks network interfaces put o k response a status code equal to that given
func (o *V1NetworksNetworkInterfacesPutOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 networks network interfaces put o k response
func (o *V1NetworksNetworkInterfacesPutOK) Code() int {
	return 200
}

func (o *V1NetworksNetworkInterfacesPutOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutOK %s", 200, payload)
}

func (o *V1NetworksNetworkInterfacesPutOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutOK %s", 200, payload)
}

func (o *V1NetworksNetworkInterfacesPutOK) GetPayload() *models.NetworkInterface {
	return o.Payload
}

func (o *V1NetworksNetworkInterfacesPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworksNetworkInterfacesPutBadRequest creates a V1NetworksNetworkInterfacesPutBadRequest with default headers values
func NewV1NetworksNetworkInterfacesPutBadRequest() *V1NetworksNetworkInterfacesPutBadRequest {
	return &V1NetworksNetworkInterfacesPutBadRequest{}
}

/*
V1NetworksNetworkInterfacesPutBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworksNetworkInterfacesPutBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 networks network interfaces put bad request response has a 2xx status code
func (o *V1NetworksNetworkInterfacesPutBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 networks network interfaces put bad request response has a 3xx status code
func (o *V1NetworksNetworkInterfacesPutBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 networks network interfaces put bad request response has a 4xx status code
func (o *V1NetworksNetworkInterfacesPutBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 networks network interfaces put bad request response has a 5xx status code
func (o *V1NetworksNetworkInterfacesPutBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 networks network interfaces put bad request response a status code equal to that given
func (o *V1NetworksNetworkInterfacesPutBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 networks network interfaces put bad request response
func (o *V1NetworksNetworkInterfacesPutBadRequest) Code() int {
	return 400
}

func (o *V1NetworksNetworkInterfacesPutBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutBadRequest %s", 400, payload)
}

func (o *V1NetworksNetworkInterfacesPutBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutBadRequest %s", 400, payload)
}

func (o *V1NetworksNetworkInterfacesPutBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworksNetworkInterfacesPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworksNetworkInterfacesPutUnauthorized creates a V1NetworksNetworkInterfacesPutUnauthorized with default headers values
func NewV1NetworksNetworkInterfacesPutUnauthorized() *V1NetworksNetworkInterfacesPutUnauthorized {
	return &V1NetworksNetworkInterfacesPutUnauthorized{}
}

/*
V1NetworksNetworkInterfacesPutUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworksNetworkInterfacesPutUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 networks network interfaces put unauthorized response has a 2xx status code
func (o *V1NetworksNetworkInterfacesPutUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 networks network interfaces put unauthorized response has a 3xx status code
func (o *V1NetworksNetworkInterfacesPutUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 networks network interfaces put unauthorized response has a 4xx status code
func (o *V1NetworksNetworkInterfacesPutUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 networks network interfaces put unauthorized response has a 5xx status code
func (o *V1NetworksNetworkInterfacesPutUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 networks network interfaces put unauthorized response a status code equal to that given
func (o *V1NetworksNetworkInterfacesPutUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 networks network interfaces put unauthorized response
func (o *V1NetworksNetworkInterfacesPutUnauthorized) Code() int {
	return 401
}

func (o *V1NetworksNetworkInterfacesPutUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutUnauthorized %s", 401, payload)
}

func (o *V1NetworksNetworkInterfacesPutUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutUnauthorized %s", 401, payload)
}

func (o *V1NetworksNetworkInterfacesPutUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworksNetworkInterfacesPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworksNetworkInterfacesPutForbidden creates a V1NetworksNetworkInterfacesPutForbidden with default headers values
func NewV1NetworksNetworkInterfacesPutForbidden() *V1NetworksNetworkInterfacesPutForbidden {
	return &V1NetworksNetworkInterfacesPutForbidden{}
}

/*
V1NetworksNetworkInterfacesPutForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworksNetworkInterfacesPutForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 networks network interfaces put forbidden response has a 2xx status code
func (o *V1NetworksNetworkInterfacesPutForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 networks network interfaces put forbidden response has a 3xx status code
func (o *V1NetworksNetworkInterfacesPutForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 networks network interfaces put forbidden response has a 4xx status code
func (o *V1NetworksNetworkInterfacesPutForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 networks network interfaces put forbidden response has a 5xx status code
func (o *V1NetworksNetworkInterfacesPutForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 networks network interfaces put forbidden response a status code equal to that given
func (o *V1NetworksNetworkInterfacesPutForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 networks network interfaces put forbidden response
func (o *V1NetworksNetworkInterfacesPutForbidden) Code() int {
	return 403
}

func (o *V1NetworksNetworkInterfacesPutForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutForbidden %s", 403, payload)
}

func (o *V1NetworksNetworkInterfacesPutForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutForbidden %s", 403, payload)
}

func (o *V1NetworksNetworkInterfacesPutForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworksNetworkInterfacesPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworksNetworkInterfacesPutNotFound creates a V1NetworksNetworkInterfacesPutNotFound with default headers values
func NewV1NetworksNetworkInterfacesPutNotFound() *V1NetworksNetworkInterfacesPutNotFound {
	return &V1NetworksNetworkInterfacesPutNotFound{}
}

/*
V1NetworksNetworkInterfacesPutNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworksNetworkInterfacesPutNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 networks network interfaces put not found response has a 2xx status code
func (o *V1NetworksNetworkInterfacesPutNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 networks network interfaces put not found response has a 3xx status code
func (o *V1NetworksNetworkInterfacesPutNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 networks network interfaces put not found response has a 4xx status code
func (o *V1NetworksNetworkInterfacesPutNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 networks network interfaces put not found response has a 5xx status code
func (o *V1NetworksNetworkInterfacesPutNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 networks network interfaces put not found response a status code equal to that given
func (o *V1NetworksNetworkInterfacesPutNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 networks network interfaces put not found response
func (o *V1NetworksNetworkInterfacesPutNotFound) Code() int {
	return 404
}

func (o *V1NetworksNetworkInterfacesPutNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutNotFound %s", 404, payload)
}

func (o *V1NetworksNetworkInterfacesPutNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutNotFound %s", 404, payload)
}

func (o *V1NetworksNetworkInterfacesPutNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworksNetworkInterfacesPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworksNetworkInterfacesPutUnprocessableEntity creates a V1NetworksNetworkInterfacesPutUnprocessableEntity with default headers values
func NewV1NetworksNetworkInterfacesPutUnprocessableEntity() *V1NetworksNetworkInterfacesPutUnprocessableEntity {
	return &V1NetworksNetworkInterfacesPutUnprocessableEntity{}
}

/*
V1NetworksNetworkInterfacesPutUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type V1NetworksNetworkInterfacesPutUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 networks network interfaces put unprocessable entity response has a 2xx status code
func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 networks network interfaces put unprocessable entity response has a 3xx status code
func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 networks network interfaces put unprocessable entity response has a 4xx status code
func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 networks network interfaces put unprocessable entity response has a 5xx status code
func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 networks network interfaces put unprocessable entity response a status code equal to that given
func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the v1 networks network interfaces put unprocessable entity response
func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) Code() int {
	return 422
}

func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutUnprocessableEntity %s", 422, payload)
}

func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutUnprocessableEntity %s", 422, payload)
}

func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworksNetworkInterfacesPutUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworksNetworkInterfacesPutInternalServerError creates a V1NetworksNetworkInterfacesPutInternalServerError with default headers values
func NewV1NetworksNetworkInterfacesPutInternalServerError() *V1NetworksNetworkInterfacesPutInternalServerError {
	return &V1NetworksNetworkInterfacesPutInternalServerError{}
}

/*
V1NetworksNetworkInterfacesPutInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworksNetworkInterfacesPutInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 networks network interfaces put internal server error response has a 2xx status code
func (o *V1NetworksNetworkInterfacesPutInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 networks network interfaces put internal server error response has a 3xx status code
func (o *V1NetworksNetworkInterfacesPutInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 networks network interfaces put internal server error response has a 4xx status code
func (o *V1NetworksNetworkInterfacesPutInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 networks network interfaces put internal server error response has a 5xx status code
func (o *V1NetworksNetworkInterfacesPutInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 networks network interfaces put internal server error response a status code equal to that given
func (o *V1NetworksNetworkInterfacesPutInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 networks network interfaces put internal server error response
func (o *V1NetworksNetworkInterfacesPutInternalServerError) Code() int {
	return 500
}

func (o *V1NetworksNetworkInterfacesPutInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutInternalServerError %s", 500, payload)
}

func (o *V1NetworksNetworkInterfacesPutInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/networks/{network_id}/network-interfaces/{network_interface_id}][%d] v1NetworksNetworkInterfacesPutInternalServerError %s", 500, payload)
}

func (o *V1NetworksNetworkInterfacesPutInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworksNetworkInterfacesPutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package datacenters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1DatacentersGetallReader is a Reader for the V1DatacentersGetall structure.
type V1DatacentersGetallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1DatacentersGetallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1DatacentersGetallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1DatacentersGetallBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1DatacentersGetallUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1DatacentersGetallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1DatacentersGetallInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/datacenters] v1.datacenters.getall", response, response.Code())
	}
}

// NewV1DatacentersGetallOK creates a V1DatacentersGetallOK with default headers values
func NewV1DatacentersGetallOK() *V1DatacentersGetallOK {
	return &V1DatacentersGetallOK{}
}

/*
V1DatacentersGetallOK describes a response with status code 200, with default header values.

OK
*/
type V1DatacentersGetallOK struct {
	Payload *models.Datacenters
}

// IsSuccess returns true when this v1 datacenters getall o k response has a 2xx status code
func (o *V1DatacentersGetallOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 datacenters getall o k response has a 3xx status code
func (o *V1DatacentersGetallOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters getall o k response has a 4xx status code
func (o *V1DatacentersGetallOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 datacenters getall o k response has a 5xx status code
func (o *V1DatacentersGetallOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 datacenters getall o k response a status code equal to that given
func (o *V1DatacentersGetallOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 datacenters getall o k response
func (o *V1DatacentersGetallOK) Code() int {
	return 200
}

func (o *V1DatacentersGetallOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallOK %s", 200, payload)
}

func (o *V1DatacentersGetallOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallOK %s", 200, payload)
}

func (o *V1DatacentersGetallOK) GetPayload() *models.Datacenters {
	return o.Payload
}

func (o *V1DatacentersGetallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Datacenters)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DatacentersGetallBadRequest creates a V1DatacentersGetallBadRequest with default headers values
func NewV1DatacentersGetallBadRequest() *V1DatacentersGetallBadRequest {
	return &V1DatacentersGetallBadRequest{}
}

/*
V1DatacentersGetallBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1DatacentersGetallBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 datacenters getall bad request response has a 2xx status code
func (o *V1DatacentersGetallBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 datacenters getall bad request response has a 3xx status code
func (o *V1DatacentersGetallBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters getall bad request response has a 4xx status code
func (o *V1DatacentersGetallBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 datacenters getall bad request response has a 5xx status code
func (o *V1DatacentersGetallBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 datacenters getall bad request response a status code equal to that given
func (o *V1DatacentersGetallBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 datacenters getall bad request response
func (o *V1DatacentersGetallBadRequest) Code() int {
	return 400
}

func (o *V1DatacentersGetallBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallBadRequest %s", 400, payload)
}

func (o *V1DatacentersGetallBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallBadRequest %s", 400, payload)
}

func (o *V1DatacentersGetallBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1DatacentersGetallBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DatacentersGetallUnauthorized creates a V1DatacentersGetallUnauthorized with default headers values
func NewV1DatacentersGetallUnauthorized() *V1DatacentersGetallUnauthorized {
	return &V1DatacentersGetallUnauthorized{}
}

/*
V1DatacentersGetallUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1DatacentersGetallUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 datacenters getall unauthorized response has a 2xx status code
func (o *V1DatacentersGetallUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 datacenters getall unauthorized response has a 3xx status code
func (o *V1DatacentersGetallUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters getall unauthorized response has a 4xx status code
func (o *V1DatacentersGetallUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 datacenters getall unauthorized response has a 5xx status code
func (o *V1DatacentersGetallUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 datacenters getall unauthorized response a status code equal to that given
func (o *V1DatacentersGetallUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 datacenters getall unauthorized response
func (o *V1DatacentersGetallUnauthorized) Code() int {
	return 401
}

func (o *V1DatacentersGetallUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallUnauthorized %s", 401, payload)
}

func (o *V1DatacentersGetallUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallUnauthorized %s", 401, payload)
}

func (o *V1DatacentersGetallUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1DatacentersGetallUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DatacentersGetallForbidden creates a V1DatacentersGetallForbidden with default headers values
func NewV1DatacentersGetallForbidden() *V1DatacentersGetallForbidden {
	return &V1DatacentersGetallForbidden{}
}

/*
V1DatacentersGetallForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1DatacentersGetallForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 datacenters getall forbidden response has a 2xx status code
func (o *V1DatacentersGetallForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 datacenters getall forbidden response has a 3xx status code
func (o *V1DatacentersGetallForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters getall forbidden response has a 4xx status code
func (o *V1DatacentersGetallForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 datacenters getall forbidden response has a 5xx status code
func (o *V1DatacentersGetallForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 datacenters getall forbidden response a status code equal to that given
func (o *V1DatacentersGetallForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 datacenters getall forbidden response
func (o *V1DatacentersGetallForbidden) Code() int {
	return 403
}

func (o *V1DatacentersGetallForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallForbidden %s", 403, payload)
}

func (o *V1DatacentersGetallForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallForbidden %s", 403, payload)
}

func (o *V1DatacentersGetallForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1DatacentersGetallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DatacentersGetallInternalServerError creates a V1DatacentersGetallInternalServerError with default headers values
func NewV1DatacentersGetallInternalServerError() *V1DatacentersGetallInternalServerError {
	return &V1DatacentersGetallInternalServerError{}
}

/*
V1DatacentersGetallInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1DatacentersGetallInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 datacenters getall internal server error response has a 2xx status code
func (o *V1DatacentersGetallInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 datacenters getall internal server error response has a 3xx status code
func (o *V1DatacentersGetallInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters getall internal server error response has a 4xx status code
func (o *V1DatacentersGetallInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 datacenters getall internal server error response has a 5xx status code
func (o *V1DatacentersGetallInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 datacenters getall internal server error response a status code equal to that given
func (o *V1DatacentersGetallInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 datacenters getall internal server error response
func (o *V1DatacentersGetallInternalServerError) Code() int {
	return 500
}

func (o *V1DatacentersGetallInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallInternalServerError %s", 500, payload)
}

func (o *V1DatacentersGetallInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters][%d] v1DatacentersGetallInternalServerError %s", 500, payload)
}

func (o *V1DatacentersGetallInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1DatacentersGetallInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

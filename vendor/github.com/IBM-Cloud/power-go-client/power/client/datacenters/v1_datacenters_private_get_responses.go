// Code generated by go-swagger; DO NOT EDIT.

package datacenters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1DatacentersPrivateGetReader is a Reader for the V1DatacentersPrivateGet structure.
type V1DatacentersPrivateGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1DatacentersPrivateGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1DatacentersPrivateGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1DatacentersPrivateGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1DatacentersPrivateGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1DatacentersPrivateGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1DatacentersPrivateGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/datacenters/private/{datacenter_region}] v1.datacentersPrivate.get", response, response.Code())
	}
}

// NewV1DatacentersPrivateGetOK creates a V1DatacentersPrivateGetOK with default headers values
func NewV1DatacentersPrivateGetOK() *V1DatacentersPrivateGetOK {
	return &V1DatacentersPrivateGetOK{}
}

/*
V1DatacentersPrivateGetOK describes a response with status code 200, with default header values.

OK
*/
type V1DatacentersPrivateGetOK struct {
	Payload *models.Datacenter
}

// IsSuccess returns true when this v1 datacenters private get o k response has a 2xx status code
func (o *V1DatacentersPrivateGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 datacenters private get o k response has a 3xx status code
func (o *V1DatacentersPrivateGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters private get o k response has a 4xx status code
func (o *V1DatacentersPrivateGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 datacenters private get o k response has a 5xx status code
func (o *V1DatacentersPrivateGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 datacenters private get o k response a status code equal to that given
func (o *V1DatacentersPrivateGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 datacenters private get o k response
func (o *V1DatacentersPrivateGetOK) Code() int {
	return 200
}

func (o *V1DatacentersPrivateGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetOK %s", 200, payload)
}

func (o *V1DatacentersPrivateGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetOK %s", 200, payload)
}

func (o *V1DatacentersPrivateGetOK) GetPayload() *models.Datacenter {
	return o.Payload
}

func (o *V1DatacentersPrivateGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Datacenter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DatacentersPrivateGetBadRequest creates a V1DatacentersPrivateGetBadRequest with default headers values
func NewV1DatacentersPrivateGetBadRequest() *V1DatacentersPrivateGetBadRequest {
	return &V1DatacentersPrivateGetBadRequest{}
}

/*
V1DatacentersPrivateGetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1DatacentersPrivateGetBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 datacenters private get bad request response has a 2xx status code
func (o *V1DatacentersPrivateGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 datacenters private get bad request response has a 3xx status code
func (o *V1DatacentersPrivateGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters private get bad request response has a 4xx status code
func (o *V1DatacentersPrivateGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 datacenters private get bad request response has a 5xx status code
func (o *V1DatacentersPrivateGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 datacenters private get bad request response a status code equal to that given
func (o *V1DatacentersPrivateGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 datacenters private get bad request response
func (o *V1DatacentersPrivateGetBadRequest) Code() int {
	return 400
}

func (o *V1DatacentersPrivateGetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetBadRequest %s", 400, payload)
}

func (o *V1DatacentersPrivateGetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetBadRequest %s", 400, payload)
}

func (o *V1DatacentersPrivateGetBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1DatacentersPrivateGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DatacentersPrivateGetUnauthorized creates a V1DatacentersPrivateGetUnauthorized with default headers values
func NewV1DatacentersPrivateGetUnauthorized() *V1DatacentersPrivateGetUnauthorized {
	return &V1DatacentersPrivateGetUnauthorized{}
}

/*
V1DatacentersPrivateGetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1DatacentersPrivateGetUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 datacenters private get unauthorized response has a 2xx status code
func (o *V1DatacentersPrivateGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 datacenters private get unauthorized response has a 3xx status code
func (o *V1DatacentersPrivateGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters private get unauthorized response has a 4xx status code
func (o *V1DatacentersPrivateGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 datacenters private get unauthorized response has a 5xx status code
func (o *V1DatacentersPrivateGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 datacenters private get unauthorized response a status code equal to that given
func (o *V1DatacentersPrivateGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 datacenters private get unauthorized response
func (o *V1DatacentersPrivateGetUnauthorized) Code() int {
	return 401
}

func (o *V1DatacentersPrivateGetUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetUnauthorized %s", 401, payload)
}

func (o *V1DatacentersPrivateGetUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetUnauthorized %s", 401, payload)
}

func (o *V1DatacentersPrivateGetUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1DatacentersPrivateGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DatacentersPrivateGetForbidden creates a V1DatacentersPrivateGetForbidden with default headers values
func NewV1DatacentersPrivateGetForbidden() *V1DatacentersPrivateGetForbidden {
	return &V1DatacentersPrivateGetForbidden{}
}

/*
V1DatacentersPrivateGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1DatacentersPrivateGetForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 datacenters private get forbidden response has a 2xx status code
func (o *V1DatacentersPrivateGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 datacenters private get forbidden response has a 3xx status code
func (o *V1DatacentersPrivateGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters private get forbidden response has a 4xx status code
func (o *V1DatacentersPrivateGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 datacenters private get forbidden response has a 5xx status code
func (o *V1DatacentersPrivateGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 datacenters private get forbidden response a status code equal to that given
func (o *V1DatacentersPrivateGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 datacenters private get forbidden response
func (o *V1DatacentersPrivateGetForbidden) Code() int {
	return 403
}

func (o *V1DatacentersPrivateGetForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetForbidden %s", 403, payload)
}

func (o *V1DatacentersPrivateGetForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetForbidden %s", 403, payload)
}

func (o *V1DatacentersPrivateGetForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1DatacentersPrivateGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DatacentersPrivateGetInternalServerError creates a V1DatacentersPrivateGetInternalServerError with default headers values
func NewV1DatacentersPrivateGetInternalServerError() *V1DatacentersPrivateGetInternalServerError {
	return &V1DatacentersPrivateGetInternalServerError{}
}

/*
V1DatacentersPrivateGetInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1DatacentersPrivateGetInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 datacenters private get internal server error response has a 2xx status code
func (o *V1DatacentersPrivateGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 datacenters private get internal server error response has a 3xx status code
func (o *V1DatacentersPrivateGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 datacenters private get internal server error response has a 4xx status code
func (o *V1DatacentersPrivateGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 datacenters private get internal server error response has a 5xx status code
func (o *V1DatacentersPrivateGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 datacenters private get internal server error response a status code equal to that given
func (o *V1DatacentersPrivateGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 datacenters private get internal server error response
func (o *V1DatacentersPrivateGetInternalServerError) Code() int {
	return 500
}

func (o *V1DatacentersPrivateGetInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetInternalServerError %s", 500, payload)
}

func (o *V1DatacentersPrivateGetInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/datacenters/private/{datacenter_region}][%d] v1DatacentersPrivateGetInternalServerError %s", 500, payload)
}

func (o *V1DatacentersPrivateGetInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1DatacentersPrivateGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package network_security_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkSecurityGroupsIDPutReader is a Reader for the V1NetworkSecurityGroupsIDPut structure.
type V1NetworkSecurityGroupsIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkSecurityGroupsIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkSecurityGroupsIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkSecurityGroupsIDPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkSecurityGroupsIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkSecurityGroupsIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkSecurityGroupsIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkSecurityGroupsIDPutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/network-security-groups/{network_security_group_id}] v1.networkSecurityGroups.id.put", response, response.Code())
	}
}

// NewV1NetworkSecurityGroupsIDPutOK creates a V1NetworkSecurityGroupsIDPutOK with default headers values
func NewV1NetworkSecurityGroupsIDPutOK() *V1NetworkSecurityGroupsIDPutOK {
	return &V1NetworkSecurityGroupsIDPutOK{}
}

/*
V1NetworkSecurityGroupsIDPutOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkSecurityGroupsIDPutOK struct {
	Payload *models.NetworkSecurityGroup
}

// IsSuccess returns true when this v1 network security groups Id put o k response has a 2xx status code
func (o *V1NetworkSecurityGroupsIDPutOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network security groups Id put o k response has a 3xx status code
func (o *V1NetworkSecurityGroupsIDPutOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups Id put o k response has a 4xx status code
func (o *V1NetworkSecurityGroupsIDPutOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network security groups Id put o k response has a 5xx status code
func (o *V1NetworkSecurityGroupsIDPutOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups Id put o k response a status code equal to that given
func (o *V1NetworkSecurityGroupsIDPutOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network security groups Id put o k response
func (o *V1NetworkSecurityGroupsIDPutOK) Code() int {
	return 200
}

func (o *V1NetworkSecurityGroupsIDPutOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutOK %s", 200, payload)
}

func (o *V1NetworkSecurityGroupsIDPutOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutOK %s", 200, payload)
}

func (o *V1NetworkSecurityGroupsIDPutOK) GetPayload() *models.NetworkSecurityGroup {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkSecurityGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsIDPutBadRequest creates a V1NetworkSecurityGroupsIDPutBadRequest with default headers values
func NewV1NetworkSecurityGroupsIDPutBadRequest() *V1NetworkSecurityGroupsIDPutBadRequest {
	return &V1NetworkSecurityGroupsIDPutBadRequest{}
}

/*
V1NetworkSecurityGroupsIDPutBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkSecurityGroupsIDPutBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups Id put bad request response has a 2xx status code
func (o *V1NetworkSecurityGroupsIDPutBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups Id put bad request response has a 3xx status code
func (o *V1NetworkSecurityGroupsIDPutBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups Id put bad request response has a 4xx status code
func (o *V1NetworkSecurityGroupsIDPutBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups Id put bad request response has a 5xx status code
func (o *V1NetworkSecurityGroupsIDPutBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups Id put bad request response a status code equal to that given
func (o *V1NetworkSecurityGroupsIDPutBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network security groups Id put bad request response
func (o *V1NetworkSecurityGroupsIDPutBadRequest) Code() int {
	return 400
}

func (o *V1NetworkSecurityGroupsIDPutBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutBadRequest %s", 400, payload)
}

func (o *V1NetworkSecurityGroupsIDPutBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutBadRequest %s", 400, payload)
}

func (o *V1NetworkSecurityGroupsIDPutBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsIDPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsIDPutUnauthorized creates a V1NetworkSecurityGroupsIDPutUnauthorized with default headers values
func NewV1NetworkSecurityGroupsIDPutUnauthorized() *V1NetworkSecurityGroupsIDPutUnauthorized {
	return &V1NetworkSecurityGroupsIDPutUnauthorized{}
}

/*
V1NetworkSecurityGroupsIDPutUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkSecurityGroupsIDPutUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups Id put unauthorized response has a 2xx status code
func (o *V1NetworkSecurityGroupsIDPutUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups Id put unauthorized response has a 3xx status code
func (o *V1NetworkSecurityGroupsIDPutUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups Id put unauthorized response has a 4xx status code
func (o *V1NetworkSecurityGroupsIDPutUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups Id put unauthorized response has a 5xx status code
func (o *V1NetworkSecurityGroupsIDPutUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups Id put unauthorized response a status code equal to that given
func (o *V1NetworkSecurityGroupsIDPutUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network security groups Id put unauthorized response
func (o *V1NetworkSecurityGroupsIDPutUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkSecurityGroupsIDPutUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutUnauthorized %s", 401, payload)
}

func (o *V1NetworkSecurityGroupsIDPutUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutUnauthorized %s", 401, payload)
}

func (o *V1NetworkSecurityGroupsIDPutUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsIDPutForbidden creates a V1NetworkSecurityGroupsIDPutForbidden with default headers values
func NewV1NetworkSecurityGroupsIDPutForbidden() *V1NetworkSecurityGroupsIDPutForbidden {
	return &V1NetworkSecurityGroupsIDPutForbidden{}
}

/*
V1NetworkSecurityGroupsIDPutForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkSecurityGroupsIDPutForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups Id put forbidden response has a 2xx status code
func (o *V1NetworkSecurityGroupsIDPutForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups Id put forbidden response has a 3xx status code
func (o *V1NetworkSecurityGroupsIDPutForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups Id put forbidden response has a 4xx status code
func (o *V1NetworkSecurityGroupsIDPutForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups Id put forbidden response has a 5xx status code
func (o *V1NetworkSecurityGroupsIDPutForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups Id put forbidden response a status code equal to that given
func (o *V1NetworkSecurityGroupsIDPutForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network security groups Id put forbidden response
func (o *V1NetworkSecurityGroupsIDPutForbidden) Code() int {
	return 403
}

func (o *V1NetworkSecurityGroupsIDPutForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutForbidden %s", 403, payload)
}

func (o *V1NetworkSecurityGroupsIDPutForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutForbidden %s", 403, payload)
}

func (o *V1NetworkSecurityGroupsIDPutForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsIDPutNotFound creates a V1NetworkSecurityGroupsIDPutNotFound with default headers values
func NewV1NetworkSecurityGroupsIDPutNotFound() *V1NetworkSecurityGroupsIDPutNotFound {
	return &V1NetworkSecurityGroupsIDPutNotFound{}
}

/*
V1NetworkSecurityGroupsIDPutNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkSecurityGroupsIDPutNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups Id put not found response has a 2xx status code
func (o *V1NetworkSecurityGroupsIDPutNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups Id put not found response has a 3xx status code
func (o *V1NetworkSecurityGroupsIDPutNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups Id put not found response has a 4xx status code
func (o *V1NetworkSecurityGroupsIDPutNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups Id put not found response has a 5xx status code
func (o *V1NetworkSecurityGroupsIDPutNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups Id put not found response a status code equal to that given
func (o *V1NetworkSecurityGroupsIDPutNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network security groups Id put not found response
func (o *V1NetworkSecurityGroupsIDPutNotFound) Code() int {
	return 404
}

func (o *V1NetworkSecurityGroupsIDPutNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutNotFound %s", 404, payload)
}

func (o *V1NetworkSecurityGroupsIDPutNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutNotFound %s", 404, payload)
}

func (o *V1NetworkSecurityGroupsIDPutNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsIDPutInternalServerError creates a V1NetworkSecurityGroupsIDPutInternalServerError with default headers values
func NewV1NetworkSecurityGroupsIDPutInternalServerError() *V1NetworkSecurityGroupsIDPutInternalServerError {
	return &V1NetworkSecurityGroupsIDPutInternalServerError{}
}

/*
V1NetworkSecurityGroupsIDPutInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkSecurityGroupsIDPutInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups Id put internal server error response has a 2xx status code
func (o *V1NetworkSecurityGroupsIDPutInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups Id put internal server error response has a 3xx status code
func (o *V1NetworkSecurityGroupsIDPutInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups Id put internal server error response has a 4xx status code
func (o *V1NetworkSecurityGroupsIDPutInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network security groups Id put internal server error response has a 5xx status code
func (o *V1NetworkSecurityGroupsIDPutInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network security groups Id put internal server error response a status code equal to that given
func (o *V1NetworkSecurityGroupsIDPutInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network security groups Id put internal server error response
func (o *V1NetworkSecurityGroupsIDPutInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkSecurityGroupsIDPutInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutInternalServerError %s", 500, payload)
}

func (o *V1NetworkSecurityGroupsIDPutInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-security-groups/{network_security_group_id}][%d] v1NetworkSecurityGroupsIdPutInternalServerError %s", 500, payload)
}

func (o *V1NetworkSecurityGroupsIDPutInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsIDPutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

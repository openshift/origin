// Code generated by go-swagger; DO NOT EDIT.

package network_security_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkSecurityGroupsListReader is a Reader for the V1NetworkSecurityGroupsList structure.
type V1NetworkSecurityGroupsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkSecurityGroupsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkSecurityGroupsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkSecurityGroupsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkSecurityGroupsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkSecurityGroupsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkSecurityGroupsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkSecurityGroupsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/network-security-groups] v1.networkSecurityGroups.list", response, response.Code())
	}
}

// NewV1NetworkSecurityGroupsListOK creates a V1NetworkSecurityGroupsListOK with default headers values
func NewV1NetworkSecurityGroupsListOK() *V1NetworkSecurityGroupsListOK {
	return &V1NetworkSecurityGroupsListOK{}
}

/*
V1NetworkSecurityGroupsListOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkSecurityGroupsListOK struct {
	Payload *models.NetworkSecurityGroups
}

// IsSuccess returns true when this v1 network security groups list o k response has a 2xx status code
func (o *V1NetworkSecurityGroupsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network security groups list o k response has a 3xx status code
func (o *V1NetworkSecurityGroupsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups list o k response has a 4xx status code
func (o *V1NetworkSecurityGroupsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network security groups list o k response has a 5xx status code
func (o *V1NetworkSecurityGroupsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups list o k response a status code equal to that given
func (o *V1NetworkSecurityGroupsListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network security groups list o k response
func (o *V1NetworkSecurityGroupsListOK) Code() int {
	return 200
}

func (o *V1NetworkSecurityGroupsListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListOK %s", 200, payload)
}

func (o *V1NetworkSecurityGroupsListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListOK %s", 200, payload)
}

func (o *V1NetworkSecurityGroupsListOK) GetPayload() *models.NetworkSecurityGroups {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkSecurityGroups)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsListBadRequest creates a V1NetworkSecurityGroupsListBadRequest with default headers values
func NewV1NetworkSecurityGroupsListBadRequest() *V1NetworkSecurityGroupsListBadRequest {
	return &V1NetworkSecurityGroupsListBadRequest{}
}

/*
V1NetworkSecurityGroupsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkSecurityGroupsListBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups list bad request response has a 2xx status code
func (o *V1NetworkSecurityGroupsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups list bad request response has a 3xx status code
func (o *V1NetworkSecurityGroupsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups list bad request response has a 4xx status code
func (o *V1NetworkSecurityGroupsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups list bad request response has a 5xx status code
func (o *V1NetworkSecurityGroupsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups list bad request response a status code equal to that given
func (o *V1NetworkSecurityGroupsListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network security groups list bad request response
func (o *V1NetworkSecurityGroupsListBadRequest) Code() int {
	return 400
}

func (o *V1NetworkSecurityGroupsListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListBadRequest %s", 400, payload)
}

func (o *V1NetworkSecurityGroupsListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListBadRequest %s", 400, payload)
}

func (o *V1NetworkSecurityGroupsListBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsListUnauthorized creates a V1NetworkSecurityGroupsListUnauthorized with default headers values
func NewV1NetworkSecurityGroupsListUnauthorized() *V1NetworkSecurityGroupsListUnauthorized {
	return &V1NetworkSecurityGroupsListUnauthorized{}
}

/*
V1NetworkSecurityGroupsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkSecurityGroupsListUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups list unauthorized response has a 2xx status code
func (o *V1NetworkSecurityGroupsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups list unauthorized response has a 3xx status code
func (o *V1NetworkSecurityGroupsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups list unauthorized response has a 4xx status code
func (o *V1NetworkSecurityGroupsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups list unauthorized response has a 5xx status code
func (o *V1NetworkSecurityGroupsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups list unauthorized response a status code equal to that given
func (o *V1NetworkSecurityGroupsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network security groups list unauthorized response
func (o *V1NetworkSecurityGroupsListUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkSecurityGroupsListUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListUnauthorized %s", 401, payload)
}

func (o *V1NetworkSecurityGroupsListUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListUnauthorized %s", 401, payload)
}

func (o *V1NetworkSecurityGroupsListUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsListForbidden creates a V1NetworkSecurityGroupsListForbidden with default headers values
func NewV1NetworkSecurityGroupsListForbidden() *V1NetworkSecurityGroupsListForbidden {
	return &V1NetworkSecurityGroupsListForbidden{}
}

/*
V1NetworkSecurityGroupsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkSecurityGroupsListForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups list forbidden response has a 2xx status code
func (o *V1NetworkSecurityGroupsListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups list forbidden response has a 3xx status code
func (o *V1NetworkSecurityGroupsListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups list forbidden response has a 4xx status code
func (o *V1NetworkSecurityGroupsListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups list forbidden response has a 5xx status code
func (o *V1NetworkSecurityGroupsListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups list forbidden response a status code equal to that given
func (o *V1NetworkSecurityGroupsListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network security groups list forbidden response
func (o *V1NetworkSecurityGroupsListForbidden) Code() int {
	return 403
}

func (o *V1NetworkSecurityGroupsListForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListForbidden %s", 403, payload)
}

func (o *V1NetworkSecurityGroupsListForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListForbidden %s", 403, payload)
}

func (o *V1NetworkSecurityGroupsListForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsListNotFound creates a V1NetworkSecurityGroupsListNotFound with default headers values
func NewV1NetworkSecurityGroupsListNotFound() *V1NetworkSecurityGroupsListNotFound {
	return &V1NetworkSecurityGroupsListNotFound{}
}

/*
V1NetworkSecurityGroupsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkSecurityGroupsListNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups list not found response has a 2xx status code
func (o *V1NetworkSecurityGroupsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups list not found response has a 3xx status code
func (o *V1NetworkSecurityGroupsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups list not found response has a 4xx status code
func (o *V1NetworkSecurityGroupsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups list not found response has a 5xx status code
func (o *V1NetworkSecurityGroupsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups list not found response a status code equal to that given
func (o *V1NetworkSecurityGroupsListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network security groups list not found response
func (o *V1NetworkSecurityGroupsListNotFound) Code() int {
	return 404
}

func (o *V1NetworkSecurityGroupsListNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListNotFound %s", 404, payload)
}

func (o *V1NetworkSecurityGroupsListNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListNotFound %s", 404, payload)
}

func (o *V1NetworkSecurityGroupsListNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsListInternalServerError creates a V1NetworkSecurityGroupsListInternalServerError with default headers values
func NewV1NetworkSecurityGroupsListInternalServerError() *V1NetworkSecurityGroupsListInternalServerError {
	return &V1NetworkSecurityGroupsListInternalServerError{}
}

/*
V1NetworkSecurityGroupsListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkSecurityGroupsListInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups list internal server error response has a 2xx status code
func (o *V1NetworkSecurityGroupsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups list internal server error response has a 3xx status code
func (o *V1NetworkSecurityGroupsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups list internal server error response has a 4xx status code
func (o *V1NetworkSecurityGroupsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network security groups list internal server error response has a 5xx status code
func (o *V1NetworkSecurityGroupsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network security groups list internal server error response a status code equal to that given
func (o *V1NetworkSecurityGroupsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network security groups list internal server error response
func (o *V1NetworkSecurityGroupsListInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkSecurityGroupsListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListInternalServerError %s", 500, payload)
}

func (o *V1NetworkSecurityGroupsListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-security-groups][%d] v1NetworkSecurityGroupsListInternalServerError %s", 500, payload)
}

func (o *V1NetworkSecurityGroupsListInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

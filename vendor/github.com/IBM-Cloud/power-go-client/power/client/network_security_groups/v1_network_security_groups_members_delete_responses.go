// Code generated by go-swagger; DO NOT EDIT.

package network_security_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkSecurityGroupsMembersDeleteReader is a Reader for the V1NetworkSecurityGroupsMembersDelete structure.
type V1NetworkSecurityGroupsMembersDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkSecurityGroupsMembersDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkSecurityGroupsMembersDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkSecurityGroupsMembersDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkSecurityGroupsMembersDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkSecurityGroupsMembersDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkSecurityGroupsMembersDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkSecurityGroupsMembersDeleteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkSecurityGroupsMembersDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}] v1.networkSecurityGroups.members.delete", response, response.Code())
	}
}

// NewV1NetworkSecurityGroupsMembersDeleteOK creates a V1NetworkSecurityGroupsMembersDeleteOK with default headers values
func NewV1NetworkSecurityGroupsMembersDeleteOK() *V1NetworkSecurityGroupsMembersDeleteOK {
	return &V1NetworkSecurityGroupsMembersDeleteOK{}
}

/*
V1NetworkSecurityGroupsMembersDeleteOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkSecurityGroupsMembersDeleteOK struct {
	Payload models.Object
}

// IsSuccess returns true when this v1 network security groups members delete o k response has a 2xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network security groups members delete o k response has a 3xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups members delete o k response has a 4xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network security groups members delete o k response has a 5xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups members delete o k response a status code equal to that given
func (o *V1NetworkSecurityGroupsMembersDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network security groups members delete o k response
func (o *V1NetworkSecurityGroupsMembersDeleteOK) Code() int {
	return 200
}

func (o *V1NetworkSecurityGroupsMembersDeleteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteOK %s", 200, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteOK %s", 200, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteOK) GetPayload() models.Object {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsMembersDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsMembersDeleteBadRequest creates a V1NetworkSecurityGroupsMembersDeleteBadRequest with default headers values
func NewV1NetworkSecurityGroupsMembersDeleteBadRequest() *V1NetworkSecurityGroupsMembersDeleteBadRequest {
	return &V1NetworkSecurityGroupsMembersDeleteBadRequest{}
}

/*
V1NetworkSecurityGroupsMembersDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkSecurityGroupsMembersDeleteBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups members delete bad request response has a 2xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups members delete bad request response has a 3xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups members delete bad request response has a 4xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups members delete bad request response has a 5xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups members delete bad request response a status code equal to that given
func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network security groups members delete bad request response
func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) Code() int {
	return 400
}

func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteBadRequest %s", 400, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteBadRequest %s", 400, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsMembersDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsMembersDeleteUnauthorized creates a V1NetworkSecurityGroupsMembersDeleteUnauthorized with default headers values
func NewV1NetworkSecurityGroupsMembersDeleteUnauthorized() *V1NetworkSecurityGroupsMembersDeleteUnauthorized {
	return &V1NetworkSecurityGroupsMembersDeleteUnauthorized{}
}

/*
V1NetworkSecurityGroupsMembersDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkSecurityGroupsMembersDeleteUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups members delete unauthorized response has a 2xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups members delete unauthorized response has a 3xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups members delete unauthorized response has a 4xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups members delete unauthorized response has a 5xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups members delete unauthorized response a status code equal to that given
func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network security groups members delete unauthorized response
func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteUnauthorized %s", 401, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteUnauthorized %s", 401, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsMembersDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsMembersDeleteForbidden creates a V1NetworkSecurityGroupsMembersDeleteForbidden with default headers values
func NewV1NetworkSecurityGroupsMembersDeleteForbidden() *V1NetworkSecurityGroupsMembersDeleteForbidden {
	return &V1NetworkSecurityGroupsMembersDeleteForbidden{}
}

/*
V1NetworkSecurityGroupsMembersDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkSecurityGroupsMembersDeleteForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups members delete forbidden response has a 2xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups members delete forbidden response has a 3xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups members delete forbidden response has a 4xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups members delete forbidden response has a 5xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups members delete forbidden response a status code equal to that given
func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network security groups members delete forbidden response
func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) Code() int {
	return 403
}

func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteForbidden %s", 403, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteForbidden %s", 403, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsMembersDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsMembersDeleteNotFound creates a V1NetworkSecurityGroupsMembersDeleteNotFound with default headers values
func NewV1NetworkSecurityGroupsMembersDeleteNotFound() *V1NetworkSecurityGroupsMembersDeleteNotFound {
	return &V1NetworkSecurityGroupsMembersDeleteNotFound{}
}

/*
V1NetworkSecurityGroupsMembersDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkSecurityGroupsMembersDeleteNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups members delete not found response has a 2xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups members delete not found response has a 3xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups members delete not found response has a 4xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups members delete not found response has a 5xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups members delete not found response a status code equal to that given
func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network security groups members delete not found response
func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) Code() int {
	return 404
}

func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteNotFound %s", 404, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteNotFound %s", 404, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsMembersDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsMembersDeleteConflict creates a V1NetworkSecurityGroupsMembersDeleteConflict with default headers values
func NewV1NetworkSecurityGroupsMembersDeleteConflict() *V1NetworkSecurityGroupsMembersDeleteConflict {
	return &V1NetworkSecurityGroupsMembersDeleteConflict{}
}

/*
V1NetworkSecurityGroupsMembersDeleteConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkSecurityGroupsMembersDeleteConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups members delete conflict response has a 2xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups members delete conflict response has a 3xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups members delete conflict response has a 4xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network security groups members delete conflict response has a 5xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network security groups members delete conflict response a status code equal to that given
func (o *V1NetworkSecurityGroupsMembersDeleteConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network security groups members delete conflict response
func (o *V1NetworkSecurityGroupsMembersDeleteConflict) Code() int {
	return 409
}

func (o *V1NetworkSecurityGroupsMembersDeleteConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteConflict %s", 409, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteConflict %s", 409, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsMembersDeleteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkSecurityGroupsMembersDeleteInternalServerError creates a V1NetworkSecurityGroupsMembersDeleteInternalServerError with default headers values
func NewV1NetworkSecurityGroupsMembersDeleteInternalServerError() *V1NetworkSecurityGroupsMembersDeleteInternalServerError {
	return &V1NetworkSecurityGroupsMembersDeleteInternalServerError{}
}

/*
V1NetworkSecurityGroupsMembersDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkSecurityGroupsMembersDeleteInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network security groups members delete internal server error response has a 2xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network security groups members delete internal server error response has a 3xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network security groups members delete internal server error response has a 4xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network security groups members delete internal server error response has a 5xx status code
func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network security groups members delete internal server error response a status code equal to that given
func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network security groups members delete internal server error response
func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteInternalServerError %s", 500, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-security-groups/{network_security_group_id}/members/{network_security_group_member_id}][%d] v1NetworkSecurityGroupsMembersDeleteInternalServerError %s", 500, payload)
}

func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkSecurityGroupsMembersDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	networkv1 "github.com/openshift/api/network/v1"
	applyconfigurationsnetworkv1 "github.com/openshift/client-go/network/applyconfigurations/network/v1"
	scheme "github.com/openshift/client-go/network/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// EgressNetworkPoliciesGetter has a method to return a EgressNetworkPolicyInterface.
// A group's client should implement this interface.
type EgressNetworkPoliciesGetter interface {
	EgressNetworkPolicies(namespace string) EgressNetworkPolicyInterface
}

// EgressNetworkPolicyInterface has methods to work with EgressNetworkPolicy resources.
type EgressNetworkPolicyInterface interface {
	Create(ctx context.Context, egressNetworkPolicy *networkv1.EgressNetworkPolicy, opts metav1.CreateOptions) (*networkv1.EgressNetworkPolicy, error)
	Update(ctx context.Context, egressNetworkPolicy *networkv1.EgressNetworkPolicy, opts metav1.UpdateOptions) (*networkv1.EgressNetworkPolicy, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*networkv1.EgressNetworkPolicy, error)
	List(ctx context.Context, opts metav1.ListOptions) (*networkv1.EgressNetworkPolicyList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *networkv1.EgressNetworkPolicy, err error)
	Apply(ctx context.Context, egressNetworkPolicy *applyconfigurationsnetworkv1.EgressNetworkPolicyApplyConfiguration, opts metav1.ApplyOptions) (result *networkv1.EgressNetworkPolicy, err error)
	EgressNetworkPolicyExpansion
}

// egressNetworkPolicies implements EgressNetworkPolicyInterface
type egressNetworkPolicies struct {
	*gentype.ClientWithListAndApply[*networkv1.EgressNetworkPolicy, *networkv1.EgressNetworkPolicyList, *applyconfigurationsnetworkv1.EgressNetworkPolicyApplyConfiguration]
}

// newEgressNetworkPolicies returns a EgressNetworkPolicies
func newEgressNetworkPolicies(c *NetworkV1Client, namespace string) *egressNetworkPolicies {
	return &egressNetworkPolicies{
		gentype.NewClientWithListAndApply[*networkv1.EgressNetworkPolicy, *networkv1.EgressNetworkPolicyList, *applyconfigurationsnetworkv1.EgressNetworkPolicyApplyConfiguration](
			"egressnetworkpolicies",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *networkv1.EgressNetworkPolicy { return &networkv1.EgressNetworkPolicy{} },
			func() *networkv1.EgressNetworkPolicyList { return &networkv1.EgressNetworkPolicyList{} },
		),
	}
}

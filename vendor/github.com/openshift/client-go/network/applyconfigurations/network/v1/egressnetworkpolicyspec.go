// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// EgressNetworkPolicySpecApplyConfiguration represents a declarative configuration of the EgressNetworkPolicySpec type for use
// with apply.
type EgressNetworkPolicySpecApplyConfiguration struct {
	Egress []EgressNetworkPolicyRuleApplyConfiguration `json:"egress,omitempty"`
}

// EgressNetworkPolicySpecApplyConfiguration constructs a declarative configuration of the EgressNetworkPolicySpec type for use with
// apply.
func EgressNetworkPolicySpec() *EgressNetworkPolicySpecApplyConfiguration {
	return &EgressNetworkPolicySpecApplyConfiguration{}
}

// WithEgress adds the given value to the Egress field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Egress field.
func (b *EgressNetworkPolicySpecApplyConfiguration) WithEgress(values ...*EgressNetworkPolicyRuleApplyConfiguration) *EgressNetworkPolicySpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithEgress")
		}
		b.Egress = append(b.Egress, *values[i])
	}
	return b
}

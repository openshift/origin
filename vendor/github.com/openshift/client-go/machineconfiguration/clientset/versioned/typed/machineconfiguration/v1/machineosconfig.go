// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	machineconfigurationv1 "github.com/openshift/api/machineconfiguration/v1"
	applyconfigurationsmachineconfigurationv1 "github.com/openshift/client-go/machineconfiguration/applyconfigurations/machineconfiguration/v1"
	scheme "github.com/openshift/client-go/machineconfiguration/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// MachineOSConfigsGetter has a method to return a MachineOSConfigInterface.
// A group's client should implement this interface.
type MachineOSConfigsGetter interface {
	MachineOSConfigs() MachineOSConfigInterface
}

// MachineOSConfigInterface has methods to work with MachineOSConfig resources.
type MachineOSConfigInterface interface {
	Create(ctx context.Context, machineOSConfig *machineconfigurationv1.MachineOSConfig, opts metav1.CreateOptions) (*machineconfigurationv1.MachineOSConfig, error)
	Update(ctx context.Context, machineOSConfig *machineconfigurationv1.MachineOSConfig, opts metav1.UpdateOptions) (*machineconfigurationv1.MachineOSConfig, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, machineOSConfig *machineconfigurationv1.MachineOSConfig, opts metav1.UpdateOptions) (*machineconfigurationv1.MachineOSConfig, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*machineconfigurationv1.MachineOSConfig, error)
	List(ctx context.Context, opts metav1.ListOptions) (*machineconfigurationv1.MachineOSConfigList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *machineconfigurationv1.MachineOSConfig, err error)
	Apply(ctx context.Context, machineOSConfig *applyconfigurationsmachineconfigurationv1.MachineOSConfigApplyConfiguration, opts metav1.ApplyOptions) (result *machineconfigurationv1.MachineOSConfig, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, machineOSConfig *applyconfigurationsmachineconfigurationv1.MachineOSConfigApplyConfiguration, opts metav1.ApplyOptions) (result *machineconfigurationv1.MachineOSConfig, err error)
	MachineOSConfigExpansion
}

// machineOSConfigs implements MachineOSConfigInterface
type machineOSConfigs struct {
	*gentype.ClientWithListAndApply[*machineconfigurationv1.MachineOSConfig, *machineconfigurationv1.MachineOSConfigList, *applyconfigurationsmachineconfigurationv1.MachineOSConfigApplyConfiguration]
}

// newMachineOSConfigs returns a MachineOSConfigs
func newMachineOSConfigs(c *MachineconfigurationV1Client) *machineOSConfigs {
	return &machineOSConfigs{
		gentype.NewClientWithListAndApply[*machineconfigurationv1.MachineOSConfig, *machineconfigurationv1.MachineOSConfigList, *applyconfigurationsmachineconfigurationv1.MachineOSConfigApplyConfiguration](
			"machineosconfigs",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *machineconfigurationv1.MachineOSConfig { return &machineconfigurationv1.MachineOSConfig{} },
			func() *machineconfigurationv1.MachineOSConfigList {
				return &machineconfigurationv1.MachineOSConfigList{}
			},
		),
	}
}

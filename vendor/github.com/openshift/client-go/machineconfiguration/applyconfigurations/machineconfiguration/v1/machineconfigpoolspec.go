// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	intstr "k8s.io/apimachinery/pkg/util/intstr"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// MachineConfigPoolSpecApplyConfiguration represents a declarative configuration of the MachineConfigPoolSpec type for use
// with apply.
type MachineConfigPoolSpecApplyConfiguration struct {
	MachineConfigSelector *v1.LabelSelectorApplyConfiguration                     `json:"machineConfigSelector,omitempty"`
	NodeSelector          *v1.LabelSelectorApplyConfiguration                     `json:"nodeSelector,omitempty"`
	Paused                *bool                                                   `json:"paused,omitempty"`
	MaxUnavailable        *intstr.IntOrString                                     `json:"maxUnavailable,omitempty"`
	Configuration         *MachineConfigPoolStatusConfigurationApplyConfiguration `json:"configuration,omitempty"`
	PinnedImageSets       []PinnedImageSetRefApplyConfiguration                   `json:"pinnedImageSets,omitempty"`
}

// MachineConfigPoolSpecApplyConfiguration constructs a declarative configuration of the MachineConfigPoolSpec type for use with
// apply.
func MachineConfigPoolSpec() *MachineConfigPoolSpecApplyConfiguration {
	return &MachineConfigPoolSpecApplyConfiguration{}
}

// WithMachineConfigSelector sets the MachineConfigSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MachineConfigSelector field is set to the value of the last call.
func (b *MachineConfigPoolSpecApplyConfiguration) WithMachineConfigSelector(value *v1.LabelSelectorApplyConfiguration) *MachineConfigPoolSpecApplyConfiguration {
	b.MachineConfigSelector = value
	return b
}

// WithNodeSelector sets the NodeSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeSelector field is set to the value of the last call.
func (b *MachineConfigPoolSpecApplyConfiguration) WithNodeSelector(value *v1.LabelSelectorApplyConfiguration) *MachineConfigPoolSpecApplyConfiguration {
	b.NodeSelector = value
	return b
}

// WithPaused sets the Paused field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Paused field is set to the value of the last call.
func (b *MachineConfigPoolSpecApplyConfiguration) WithPaused(value bool) *MachineConfigPoolSpecApplyConfiguration {
	b.Paused = &value
	return b
}

// WithMaxUnavailable sets the MaxUnavailable field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxUnavailable field is set to the value of the last call.
func (b *MachineConfigPoolSpecApplyConfiguration) WithMaxUnavailable(value intstr.IntOrString) *MachineConfigPoolSpecApplyConfiguration {
	b.MaxUnavailable = &value
	return b
}

// WithConfiguration sets the Configuration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Configuration field is set to the value of the last call.
func (b *MachineConfigPoolSpecApplyConfiguration) WithConfiguration(value *MachineConfigPoolStatusConfigurationApplyConfiguration) *MachineConfigPoolSpecApplyConfiguration {
	b.Configuration = value
	return b
}

// WithPinnedImageSets adds the given value to the PinnedImageSets field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the PinnedImageSets field.
func (b *MachineConfigPoolSpecApplyConfiguration) WithPinnedImageSets(values ...*PinnedImageSetRefApplyConfiguration) *MachineConfigPoolSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithPinnedImageSets")
		}
		b.PinnedImageSets = append(b.PinnedImageSets, *values[i])
	}
	return b
}

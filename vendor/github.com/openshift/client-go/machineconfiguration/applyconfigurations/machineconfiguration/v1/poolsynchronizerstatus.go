// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/machineconfiguration/v1"
)

// PoolSynchronizerStatusApplyConfiguration represents a declarative configuration of the PoolSynchronizerStatus type for use
// with apply.
type PoolSynchronizerStatusApplyConfiguration struct {
	PoolSynchronizerType    *v1.PoolSynchronizerType `json:"poolSynchronizerType,omitempty"`
	MachineCount            *int64                   `json:"machineCount,omitempty"`
	UpdatedMachineCount     *int64                   `json:"updatedMachineCount,omitempty"`
	ReadyMachineCount       *int64                   `json:"readyMachineCount,omitempty"`
	AvailableMachineCount   *int64                   `json:"availableMachineCount,omitempty"`
	UnavailableMachineCount *int64                   `json:"unavailableMachineCount,omitempty"`
	ObservedGeneration      *int64                   `json:"observedGeneration,omitempty"`
}

// PoolSynchronizerStatusApplyConfiguration constructs a declarative configuration of the PoolSynchronizerStatus type for use with
// apply.
func PoolSynchronizerStatus() *PoolSynchronizerStatusApplyConfiguration {
	return &PoolSynchronizerStatusApplyConfiguration{}
}

// WithPoolSynchronizerType sets the PoolSynchronizerType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PoolSynchronizerType field is set to the value of the last call.
func (b *PoolSynchronizerStatusApplyConfiguration) WithPoolSynchronizerType(value v1.PoolSynchronizerType) *PoolSynchronizerStatusApplyConfiguration {
	b.PoolSynchronizerType = &value
	return b
}

// WithMachineCount sets the MachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MachineCount field is set to the value of the last call.
func (b *PoolSynchronizerStatusApplyConfiguration) WithMachineCount(value int64) *PoolSynchronizerStatusApplyConfiguration {
	b.MachineCount = &value
	return b
}

// WithUpdatedMachineCount sets the UpdatedMachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdatedMachineCount field is set to the value of the last call.
func (b *PoolSynchronizerStatusApplyConfiguration) WithUpdatedMachineCount(value int64) *PoolSynchronizerStatusApplyConfiguration {
	b.UpdatedMachineCount = &value
	return b
}

// WithReadyMachineCount sets the ReadyMachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyMachineCount field is set to the value of the last call.
func (b *PoolSynchronizerStatusApplyConfiguration) WithReadyMachineCount(value int64) *PoolSynchronizerStatusApplyConfiguration {
	b.ReadyMachineCount = &value
	return b
}

// WithAvailableMachineCount sets the AvailableMachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AvailableMachineCount field is set to the value of the last call.
func (b *PoolSynchronizerStatusApplyConfiguration) WithAvailableMachineCount(value int64) *PoolSynchronizerStatusApplyConfiguration {
	b.AvailableMachineCount = &value
	return b
}

// WithUnavailableMachineCount sets the UnavailableMachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UnavailableMachineCount field is set to the value of the last call.
func (b *PoolSynchronizerStatusApplyConfiguration) WithUnavailableMachineCount(value int64) *PoolSynchronizerStatusApplyConfiguration {
	b.UnavailableMachineCount = &value
	return b
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *PoolSynchronizerStatusApplyConfiguration) WithObservedGeneration(value int64) *PoolSynchronizerStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

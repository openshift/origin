// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// MachineConfigPoolStatusApplyConfiguration represents a declarative configuration of the MachineConfigPoolStatus type for use
// with apply.
type MachineConfigPoolStatusApplyConfiguration struct {
	ObservedGeneration      *int64                                                  `json:"observedGeneration,omitempty"`
	Configuration           *MachineConfigPoolStatusConfigurationApplyConfiguration `json:"configuration,omitempty"`
	MachineCount            *int32                                                  `json:"machineCount,omitempty"`
	UpdatedMachineCount     *int32                                                  `json:"updatedMachineCount,omitempty"`
	ReadyMachineCount       *int32                                                  `json:"readyMachineCount,omitempty"`
	UnavailableMachineCount *int32                                                  `json:"unavailableMachineCount,omitempty"`
	DegradedMachineCount    *int32                                                  `json:"degradedMachineCount,omitempty"`
	Conditions              []MachineConfigPoolConditionApplyConfiguration          `json:"conditions,omitempty"`
	CertExpirys             []CertExpiryApplyConfiguration                          `json:"certExpirys,omitempty"`
	PoolSynchronizersStatus []PoolSynchronizerStatusApplyConfiguration              `json:"poolSynchronizersStatus,omitempty"`
}

// MachineConfigPoolStatusApplyConfiguration constructs a declarative configuration of the MachineConfigPoolStatus type for use with
// apply.
func MachineConfigPoolStatus() *MachineConfigPoolStatusApplyConfiguration {
	return &MachineConfigPoolStatusApplyConfiguration{}
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *MachineConfigPoolStatusApplyConfiguration) WithObservedGeneration(value int64) *MachineConfigPoolStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithConfiguration sets the Configuration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Configuration field is set to the value of the last call.
func (b *MachineConfigPoolStatusApplyConfiguration) WithConfiguration(value *MachineConfigPoolStatusConfigurationApplyConfiguration) *MachineConfigPoolStatusApplyConfiguration {
	b.Configuration = value
	return b
}

// WithMachineCount sets the MachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MachineCount field is set to the value of the last call.
func (b *MachineConfigPoolStatusApplyConfiguration) WithMachineCount(value int32) *MachineConfigPoolStatusApplyConfiguration {
	b.MachineCount = &value
	return b
}

// WithUpdatedMachineCount sets the UpdatedMachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdatedMachineCount field is set to the value of the last call.
func (b *MachineConfigPoolStatusApplyConfiguration) WithUpdatedMachineCount(value int32) *MachineConfigPoolStatusApplyConfiguration {
	b.UpdatedMachineCount = &value
	return b
}

// WithReadyMachineCount sets the ReadyMachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyMachineCount field is set to the value of the last call.
func (b *MachineConfigPoolStatusApplyConfiguration) WithReadyMachineCount(value int32) *MachineConfigPoolStatusApplyConfiguration {
	b.ReadyMachineCount = &value
	return b
}

// WithUnavailableMachineCount sets the UnavailableMachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UnavailableMachineCount field is set to the value of the last call.
func (b *MachineConfigPoolStatusApplyConfiguration) WithUnavailableMachineCount(value int32) *MachineConfigPoolStatusApplyConfiguration {
	b.UnavailableMachineCount = &value
	return b
}

// WithDegradedMachineCount sets the DegradedMachineCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DegradedMachineCount field is set to the value of the last call.
func (b *MachineConfigPoolStatusApplyConfiguration) WithDegradedMachineCount(value int32) *MachineConfigPoolStatusApplyConfiguration {
	b.DegradedMachineCount = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *MachineConfigPoolStatusApplyConfiguration) WithConditions(values ...*MachineConfigPoolConditionApplyConfiguration) *MachineConfigPoolStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithCertExpirys adds the given value to the CertExpirys field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the CertExpirys field.
func (b *MachineConfigPoolStatusApplyConfiguration) WithCertExpirys(values ...*CertExpiryApplyConfiguration) *MachineConfigPoolStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithCertExpirys")
		}
		b.CertExpirys = append(b.CertExpirys, *values[i])
	}
	return b
}

// WithPoolSynchronizersStatus adds the given value to the PoolSynchronizersStatus field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the PoolSynchronizersStatus field.
func (b *MachineConfigPoolStatusApplyConfiguration) WithPoolSynchronizersStatus(values ...*PoolSynchronizerStatusApplyConfiguration) *MachineConfigPoolStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithPoolSynchronizersStatus")
		}
		b.PoolSynchronizersStatus = append(b.PoolSynchronizersStatus, *values[i])
	}
	return b
}

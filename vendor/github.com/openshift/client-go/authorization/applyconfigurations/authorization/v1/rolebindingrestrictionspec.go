// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// RoleBindingRestrictionSpecApplyConfiguration represents a declarative configuration of the RoleBindingRestrictionSpec type for use
// with apply.
type RoleBindingRestrictionSpecApplyConfiguration struct {
	UserRestriction           *UserRestrictionApplyConfiguration           `json:"userrestriction,omitempty"`
	GroupRestriction          *GroupRestrictionApplyConfiguration          `json:"grouprestriction,omitempty"`
	ServiceAccountRestriction *ServiceAccountRestrictionApplyConfiguration `json:"serviceaccountrestriction,omitempty"`
}

// RoleBindingRestrictionSpecApplyConfiguration constructs a declarative configuration of the RoleBindingRestrictionSpec type for use with
// apply.
func RoleBindingRestrictionSpec() *RoleBindingRestrictionSpecApplyConfiguration {
	return &RoleBindingRestrictionSpecApplyConfiguration{}
}

// WithUserRestriction sets the UserRestriction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UserRestriction field is set to the value of the last call.
func (b *RoleBindingRestrictionSpecApplyConfiguration) WithUserRestriction(value *UserRestrictionApplyConfiguration) *RoleBindingRestrictionSpecApplyConfiguration {
	b.UserRestriction = value
	return b
}

// WithGroupRestriction sets the GroupRestriction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GroupRestriction field is set to the value of the last call.
func (b *RoleBindingRestrictionSpecApplyConfiguration) WithGroupRestriction(value *GroupRestrictionApplyConfiguration) *RoleBindingRestrictionSpecApplyConfiguration {
	b.GroupRestriction = value
	return b
}

// WithServiceAccountRestriction sets the ServiceAccountRestriction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceAccountRestriction field is set to the value of the last call.
func (b *RoleBindingRestrictionSpecApplyConfiguration) WithServiceAccountRestriction(value *ServiceAccountRestrictionApplyConfiguration) *RoleBindingRestrictionSpecApplyConfiguration {
	b.ServiceAccountRestriction = value
	return b
}

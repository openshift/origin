// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ServiceAccountRestrictionApplyConfiguration represents a declarative configuration of the ServiceAccountRestriction type for use
// with apply.
type ServiceAccountRestrictionApplyConfiguration struct {
	ServiceAccounts []ServiceAccountReferenceApplyConfiguration `json:"serviceaccounts,omitempty"`
	Namespaces      []string                                    `json:"namespaces,omitempty"`
}

// ServiceAccountRestrictionApplyConfiguration constructs a declarative configuration of the ServiceAccountRestriction type for use with
// apply.
func ServiceAccountRestriction() *ServiceAccountRestrictionApplyConfiguration {
	return &ServiceAccountRestrictionApplyConfiguration{}
}

// WithServiceAccounts adds the given value to the ServiceAccounts field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ServiceAccounts field.
func (b *ServiceAccountRestrictionApplyConfiguration) WithServiceAccounts(values ...*ServiceAccountReferenceApplyConfiguration) *ServiceAccountRestrictionApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithServiceAccounts")
		}
		b.ServiceAccounts = append(b.ServiceAccounts, *values[i])
	}
	return b
}

// WithNamespaces adds the given value to the Namespaces field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Namespaces field.
func (b *ServiceAccountRestrictionApplyConfiguration) WithNamespaces(values ...string) *ServiceAccountRestrictionApplyConfiguration {
	for i := range values {
		b.Namespaces = append(b.Namespaces, values[i])
	}
	return b
}

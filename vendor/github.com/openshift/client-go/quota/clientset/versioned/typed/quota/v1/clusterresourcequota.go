// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	quotav1 "github.com/openshift/api/quota/v1"
	applyconfigurationsquotav1 "github.com/openshift/client-go/quota/applyconfigurations/quota/v1"
	scheme "github.com/openshift/client-go/quota/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ClusterResourceQuotasGetter has a method to return a ClusterResourceQuotaInterface.
// A group's client should implement this interface.
type ClusterResourceQuotasGetter interface {
	ClusterResourceQuotas() ClusterResourceQuotaInterface
}

// ClusterResourceQuotaInterface has methods to work with ClusterResourceQuota resources.
type ClusterResourceQuotaInterface interface {
	Create(ctx context.Context, clusterResourceQuota *quotav1.ClusterResourceQuota, opts metav1.CreateOptions) (*quotav1.ClusterResourceQuota, error)
	Update(ctx context.Context, clusterResourceQuota *quotav1.ClusterResourceQuota, opts metav1.UpdateOptions) (*quotav1.ClusterResourceQuota, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, clusterResourceQuota *quotav1.ClusterResourceQuota, opts metav1.UpdateOptions) (*quotav1.ClusterResourceQuota, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*quotav1.ClusterResourceQuota, error)
	List(ctx context.Context, opts metav1.ListOptions) (*quotav1.ClusterResourceQuotaList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *quotav1.ClusterResourceQuota, err error)
	Apply(ctx context.Context, clusterResourceQuota *applyconfigurationsquotav1.ClusterResourceQuotaApplyConfiguration, opts metav1.ApplyOptions) (result *quotav1.ClusterResourceQuota, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, clusterResourceQuota *applyconfigurationsquotav1.ClusterResourceQuotaApplyConfiguration, opts metav1.ApplyOptions) (result *quotav1.ClusterResourceQuota, err error)
	ClusterResourceQuotaExpansion
}

// clusterResourceQuotas implements ClusterResourceQuotaInterface
type clusterResourceQuotas struct {
	*gentype.ClientWithListAndApply[*quotav1.ClusterResourceQuota, *quotav1.ClusterResourceQuotaList, *applyconfigurationsquotav1.ClusterResourceQuotaApplyConfiguration]
}

// newClusterResourceQuotas returns a ClusterResourceQuotas
func newClusterResourceQuotas(c *QuotaV1Client) *clusterResourceQuotas {
	return &clusterResourceQuotas{
		gentype.NewClientWithListAndApply[*quotav1.ClusterResourceQuota, *quotav1.ClusterResourceQuotaList, *applyconfigurationsquotav1.ClusterResourceQuotaApplyConfiguration](
			"clusterresourcequotas",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *quotav1.ClusterResourceQuota { return &quotav1.ClusterResourceQuota{} },
			func() *quotav1.ClusterResourceQuotaList { return &quotav1.ClusterResourceQuotaList{} },
		),
	}
}

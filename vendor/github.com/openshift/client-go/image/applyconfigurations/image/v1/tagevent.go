// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// TagEventApplyConfiguration represents a declarative configuration of the TagEvent type for use
// with apply.
type TagEventApplyConfiguration struct {
	Created              *v1.Time `json:"created,omitempty"`
	DockerImageReference *string  `json:"dockerImageReference,omitempty"`
	Image                *string  `json:"image,omitempty"`
	Generation           *int64   `json:"generation,omitempty"`
}

// TagEventApplyConfiguration constructs a declarative configuration of the TagEvent type for use with
// apply.
func TagEvent() *TagEventApplyConfiguration {
	return &TagEventApplyConfiguration{}
}

// WithCreated sets the Created field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Created field is set to the value of the last call.
func (b *TagEventApplyConfiguration) WithCreated(value v1.Time) *TagEventApplyConfiguration {
	b.Created = &value
	return b
}

// WithDockerImageReference sets the DockerImageReference field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DockerImageReference field is set to the value of the last call.
func (b *TagEventApplyConfiguration) WithDockerImageReference(value string) *TagEventApplyConfiguration {
	b.DockerImageReference = &value
	return b
}

// WithImage sets the Image field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Image field is set to the value of the last call.
func (b *TagEventApplyConfiguration) WithImage(value string) *TagEventApplyConfiguration {
	b.Image = &value
	return b
}

// WithGeneration sets the Generation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Generation field is set to the value of the last call.
func (b *TagEventApplyConfiguration) WithGeneration(value int64) *TagEventApplyConfiguration {
	b.Generation = &value
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ConsoleCLIDownloadSpecApplyConfiguration represents a declarative configuration of the ConsoleCLIDownloadSpec type for use
// with apply.
type ConsoleCLIDownloadSpecApplyConfiguration struct {
	DisplayName *string                             `json:"displayName,omitempty"`
	Description *string                             `json:"description,omitempty"`
	Links       []CLIDownloadLinkApplyConfiguration `json:"links,omitempty"`
}

// ConsoleCLIDownloadSpecApplyConfiguration constructs a declarative configuration of the ConsoleCLIDownloadSpec type for use with
// apply.
func ConsoleCLIDownloadSpec() *ConsoleCLIDownloadSpecApplyConfiguration {
	return &ConsoleCLIDownloadSpecApplyConfiguration{}
}

// WithDisplayName sets the DisplayName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DisplayName field is set to the value of the last call.
func (b *ConsoleCLIDownloadSpecApplyConfiguration) WithDisplayName(value string) *ConsoleCLIDownloadSpecApplyConfiguration {
	b.DisplayName = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *ConsoleCLIDownloadSpecApplyConfiguration) WithDescription(value string) *ConsoleCLIDownloadSpecApplyConfiguration {
	b.Description = &value
	return b
}

// WithLinks adds the given value to the Links field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Links field.
func (b *ConsoleCLIDownloadSpecApplyConfiguration) WithLinks(values ...*CLIDownloadLinkApplyConfiguration) *ConsoleCLIDownloadSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithLinks")
		}
		b.Links = append(b.Links, *values[i])
	}
	return b
}

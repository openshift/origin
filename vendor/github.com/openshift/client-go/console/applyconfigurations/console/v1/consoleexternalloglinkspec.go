// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ConsoleExternalLogLinkSpecApplyConfiguration represents a declarative configuration of the ConsoleExternalLogLinkSpec type for use
// with apply.
type ConsoleExternalLogLinkSpecApplyConfiguration struct {
	Text            *string `json:"text,omitempty"`
	HrefTemplate    *string `json:"hrefTemplate,omitempty"`
	NamespaceFilter *string `json:"namespaceFilter,omitempty"`
}

// ConsoleExternalLogLinkSpecApplyConfiguration constructs a declarative configuration of the ConsoleExternalLogLinkSpec type for use with
// apply.
func ConsoleExternalLogLinkSpec() *ConsoleExternalLogLinkSpecApplyConfiguration {
	return &ConsoleExternalLogLinkSpecApplyConfiguration{}
}

// WithText sets the Text field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Text field is set to the value of the last call.
func (b *ConsoleExternalLogLinkSpecApplyConfiguration) WithText(value string) *ConsoleExternalLogLinkSpecApplyConfiguration {
	b.Text = &value
	return b
}

// WithHrefTemplate sets the HrefTemplate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HrefTemplate field is set to the value of the last call.
func (b *ConsoleExternalLogLinkSpecApplyConfiguration) WithHrefTemplate(value string) *ConsoleExternalLogLinkSpecApplyConfiguration {
	b.HrefTemplate = &value
	return b
}

// WithNamespaceFilter sets the NamespaceFilter field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NamespaceFilter field is set to the value of the last call.
func (b *ConsoleExternalLogLinkSpecApplyConfiguration) WithNamespaceFilter(value string) *ConsoleExternalLogLinkSpecApplyConfiguration {
	b.NamespaceFilter = &value
	return b
}

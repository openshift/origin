// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ClusterMonitoringSpecApplyConfiguration represents a declarative configuration of the ClusterMonitoringSpec type for use
// with apply.
type ClusterMonitoringSpecApplyConfiguration struct {
	UserDefined         *UserDefinedMonitoringApplyConfiguration `json:"userDefined,omitempty"`
	AlertmanagerConfig  *AlertmanagerConfigApplyConfiguration    `json:"alertmanagerConfig,omitempty"`
	MetricsServerConfig *MetricsServerConfigApplyConfiguration   `json:"metricsServerConfig,omitempty"`
}

// ClusterMonitoringSpecApplyConfiguration constructs a declarative configuration of the ClusterMonitoringSpec type for use with
// apply.
func ClusterMonitoringSpec() *ClusterMonitoringSpecApplyConfiguration {
	return &ClusterMonitoringSpecApplyConfiguration{}
}

// WithUserDefined sets the UserDefined field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UserDefined field is set to the value of the last call.
func (b *ClusterMonitoringSpecApplyConfiguration) WithUserDefined(value *UserDefinedMonitoringApplyConfiguration) *ClusterMonitoringSpecApplyConfiguration {
	b.UserDefined = value
	return b
}

// WithAlertmanagerConfig sets the AlertmanagerConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AlertmanagerConfig field is set to the value of the last call.
func (b *ClusterMonitoringSpecApplyConfiguration) WithAlertmanagerConfig(value *AlertmanagerConfigApplyConfiguration) *ClusterMonitoringSpecApplyConfiguration {
	b.AlertmanagerConfig = value
	return b
}

// WithMetricsServerConfig sets the MetricsServerConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MetricsServerConfig field is set to the value of the last call.
func (b *ClusterMonitoringSpecApplyConfiguration) WithMetricsServerConfig(value *MetricsServerConfigApplyConfiguration) *ClusterMonitoringSpecApplyConfiguration {
	b.MetricsServerConfig = value
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	resource "k8s.io/apimachinery/pkg/api/resource"
)

// ContainerResourceApplyConfiguration represents a declarative configuration of the ContainerResource type for use
// with apply.
type ContainerResourceApplyConfiguration struct {
	Name    *string            `json:"name,omitempty"`
	Request *resource.Quantity `json:"request,omitempty"`
	Limit   *resource.Quantity `json:"limit,omitempty"`
}

// ContainerResourceApplyConfiguration constructs a declarative configuration of the ContainerResource type for use with
// apply.
func ContainerResource() *ContainerResourceApplyConfiguration {
	return &ContainerResourceApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ContainerResourceApplyConfiguration) WithName(value string) *ContainerResourceApplyConfiguration {
	b.Name = &value
	return b
}

// WithRequest sets the Request field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Request field is set to the value of the last call.
func (b *ContainerResourceApplyConfiguration) WithRequest(value resource.Quantity) *ContainerResourceApplyConfiguration {
	b.Request = &value
	return b
}

// WithLimit sets the Limit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Limit field is set to the value of the last call.
func (b *ContainerResourceApplyConfiguration) WithLimit(value resource.Quantity) *ContainerResourceApplyConfiguration {
	b.Limit = &value
	return b
}

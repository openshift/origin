// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/config/v1"
)

// DNSPlatformSpecApplyConfiguration represents a declarative configuration of the DNSPlatformSpec type for use
// with apply.
type DNSPlatformSpecApplyConfiguration struct {
	Type *v1.PlatformType              `json:"type,omitempty"`
	AWS  *AWSDNSSpecApplyConfiguration `json:"aws,omitempty"`
}

// DNSPlatformSpecApplyConfiguration constructs a declarative configuration of the DNSPlatformSpec type for use with
// apply.
func DNSPlatformSpec() *DNSPlatformSpecApplyConfiguration {
	return &DNSPlatformSpecApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *DNSPlatformSpecApplyConfiguration) WithType(value v1.PlatformType) *DNSPlatformSpecApplyConfiguration {
	b.Type = &value
	return b
}

// WithAWS sets the AWS field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AWS field is set to the value of the last call.
func (b *DNSPlatformSpecApplyConfiguration) WithAWS(value *AWSDNSSpecApplyConfiguration) *DNSPlatformSpecApplyConfiguration {
	b.AWS = value
	return b
}

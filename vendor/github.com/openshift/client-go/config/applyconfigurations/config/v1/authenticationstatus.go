// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// AuthenticationStatusApplyConfiguration represents a declarative configuration of the AuthenticationStatus type for use
// with apply.
type AuthenticationStatusApplyConfiguration struct {
	IntegratedOAuthMetadata *ConfigMapNameReferenceApplyConfiguration `json:"integratedOAuthMetadata,omitempty"`
	OIDCClients             []OIDCClientStatusApplyConfiguration      `json:"oidcClients,omitempty"`
}

// AuthenticationStatusApplyConfiguration constructs a declarative configuration of the AuthenticationStatus type for use with
// apply.
func AuthenticationStatus() *AuthenticationStatusApplyConfiguration {
	return &AuthenticationStatusApplyConfiguration{}
}

// WithIntegratedOAuthMetadata sets the IntegratedOAuthMetadata field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IntegratedOAuthMetadata field is set to the value of the last call.
func (b *AuthenticationStatusApplyConfiguration) WithIntegratedOAuthMetadata(value *ConfigMapNameReferenceApplyConfiguration) *AuthenticationStatusApplyConfiguration {
	b.IntegratedOAuthMetadata = value
	return b
}

// WithOIDCClients adds the given value to the OIDCClients field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the OIDCClients field.
func (b *AuthenticationStatusApplyConfiguration) WithOIDCClients(values ...*OIDCClientStatusApplyConfiguration) *AuthenticationStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithOIDCClients")
		}
		b.OIDCClients = append(b.OIDCClients, *values[i])
	}
	return b
}

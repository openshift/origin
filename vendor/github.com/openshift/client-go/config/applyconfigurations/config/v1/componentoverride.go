// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ComponentOverrideApplyConfiguration represents a declarative configuration of the ComponentOverride type for use
// with apply.
type ComponentOverrideApplyConfiguration struct {
	Kind      *string `json:"kind,omitempty"`
	Group     *string `json:"group,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Name      *string `json:"name,omitempty"`
	Unmanaged *bool   `json:"unmanaged,omitempty"`
}

// ComponentOverrideApplyConfiguration constructs a declarative configuration of the ComponentOverride type for use with
// apply.
func ComponentOverride() *ComponentOverrideApplyConfiguration {
	return &ComponentOverrideApplyConfiguration{}
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *ComponentOverrideApplyConfiguration) WithKind(value string) *ComponentOverrideApplyConfiguration {
	b.Kind = &value
	return b
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *ComponentOverrideApplyConfiguration) WithGroup(value string) *ComponentOverrideApplyConfiguration {
	b.Group = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ComponentOverrideApplyConfiguration) WithNamespace(value string) *ComponentOverrideApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ComponentOverrideApplyConfiguration) WithName(value string) *ComponentOverrideApplyConfiguration {
	b.Name = &value
	return b
}

// WithUnmanaged sets the Unmanaged field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Unmanaged field is set to the value of the last call.
func (b *ComponentOverrideApplyConfiguration) WithUnmanaged(value bool) *ComponentOverrideApplyConfiguration {
	b.Unmanaged = &value
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	configv1 "github.com/openshift/api/config/v1"
)

// UsernameClaimMappingApplyConfiguration represents a declarative configuration of the UsernameClaimMapping type for use
// with apply.
type UsernameClaimMappingApplyConfiguration struct {
	TokenClaimMappingApplyConfiguration `json:",inline"`
	PrefixPolicy                        *configv1.UsernamePrefixPolicy    `json:"prefixPolicy,omitempty"`
	Prefix                              *UsernamePrefixApplyConfiguration `json:"prefix,omitempty"`
}

// UsernameClaimMappingApplyConfiguration constructs a declarative configuration of the UsernameClaimMapping type for use with
// apply.
func UsernameClaimMapping() *UsernameClaimMappingApplyConfiguration {
	return &UsernameClaimMappingApplyConfiguration{}
}

// WithClaim sets the Claim field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Claim field is set to the value of the last call.
func (b *UsernameClaimMappingApplyConfiguration) WithClaim(value string) *UsernameClaimMappingApplyConfiguration {
	b.Claim = &value
	return b
}

// WithPrefixPolicy sets the PrefixPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrefixPolicy field is set to the value of the last call.
func (b *UsernameClaimMappingApplyConfiguration) WithPrefixPolicy(value configv1.UsernamePrefixPolicy) *UsernameClaimMappingApplyConfiguration {
	b.PrefixPolicy = &value
	return b
}

// WithPrefix sets the Prefix field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Prefix field is set to the value of the last call.
func (b *UsernameClaimMappingApplyConfiguration) WithPrefix(value *UsernamePrefixApplyConfiguration) *UsernameClaimMappingApplyConfiguration {
	b.Prefix = value
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/config/v1"
)

// ImageTagMirrorsApplyConfiguration represents a declarative configuration of the ImageTagMirrors type for use
// with apply.
type ImageTagMirrorsApplyConfiguration struct {
	Source             *string                `json:"source,omitempty"`
	Mirrors            []v1.ImageMirror       `json:"mirrors,omitempty"`
	MirrorSourcePolicy *v1.MirrorSourcePolicy `json:"mirrorSourcePolicy,omitempty"`
}

// ImageTagMirrorsApplyConfiguration constructs a declarative configuration of the ImageTagMirrors type for use with
// apply.
func ImageTagMirrors() *ImageTagMirrorsApplyConfiguration {
	return &ImageTagMirrorsApplyConfiguration{}
}

// WithSource sets the Source field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Source field is set to the value of the last call.
func (b *ImageTagMirrorsApplyConfiguration) WithSource(value string) *ImageTagMirrorsApplyConfiguration {
	b.Source = &value
	return b
}

// WithMirrors adds the given value to the Mirrors field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Mirrors field.
func (b *ImageTagMirrorsApplyConfiguration) WithMirrors(values ...v1.ImageMirror) *ImageTagMirrorsApplyConfiguration {
	for i := range values {
		b.Mirrors = append(b.Mirrors, values[i])
	}
	return b
}

// WithMirrorSourcePolicy sets the MirrorSourcePolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MirrorSourcePolicy field is set to the value of the last call.
func (b *ImageTagMirrorsApplyConfiguration) WithMirrorSourcePolicy(value v1.MirrorSourcePolicy) *ImageTagMirrorsApplyConfiguration {
	b.MirrorSourcePolicy = &value
	return b
}

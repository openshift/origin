// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ExternalIPConfigApplyConfiguration represents a declarative configuration of the ExternalIPConfig type for use
// with apply.
type ExternalIPConfigApplyConfiguration struct {
	Policy          *ExternalIPPolicyApplyConfiguration `json:"policy,omitempty"`
	AutoAssignCIDRs []string                            `json:"autoAssignCIDRs,omitempty"`
}

// ExternalIPConfigApplyConfiguration constructs a declarative configuration of the ExternalIPConfig type for use with
// apply.
func ExternalIPConfig() *ExternalIPConfigApplyConfiguration {
	return &ExternalIPConfigApplyConfiguration{}
}

// WithPolicy sets the Policy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Policy field is set to the value of the last call.
func (b *ExternalIPConfigApplyConfiguration) WithPolicy(value *ExternalIPPolicyApplyConfiguration) *ExternalIPConfigApplyConfiguration {
	b.Policy = value
	return b
}

// WithAutoAssignCIDRs adds the given value to the AutoAssignCIDRs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the AutoAssignCIDRs field.
func (b *ExternalIPConfigApplyConfiguration) WithAutoAssignCIDRs(values ...string) *ExternalIPConfigApplyConfiguration {
	for i := range values {
		b.AutoAssignCIDRs = append(b.AutoAssignCIDRs, values[i])
	}
	return b
}

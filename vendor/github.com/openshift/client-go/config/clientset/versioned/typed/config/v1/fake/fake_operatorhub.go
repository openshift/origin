// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/config/v1"
	configv1 "github.com/openshift/client-go/config/applyconfigurations/config/v1"
	typedconfigv1 "github.com/openshift/client-go/config/clientset/versioned/typed/config/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeOperatorHubs implements OperatorHubInterface
type fakeOperatorHubs struct {
	*gentype.FakeClientWithListAndApply[*v1.OperatorHub, *v1.OperatorHubList, *configv1.OperatorHubApplyConfiguration]
	Fake *FakeConfigV1
}

func newFakeOperatorHubs(fake *FakeConfigV1) typedconfigv1.OperatorHubInterface {
	return &fakeOperatorHubs{
		gentype.NewFakeClientWithListAndApply[*v1.OperatorHub, *v1.OperatorHubList, *configv1.OperatorHubApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("operatorhubs"),
			v1.SchemeGroupVersion.WithKind("OperatorHub"),
			func() *v1.OperatorHub { return &v1.OperatorHub{} },
			func() *v1.OperatorHubList { return &v1.OperatorHubList{} },
			func(dst, src *v1.OperatorHubList) { dst.ListMeta = src.ListMeta },
			func(list *v1.OperatorHubList) []*v1.OperatorHub { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.OperatorHubList, items []*v1.OperatorHub) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/openshift/api/config/v1alpha1"
	configv1alpha1 "github.com/openshift/client-go/config/applyconfigurations/config/v1alpha1"
	typedconfigv1alpha1 "github.com/openshift/client-go/config/clientset/versioned/typed/config/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeInsightsDataGathers implements InsightsDataGatherInterface
type fakeInsightsDataGathers struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.InsightsDataGather, *v1alpha1.InsightsDataGatherList, *configv1alpha1.InsightsDataGatherApplyConfiguration]
	Fake *FakeConfigV1alpha1
}

func newFakeInsightsDataGathers(fake *FakeConfigV1alpha1) typedconfigv1alpha1.InsightsDataGatherInterface {
	return &fakeInsightsDataGathers{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.InsightsDataGather, *v1alpha1.InsightsDataGatherList, *configv1alpha1.InsightsDataGatherApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("insightsdatagathers"),
			v1alpha1.SchemeGroupVersion.WithKind("InsightsDataGather"),
			func() *v1alpha1.InsightsDataGather { return &v1alpha1.InsightsDataGather{} },
			func() *v1alpha1.InsightsDataGatherList { return &v1alpha1.InsightsDataGatherList{} },
			func(dst, src *v1alpha1.InsightsDataGatherList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.InsightsDataGatherList) []*v1alpha1.InsightsDataGather {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.InsightsDataGatherList, items []*v1alpha1.InsightsDataGather) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "github.com/openshift/api/config/v1"
	configv1 "github.com/openshift/client-go/config/applyconfigurations/config/v1"
	scheme "github.com/openshift/client-go/config/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ImageDigestMirrorSetsGetter has a method to return a ImageDigestMirrorSetInterface.
// A group's client should implement this interface.
type ImageDigestMirrorSetsGetter interface {
	ImageDigestMirrorSets() ImageDigestMirrorSetInterface
}

// ImageDigestMirrorSetInterface has methods to work with ImageDigestMirrorSet resources.
type ImageDigestMirrorSetInterface interface {
	Create(ctx context.Context, imageDigestMirrorSet *v1.ImageDigestMirrorSet, opts metav1.CreateOptions) (*v1.ImageDigestMirrorSet, error)
	Update(ctx context.Context, imageDigestMirrorSet *v1.ImageDigestMirrorSet, opts metav1.UpdateOptions) (*v1.ImageDigestMirrorSet, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, imageDigestMirrorSet *v1.ImageDigestMirrorSet, opts metav1.UpdateOptions) (*v1.ImageDigestMirrorSet, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.ImageDigestMirrorSet, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.ImageDigestMirrorSetList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.ImageDigestMirrorSet, err error)
	Apply(ctx context.Context, imageDigestMirrorSet *configv1.ImageDigestMirrorSetApplyConfiguration, opts metav1.ApplyOptions) (result *v1.ImageDigestMirrorSet, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, imageDigestMirrorSet *configv1.ImageDigestMirrorSetApplyConfiguration, opts metav1.ApplyOptions) (result *v1.ImageDigestMirrorSet, err error)
	ImageDigestMirrorSetExpansion
}

// imageDigestMirrorSets implements ImageDigestMirrorSetInterface
type imageDigestMirrorSets struct {
	*gentype.ClientWithListAndApply[*v1.ImageDigestMirrorSet, *v1.ImageDigestMirrorSetList, *configv1.ImageDigestMirrorSetApplyConfiguration]
}

// newImageDigestMirrorSets returns a ImageDigestMirrorSets
func newImageDigestMirrorSets(c *ConfigV1Client) *imageDigestMirrorSets {
	return &imageDigestMirrorSets{
		gentype.NewClientWithListAndApply[*v1.ImageDigestMirrorSet, *v1.ImageDigestMirrorSetList, *configv1.ImageDigestMirrorSetApplyConfiguration](
			"imagedigestmirrorsets",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1.ImageDigestMirrorSet { return &v1.ImageDigestMirrorSet{} },
			func() *v1.ImageDigestMirrorSetList { return &v1.ImageDigestMirrorSetList{} }),
	}
}

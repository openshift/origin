// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/config/v1"
	configv1 "github.com/openshift/client-go/config/applyconfigurations/config/v1"
	typedconfigv1 "github.com/openshift/client-go/config/clientset/versioned/typed/config/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeInfrastructures implements InfrastructureInterface
type fakeInfrastructures struct {
	*gentype.FakeClientWithListAndApply[*v1.Infrastructure, *v1.InfrastructureList, *configv1.InfrastructureApplyConfiguration]
	Fake *FakeConfigV1
}

func newFakeInfrastructures(fake *FakeConfigV1) typedconfigv1.InfrastructureInterface {
	return &fakeInfrastructures{
		gentype.NewFakeClientWithListAndApply[*v1.Infrastructure, *v1.InfrastructureList, *configv1.InfrastructureApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("infrastructures"),
			v1.SchemeGroupVersion.WithKind("Infrastructure"),
			func() *v1.Infrastructure { return &v1.Infrastructure{} },
			func() *v1.InfrastructureList { return &v1.InfrastructureList{} },
			func(dst, src *v1.InfrastructureList) { dst.ListMeta = src.ListMeta },
			func(list *v1.InfrastructureList) []*v1.Infrastructure { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.InfrastructureList, items []*v1.Infrastructure) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}

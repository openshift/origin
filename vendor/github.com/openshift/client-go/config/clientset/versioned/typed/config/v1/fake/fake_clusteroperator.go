// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/config/v1"
	configv1 "github.com/openshift/client-go/config/applyconfigurations/config/v1"
	typedconfigv1 "github.com/openshift/client-go/config/clientset/versioned/typed/config/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeClusterOperators implements ClusterOperatorInterface
type fakeClusterOperators struct {
	*gentype.FakeClientWithListAndApply[*v1.ClusterOperator, *v1.ClusterOperatorList, *configv1.ClusterOperatorApplyConfiguration]
	Fake *FakeConfigV1
}

func newFakeClusterOperators(fake *FakeConfigV1) typedconfigv1.ClusterOperatorInterface {
	return &fakeClusterOperators{
		gentype.NewFakeClientWithListAndApply[*v1.ClusterOperator, *v1.ClusterOperatorList, *configv1.ClusterOperatorApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("clusteroperators"),
			v1.SchemeGroupVersion.WithKind("ClusterOperator"),
			func() *v1.ClusterOperator { return &v1.ClusterOperator{} },
			func() *v1.ClusterOperatorList { return &v1.ClusterOperatorList{} },
			func(dst, src *v1.ClusterOperatorList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ClusterOperatorList) []*v1.ClusterOperator { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.ClusterOperatorList, items []*v1.ClusterOperator) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}

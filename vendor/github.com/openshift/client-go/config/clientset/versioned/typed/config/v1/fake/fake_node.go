// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/config/v1"
	configv1 "github.com/openshift/client-go/config/applyconfigurations/config/v1"
	typedconfigv1 "github.com/openshift/client-go/config/clientset/versioned/typed/config/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeNodes implements NodeInterface
type fakeNodes struct {
	*gentype.FakeClientWithListAndApply[*v1.Node, *v1.NodeList, *configv1.NodeApplyConfiguration]
	Fake *FakeConfigV1
}

func newFakeNodes(fake *FakeConfigV1) typedconfigv1.NodeInterface {
	return &fakeNodes{
		gentype.NewFakeClientWithListAndApply[*v1.Node, *v1.NodeList, *configv1.NodeApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("nodes"),
			v1.SchemeGroupVersion.WithKind("Node"),
			func() *v1.Node { return &v1.Node{} },
			func() *v1.NodeList { return &v1.NodeList{} },
			func(dst, src *v1.NodeList) { dst.ListMeta = src.ListMeta },
			func(list *v1.NodeList) []*v1.Node { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.NodeList, items []*v1.Node) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}

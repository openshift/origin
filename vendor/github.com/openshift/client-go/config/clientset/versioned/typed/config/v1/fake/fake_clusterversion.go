// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/config/v1"
	configv1 "github.com/openshift/client-go/config/applyconfigurations/config/v1"
	typedconfigv1 "github.com/openshift/client-go/config/clientset/versioned/typed/config/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeClusterVersions implements ClusterVersionInterface
type fakeClusterVersions struct {
	*gentype.FakeClientWithListAndApply[*v1.ClusterVersion, *v1.ClusterVersionList, *configv1.ClusterVersionApplyConfiguration]
	Fake *FakeConfigV1
}

func newFakeClusterVersions(fake *FakeConfigV1) typedconfigv1.ClusterVersionInterface {
	return &fakeClusterVersions{
		gentype.NewFakeClientWithListAndApply[*v1.ClusterVersion, *v1.ClusterVersionList, *configv1.ClusterVersionApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("clusterversions"),
			v1.SchemeGroupVersion.WithKind("ClusterVersion"),
			func() *v1.ClusterVersion { return &v1.ClusterVersion{} },
			func() *v1.ClusterVersionList { return &v1.ClusterVersionList{} },
			func(dst, src *v1.ClusterVersionList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ClusterVersionList) []*v1.ClusterVersion { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.ClusterVersionList, items []*v1.ClusterVersion) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}

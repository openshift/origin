// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ImageRegistryConfigStorageSwiftApplyConfiguration represents a declarative configuration of the ImageRegistryConfigStorageSwift type for use
// with apply.
type ImageRegistryConfigStorageSwiftApplyConfiguration struct {
	AuthURL     *string `json:"authURL,omitempty"`
	AuthVersion *string `json:"authVersion,omitempty"`
	Container   *string `json:"container,omitempty"`
	Domain      *string `json:"domain,omitempty"`
	DomainID    *string `json:"domainID,omitempty"`
	Tenant      *string `json:"tenant,omitempty"`
	TenantID    *string `json:"tenantID,omitempty"`
	RegionName  *string `json:"regionName,omitempty"`
}

// ImageRegistryConfigStorageSwiftApplyConfiguration constructs a declarative configuration of the ImageRegistryConfigStorageSwift type for use with
// apply.
func ImageRegistryConfigStorageSwift() *ImageRegistryConfigStorageSwiftApplyConfiguration {
	return &ImageRegistryConfigStorageSwiftApplyConfiguration{}
}

// WithAuthURL sets the AuthURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthURL field is set to the value of the last call.
func (b *ImageRegistryConfigStorageSwiftApplyConfiguration) WithAuthURL(value string) *ImageRegistryConfigStorageSwiftApplyConfiguration {
	b.AuthURL = &value
	return b
}

// WithAuthVersion sets the AuthVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthVersion field is set to the value of the last call.
func (b *ImageRegistryConfigStorageSwiftApplyConfiguration) WithAuthVersion(value string) *ImageRegistryConfigStorageSwiftApplyConfiguration {
	b.AuthVersion = &value
	return b
}

// WithContainer sets the Container field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Container field is set to the value of the last call.
func (b *ImageRegistryConfigStorageSwiftApplyConfiguration) WithContainer(value string) *ImageRegistryConfigStorageSwiftApplyConfiguration {
	b.Container = &value
	return b
}

// WithDomain sets the Domain field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Domain field is set to the value of the last call.
func (b *ImageRegistryConfigStorageSwiftApplyConfiguration) WithDomain(value string) *ImageRegistryConfigStorageSwiftApplyConfiguration {
	b.Domain = &value
	return b
}

// WithDomainID sets the DomainID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DomainID field is set to the value of the last call.
func (b *ImageRegistryConfigStorageSwiftApplyConfiguration) WithDomainID(value string) *ImageRegistryConfigStorageSwiftApplyConfiguration {
	b.DomainID = &value
	return b
}

// WithTenant sets the Tenant field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Tenant field is set to the value of the last call.
func (b *ImageRegistryConfigStorageSwiftApplyConfiguration) WithTenant(value string) *ImageRegistryConfigStorageSwiftApplyConfiguration {
	b.Tenant = &value
	return b
}

// WithTenantID sets the TenantID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TenantID field is set to the value of the last call.
func (b *ImageRegistryConfigStorageSwiftApplyConfiguration) WithTenantID(value string) *ImageRegistryConfigStorageSwiftApplyConfiguration {
	b.TenantID = &value
	return b
}

// WithRegionName sets the RegionName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RegionName field is set to the value of the last call.
func (b *ImageRegistryConfigStorageSwiftApplyConfiguration) WithRegionName(value string) *ImageRegistryConfigStorageSwiftApplyConfiguration {
	b.RegionName = &value
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	operatorv1 "github.com/openshift/client-go/operator/applyconfigurations/operator/v1"
)

// ImageRegistryStatusApplyConfiguration represents a declarative configuration of the ImageRegistryStatus type for use
// with apply.
type ImageRegistryStatusApplyConfiguration struct {
	operatorv1.OperatorStatusApplyConfiguration `json:",inline"`
	StorageManaged                              *bool                                         `json:"storageManaged,omitempty"`
	Storage                                     *ImageRegistryConfigStorageApplyConfiguration `json:"storage,omitempty"`
}

// ImageRegistryStatusApplyConfiguration constructs a declarative configuration of the ImageRegistryStatus type for use with
// apply.
func ImageRegistryStatus() *ImageRegistryStatusApplyConfiguration {
	return &ImageRegistryStatusApplyConfiguration{}
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *ImageRegistryStatusApplyConfiguration) WithObservedGeneration(value int64) *ImageRegistryStatusApplyConfiguration {
	b.OperatorStatusApplyConfiguration.ObservedGeneration = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ImageRegistryStatusApplyConfiguration) WithConditions(values ...*operatorv1.OperatorConditionApplyConfiguration) *ImageRegistryStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.OperatorStatusApplyConfiguration.Conditions = append(b.OperatorStatusApplyConfiguration.Conditions, *values[i])
	}
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *ImageRegistryStatusApplyConfiguration) WithVersion(value string) *ImageRegistryStatusApplyConfiguration {
	b.OperatorStatusApplyConfiguration.Version = &value
	return b
}

// WithReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyReplicas field is set to the value of the last call.
func (b *ImageRegistryStatusApplyConfiguration) WithReadyReplicas(value int32) *ImageRegistryStatusApplyConfiguration {
	b.OperatorStatusApplyConfiguration.ReadyReplicas = &value
	return b
}

// WithLatestAvailableRevision sets the LatestAvailableRevision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LatestAvailableRevision field is set to the value of the last call.
func (b *ImageRegistryStatusApplyConfiguration) WithLatestAvailableRevision(value int32) *ImageRegistryStatusApplyConfiguration {
	b.OperatorStatusApplyConfiguration.LatestAvailableRevision = &value
	return b
}

// WithGenerations adds the given value to the Generations field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Generations field.
func (b *ImageRegistryStatusApplyConfiguration) WithGenerations(values ...*operatorv1.GenerationStatusApplyConfiguration) *ImageRegistryStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithGenerations")
		}
		b.OperatorStatusApplyConfiguration.Generations = append(b.OperatorStatusApplyConfiguration.Generations, *values[i])
	}
	return b
}

// WithStorageManaged sets the StorageManaged field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StorageManaged field is set to the value of the last call.
func (b *ImageRegistryStatusApplyConfiguration) WithStorageManaged(value bool) *ImageRegistryStatusApplyConfiguration {
	b.StorageManaged = &value
	return b
}

// WithStorage sets the Storage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Storage field is set to the value of the last call.
func (b *ImageRegistryStatusApplyConfiguration) WithStorage(value *ImageRegistryConfigStorageApplyConfiguration) *ImageRegistryStatusApplyConfiguration {
	b.Storage = value
	return b
}

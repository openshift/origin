// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ImageRegistryConfigStorageS3ApplyConfiguration represents a declarative configuration of the ImageRegistryConfigStorageS3 type for use
// with apply.
type ImageRegistryConfigStorageS3ApplyConfiguration struct {
	Bucket             *string                                                   `json:"bucket,omitempty"`
	Region             *string                                                   `json:"region,omitempty"`
	RegionEndpoint     *string                                                   `json:"regionEndpoint,omitempty"`
	ChunkSizeMiB       *int32                                                    `json:"chunkSizeMiB,omitempty"`
	Encrypt            *bool                                                     `json:"encrypt,omitempty"`
	KeyID              *string                                                   `json:"keyID,omitempty"`
	CloudFront         *ImageRegistryConfigStorageS3CloudFrontApplyConfiguration `json:"cloudFront,omitempty"`
	VirtualHostedStyle *bool                                                     `json:"virtualHostedStyle,omitempty"`
	TrustedCA          *S3TrustedCASourceApplyConfiguration                      `json:"trustedCA,omitempty"`
}

// ImageRegistryConfigStorageS3ApplyConfiguration constructs a declarative configuration of the ImageRegistryConfigStorageS3 type for use with
// apply.
func ImageRegistryConfigStorageS3() *ImageRegistryConfigStorageS3ApplyConfiguration {
	return &ImageRegistryConfigStorageS3ApplyConfiguration{}
}

// WithBucket sets the Bucket field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bucket field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithBucket(value string) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.Bucket = &value
	return b
}

// WithRegion sets the Region field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Region field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithRegion(value string) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.Region = &value
	return b
}

// WithRegionEndpoint sets the RegionEndpoint field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RegionEndpoint field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithRegionEndpoint(value string) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.RegionEndpoint = &value
	return b
}

// WithChunkSizeMiB sets the ChunkSizeMiB field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ChunkSizeMiB field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithChunkSizeMiB(value int32) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.ChunkSizeMiB = &value
	return b
}

// WithEncrypt sets the Encrypt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Encrypt field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithEncrypt(value bool) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.Encrypt = &value
	return b
}

// WithKeyID sets the KeyID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KeyID field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithKeyID(value string) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.KeyID = &value
	return b
}

// WithCloudFront sets the CloudFront field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CloudFront field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithCloudFront(value *ImageRegistryConfigStorageS3CloudFrontApplyConfiguration) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.CloudFront = value
	return b
}

// WithVirtualHostedStyle sets the VirtualHostedStyle field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VirtualHostedStyle field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithVirtualHostedStyle(value bool) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.VirtualHostedStyle = &value
	return b
}

// WithTrustedCA sets the TrustedCA field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TrustedCA field is set to the value of the last call.
func (b *ImageRegistryConfigStorageS3ApplyConfiguration) WithTrustedCA(value *S3TrustedCASourceApplyConfiguration) *ImageRegistryConfigStorageS3ApplyConfiguration {
	b.TrustedCA = value
	return b
}

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "github.com/openshift/api/operator/v1"
	operatorv1 "github.com/openshift/client-go/operator/applyconfigurations/operator/v1"
	scheme "github.com/openshift/client-go/operator/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// CSISnapshotControllersGetter has a method to return a CSISnapshotControllerInterface.
// A group's client should implement this interface.
type CSISnapshotControllersGetter interface {
	CSISnapshotControllers() CSISnapshotControllerInterface
}

// CSISnapshotControllerInterface has methods to work with CSISnapshotController resources.
type CSISnapshotControllerInterface interface {
	Create(ctx context.Context, cSISnapshotController *v1.CSISnapshotController, opts metav1.CreateOptions) (*v1.CSISnapshotController, error)
	Update(ctx context.Context, cSISnapshotController *v1.CSISnapshotController, opts metav1.UpdateOptions) (*v1.CSISnapshotController, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, cSISnapshotController *v1.CSISnapshotController, opts metav1.UpdateOptions) (*v1.CSISnapshotController, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.CSISnapshotController, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.CSISnapshotControllerList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.CSISnapshotController, err error)
	Apply(ctx context.Context, cSISnapshotController *operatorv1.CSISnapshotControllerApplyConfiguration, opts metav1.ApplyOptions) (result *v1.CSISnapshotController, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, cSISnapshotController *operatorv1.CSISnapshotControllerApplyConfiguration, opts metav1.ApplyOptions) (result *v1.CSISnapshotController, err error)
	CSISnapshotControllerExpansion
}

// cSISnapshotControllers implements CSISnapshotControllerInterface
type cSISnapshotControllers struct {
	*gentype.ClientWithListAndApply[*v1.CSISnapshotController, *v1.CSISnapshotControllerList, *operatorv1.CSISnapshotControllerApplyConfiguration]
}

// newCSISnapshotControllers returns a CSISnapshotControllers
func newCSISnapshotControllers(c *OperatorV1Client) *cSISnapshotControllers {
	return &cSISnapshotControllers{
		gentype.NewClientWithListAndApply[*v1.CSISnapshotController, *v1.CSISnapshotControllerList, *operatorv1.CSISnapshotControllerApplyConfiguration](
			"csisnapshotcontrollers",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1.CSISnapshotController { return &v1.CSISnapshotController{} },
			func() *v1.CSISnapshotControllerList { return &v1.CSISnapshotControllerList{} }),
	}
}

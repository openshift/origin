// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	operatorv1 "github.com/openshift/api/operator/v1"
)

// LogoApplyConfiguration represents a declarative configuration of the Logo type for use
// with apply.
type LogoApplyConfiguration struct {
	Type   *operatorv1.LogoType      `json:"type,omitempty"`
	Themes []ThemeApplyConfiguration `json:"themes,omitempty"`
}

// LogoApplyConfiguration constructs a declarative configuration of the Logo type for use with
// apply.
func Logo() *LogoApplyConfiguration {
	return &LogoApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *LogoApplyConfiguration) WithType(value operatorv1.LogoType) *LogoApplyConfiguration {
	b.Type = &value
	return b
}

// WithThemes adds the given value to the Themes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Themes field.
func (b *LogoApplyConfiguration) WithThemes(values ...*ThemeApplyConfiguration) *LogoApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithThemes")
		}
		b.Themes = append(b.Themes, *values[i])
	}
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/operator/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// OperatorSpecApplyConfiguration represents a declarative configuration of the OperatorSpec type for use
// with apply.
type OperatorSpecApplyConfiguration struct {
	ManagementState            *v1.ManagementState   `json:"managementState,omitempty"`
	LogLevel                   *v1.LogLevel          `json:"logLevel,omitempty"`
	OperatorLogLevel           *v1.LogLevel          `json:"operatorLogLevel,omitempty"`
	UnsupportedConfigOverrides *runtime.RawExtension `json:"unsupportedConfigOverrides,omitempty"`
	ObservedConfig             *runtime.RawExtension `json:"observedConfig,omitempty"`
}

// OperatorSpecApplyConfiguration constructs a declarative configuration of the OperatorSpec type for use with
// apply.
func OperatorSpec() *OperatorSpecApplyConfiguration {
	return &OperatorSpecApplyConfiguration{}
}

// WithManagementState sets the ManagementState field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ManagementState field is set to the value of the last call.
func (b *OperatorSpecApplyConfiguration) WithManagementState(value v1.ManagementState) *OperatorSpecApplyConfiguration {
	b.ManagementState = &value
	return b
}

// WithLogLevel sets the LogLevel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LogLevel field is set to the value of the last call.
func (b *OperatorSpecApplyConfiguration) WithLogLevel(value v1.LogLevel) *OperatorSpecApplyConfiguration {
	b.LogLevel = &value
	return b
}

// WithOperatorLogLevel sets the OperatorLogLevel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OperatorLogLevel field is set to the value of the last call.
func (b *OperatorSpecApplyConfiguration) WithOperatorLogLevel(value v1.LogLevel) *OperatorSpecApplyConfiguration {
	b.OperatorLogLevel = &value
	return b
}

// WithUnsupportedConfigOverrides sets the UnsupportedConfigOverrides field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UnsupportedConfigOverrides field is set to the value of the last call.
func (b *OperatorSpecApplyConfiguration) WithUnsupportedConfigOverrides(value runtime.RawExtension) *OperatorSpecApplyConfiguration {
	b.UnsupportedConfigOverrides = &value
	return b
}

// WithObservedConfig sets the ObservedConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedConfig field is set to the value of the last call.
func (b *OperatorSpecApplyConfiguration) WithObservedConfig(value runtime.RawExtension) *OperatorSpecApplyConfiguration {
	b.ObservedConfig = &value
	return b
}

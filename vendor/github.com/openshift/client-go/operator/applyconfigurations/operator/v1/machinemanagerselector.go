// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/operator/v1"
)

// MachineManagerSelectorApplyConfiguration represents a declarative configuration of the MachineManagerSelector type for use
// with apply.
type MachineManagerSelectorApplyConfiguration struct {
	Mode    *v1.MachineManagerSelectorMode     `json:"mode,omitempty"`
	Partial *PartialSelectorApplyConfiguration `json:"partial,omitempty"`
}

// MachineManagerSelectorApplyConfiguration constructs a declarative configuration of the MachineManagerSelector type for use with
// apply.
func MachineManagerSelector() *MachineManagerSelectorApplyConfiguration {
	return &MachineManagerSelectorApplyConfiguration{}
}

// WithMode sets the Mode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mode field is set to the value of the last call.
func (b *MachineManagerSelectorApplyConfiguration) WithMode(value v1.MachineManagerSelectorMode) *MachineManagerSelectorApplyConfiguration {
	b.Mode = &value
	return b
}

// WithPartial sets the Partial field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Partial field is set to the value of the last call.
func (b *MachineManagerSelectorApplyConfiguration) WithPartial(value *PartialSelectorApplyConfiguration) *MachineManagerSelectorApplyConfiguration {
	b.Partial = value
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// StaticIPAMDNSApplyConfiguration represents a declarative configuration of the StaticIPAMDNS type for use
// with apply.
type StaticIPAMDNSApplyConfiguration struct {
	Nameservers []string `json:"nameservers,omitempty"`
	Domain      *string  `json:"domain,omitempty"`
	Search      []string `json:"search,omitempty"`
}

// StaticIPAMDNSApplyConfiguration constructs a declarative configuration of the StaticIPAMDNS type for use with
// apply.
func StaticIPAMDNS() *StaticIPAMDNSApplyConfiguration {
	return &StaticIPAMDNSApplyConfiguration{}
}

// WithNameservers adds the given value to the Nameservers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Nameservers field.
func (b *StaticIPAMDNSApplyConfiguration) WithNameservers(values ...string) *StaticIPAMDNSApplyConfiguration {
	for i := range values {
		b.Nameservers = append(b.Nameservers, values[i])
	}
	return b
}

// WithDomain sets the Domain field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Domain field is set to the value of the last call.
func (b *StaticIPAMDNSApplyConfiguration) WithDomain(value string) *StaticIPAMDNSApplyConfiguration {
	b.Domain = &value
	return b
}

// WithSearch adds the given value to the Search field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Search field.
func (b *StaticIPAMDNSApplyConfiguration) WithSearch(values ...string) *StaticIPAMDNSApplyConfiguration {
	for i := range values {
		b.Search = append(b.Search, values[i])
	}
	return b
}

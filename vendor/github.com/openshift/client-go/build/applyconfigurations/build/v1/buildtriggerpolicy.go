// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/build/v1"
)

// BuildTriggerPolicyApplyConfiguration represents a declarative configuration of the BuildTriggerPolicy type for use
// with apply.
type BuildTriggerPolicyApplyConfiguration struct {
	Type             *v1.BuildTriggerType                  `json:"type,omitempty"`
	GitHubWebHook    *WebHookTriggerApplyConfiguration     `json:"github,omitempty"`
	GenericWebHook   *WebHookTriggerApplyConfiguration     `json:"generic,omitempty"`
	ImageChange      *ImageChangeTriggerApplyConfiguration `json:"imageChange,omitempty"`
	GitLabWebHook    *WebHookTriggerApplyConfiguration     `json:"gitlab,omitempty"`
	BitbucketWebHook *WebHookTriggerApplyConfiguration     `json:"bitbucket,omitempty"`
}

// BuildTriggerPolicyApplyConfiguration constructs a declarative configuration of the BuildTriggerPolicy type for use with
// apply.
func BuildTriggerPolicy() *BuildTriggerPolicyApplyConfiguration {
	return &BuildTriggerPolicyApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *BuildTriggerPolicyApplyConfiguration) WithType(value v1.BuildTriggerType) *BuildTriggerPolicyApplyConfiguration {
	b.Type = &value
	return b
}

// WithGitHubWebHook sets the GitHubWebHook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitHubWebHook field is set to the value of the last call.
func (b *BuildTriggerPolicyApplyConfiguration) WithGitHubWebHook(value *WebHookTriggerApplyConfiguration) *BuildTriggerPolicyApplyConfiguration {
	b.GitHubWebHook = value
	return b
}

// WithGenericWebHook sets the GenericWebHook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GenericWebHook field is set to the value of the last call.
func (b *BuildTriggerPolicyApplyConfiguration) WithGenericWebHook(value *WebHookTriggerApplyConfiguration) *BuildTriggerPolicyApplyConfiguration {
	b.GenericWebHook = value
	return b
}

// WithImageChange sets the ImageChange field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImageChange field is set to the value of the last call.
func (b *BuildTriggerPolicyApplyConfiguration) WithImageChange(value *ImageChangeTriggerApplyConfiguration) *BuildTriggerPolicyApplyConfiguration {
	b.ImageChange = value
	return b
}

// WithGitLabWebHook sets the GitLabWebHook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitLabWebHook field is set to the value of the last call.
func (b *BuildTriggerPolicyApplyConfiguration) WithGitLabWebHook(value *WebHookTriggerApplyConfiguration) *BuildTriggerPolicyApplyConfiguration {
	b.GitLabWebHook = value
	return b
}

// WithBitbucketWebHook sets the BitbucketWebHook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BitbucketWebHook field is set to the value of the last call.
func (b *BuildTriggerPolicyApplyConfiguration) WithBitbucketWebHook(value *WebHookTriggerApplyConfiguration) *BuildTriggerPolicyApplyConfiguration {
	b.BitbucketWebHook = value
	return b
}

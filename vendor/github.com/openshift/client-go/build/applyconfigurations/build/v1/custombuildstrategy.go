// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// CustomBuildStrategyApplyConfiguration represents a declarative configuration of the CustomBuildStrategy type for use
// with apply.
type CustomBuildStrategyApplyConfiguration struct {
	From               *v1.ObjectReference            `json:"from,omitempty"`
	PullSecret         *v1.LocalObjectReference       `json:"pullSecret,omitempty"`
	Env                []v1.EnvVar                    `json:"env,omitempty"`
	ExposeDockerSocket *bool                          `json:"exposeDockerSocket,omitempty"`
	ForcePull          *bool                          `json:"forcePull,omitempty"`
	Secrets            []SecretSpecApplyConfiguration `json:"secrets,omitempty"`
	BuildAPIVersion    *string                        `json:"buildAPIVersion,omitempty"`
}

// CustomBuildStrategyApplyConfiguration constructs a declarative configuration of the CustomBuildStrategy type for use with
// apply.
func CustomBuildStrategy() *CustomBuildStrategyApplyConfiguration {
	return &CustomBuildStrategyApplyConfiguration{}
}

// WithFrom sets the From field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the From field is set to the value of the last call.
func (b *CustomBuildStrategyApplyConfiguration) WithFrom(value v1.ObjectReference) *CustomBuildStrategyApplyConfiguration {
	b.From = &value
	return b
}

// WithPullSecret sets the PullSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PullSecret field is set to the value of the last call.
func (b *CustomBuildStrategyApplyConfiguration) WithPullSecret(value v1.LocalObjectReference) *CustomBuildStrategyApplyConfiguration {
	b.PullSecret = &value
	return b
}

// WithEnv adds the given value to the Env field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Env field.
func (b *CustomBuildStrategyApplyConfiguration) WithEnv(values ...v1.EnvVar) *CustomBuildStrategyApplyConfiguration {
	for i := range values {
		b.Env = append(b.Env, values[i])
	}
	return b
}

// WithExposeDockerSocket sets the ExposeDockerSocket field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExposeDockerSocket field is set to the value of the last call.
func (b *CustomBuildStrategyApplyConfiguration) WithExposeDockerSocket(value bool) *CustomBuildStrategyApplyConfiguration {
	b.ExposeDockerSocket = &value
	return b
}

// WithForcePull sets the ForcePull field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ForcePull field is set to the value of the last call.
func (b *CustomBuildStrategyApplyConfiguration) WithForcePull(value bool) *CustomBuildStrategyApplyConfiguration {
	b.ForcePull = &value
	return b
}

// WithSecrets adds the given value to the Secrets field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Secrets field.
func (b *CustomBuildStrategyApplyConfiguration) WithSecrets(values ...*SecretSpecApplyConfiguration) *CustomBuildStrategyApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithSecrets")
		}
		b.Secrets = append(b.Secrets, *values[i])
	}
	return b
}

// WithBuildAPIVersion sets the BuildAPIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildAPIVersion field is set to the value of the last call.
func (b *CustomBuildStrategyApplyConfiguration) WithBuildAPIVersion(value string) *CustomBuildStrategyApplyConfiguration {
	b.BuildAPIVersion = &value
	return b
}

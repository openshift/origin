// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/build/v1"
)

// BuildStrategyApplyConfiguration represents a declarative configuration of the BuildStrategy type for use
// with apply.
type BuildStrategyApplyConfiguration struct {
	Type                    *v1.BuildStrategyType                           `json:"type,omitempty"`
	DockerStrategy          *DockerBuildStrategyApplyConfiguration          `json:"dockerStrategy,omitempty"`
	SourceStrategy          *SourceBuildStrategyApplyConfiguration          `json:"sourceStrategy,omitempty"`
	CustomStrategy          *CustomBuildStrategyApplyConfiguration          `json:"customStrategy,omitempty"`
	JenkinsPipelineStrategy *JenkinsPipelineBuildStrategyApplyConfiguration `json:"jenkinsPipelineStrategy,omitempty"`
}

// BuildStrategyApplyConfiguration constructs a declarative configuration of the BuildStrategy type for use with
// apply.
func BuildStrategy() *BuildStrategyApplyConfiguration {
	return &BuildStrategyApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *BuildStrategyApplyConfiguration) WithType(value v1.BuildStrategyType) *BuildStrategyApplyConfiguration {
	b.Type = &value
	return b
}

// WithDockerStrategy sets the DockerStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DockerStrategy field is set to the value of the last call.
func (b *BuildStrategyApplyConfiguration) WithDockerStrategy(value *DockerBuildStrategyApplyConfiguration) *BuildStrategyApplyConfiguration {
	b.DockerStrategy = value
	return b
}

// WithSourceStrategy sets the SourceStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SourceStrategy field is set to the value of the last call.
func (b *BuildStrategyApplyConfiguration) WithSourceStrategy(value *SourceBuildStrategyApplyConfiguration) *BuildStrategyApplyConfiguration {
	b.SourceStrategy = value
	return b
}

// WithCustomStrategy sets the CustomStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CustomStrategy field is set to the value of the last call.
func (b *BuildStrategyApplyConfiguration) WithCustomStrategy(value *CustomBuildStrategyApplyConfiguration) *BuildStrategyApplyConfiguration {
	b.CustomStrategy = value
	return b
}

// WithJenkinsPipelineStrategy sets the JenkinsPipelineStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the JenkinsPipelineStrategy field is set to the value of the last call.
func (b *BuildStrategyApplyConfiguration) WithJenkinsPipelineStrategy(value *JenkinsPipelineBuildStrategyApplyConfiguration) *BuildStrategyApplyConfiguration {
	b.JenkinsPipelineStrategy = value
	return b
}

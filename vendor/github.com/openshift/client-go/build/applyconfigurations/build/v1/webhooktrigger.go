// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// WebHookTriggerApplyConfiguration represents a declarative configuration of the WebHookTrigger type for use
// with apply.
type WebHookTriggerApplyConfiguration struct {
	Secret          *string                                 `json:"secret,omitempty"`
	AllowEnv        *bool                                   `json:"allowEnv,omitempty"`
	SecretReference *SecretLocalReferenceApplyConfiguration `json:"secretReference,omitempty"`
}

// WebHookTriggerApplyConfiguration constructs a declarative configuration of the WebHookTrigger type for use with
// apply.
func WebHookTrigger() *WebHookTriggerApplyConfiguration {
	return &WebHookTriggerApplyConfiguration{}
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *WebHookTriggerApplyConfiguration) WithSecret(value string) *WebHookTriggerApplyConfiguration {
	b.Secret = &value
	return b
}

// WithAllowEnv sets the AllowEnv field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AllowEnv field is set to the value of the last call.
func (b *WebHookTriggerApplyConfiguration) WithAllowEnv(value bool) *WebHookTriggerApplyConfiguration {
	b.AllowEnv = &value
	return b
}

// WithSecretReference sets the SecretReference field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretReference field is set to the value of the last call.
func (b *WebHookTriggerApplyConfiguration) WithSecretReference(value *SecretLocalReferenceApplyConfiguration) *WebHookTriggerApplyConfiguration {
	b.SecretReference = value
	return b
}

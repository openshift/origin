// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// GitBuildSourceApplyConfiguration represents a declarative configuration of the GitBuildSource type for use
// with apply.
type GitBuildSourceApplyConfiguration struct {
	URI                           *string `json:"uri,omitempty"`
	Ref                           *string `json:"ref,omitempty"`
	ProxyConfigApplyConfiguration `json:",inline"`
}

// GitBuildSourceApplyConfiguration constructs a declarative configuration of the GitBuildSource type for use with
// apply.
func GitBuildSource() *GitBuildSourceApplyConfiguration {
	return &GitBuildSourceApplyConfiguration{}
}

// WithURI sets the URI field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the URI field is set to the value of the last call.
func (b *GitBuildSourceApplyConfiguration) WithURI(value string) *GitBuildSourceApplyConfiguration {
	b.URI = &value
	return b
}

// WithRef sets the Ref field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ref field is set to the value of the last call.
func (b *GitBuildSourceApplyConfiguration) WithRef(value string) *GitBuildSourceApplyConfiguration {
	b.Ref = &value
	return b
}

// WithHTTPProxy sets the HTTPProxy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HTTPProxy field is set to the value of the last call.
func (b *GitBuildSourceApplyConfiguration) WithHTTPProxy(value string) *GitBuildSourceApplyConfiguration {
	b.HTTPProxy = &value
	return b
}

// WithHTTPSProxy sets the HTTPSProxy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HTTPSProxy field is set to the value of the last call.
func (b *GitBuildSourceApplyConfiguration) WithHTTPSProxy(value string) *GitBuildSourceApplyConfiguration {
	b.HTTPSProxy = &value
	return b
}

// WithNoProxy sets the NoProxy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NoProxy field is set to the value of the last call.
func (b *GitBuildSourceApplyConfiguration) WithNoProxy(value string) *GitBuildSourceApplyConfiguration {
	b.NoProxy = &value
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// BuildTriggerCauseApplyConfiguration represents a declarative configuration of the BuildTriggerCause type for use
// with apply.
type BuildTriggerCauseApplyConfiguration struct {
	Message          *string                                  `json:"message,omitempty"`
	GenericWebHook   *GenericWebHookCauseApplyConfiguration   `json:"genericWebHook,omitempty"`
	GitHubWebHook    *GitHubWebHookCauseApplyConfiguration    `json:"githubWebHook,omitempty"`
	ImageChangeBuild *ImageChangeCauseApplyConfiguration      `json:"imageChangeBuild,omitempty"`
	GitLabWebHook    *GitLabWebHookCauseApplyConfiguration    `json:"gitlabWebHook,omitempty"`
	BitbucketWebHook *BitbucketWebHookCauseApplyConfiguration `json:"bitbucketWebHook,omitempty"`
}

// BuildTriggerCauseApplyConfiguration constructs a declarative configuration of the BuildTriggerCause type for use with
// apply.
func BuildTriggerCause() *BuildTriggerCauseApplyConfiguration {
	return &BuildTriggerCauseApplyConfiguration{}
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *BuildTriggerCauseApplyConfiguration) WithMessage(value string) *BuildTriggerCauseApplyConfiguration {
	b.Message = &value
	return b
}

// WithGenericWebHook sets the GenericWebHook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GenericWebHook field is set to the value of the last call.
func (b *BuildTriggerCauseApplyConfiguration) WithGenericWebHook(value *GenericWebHookCauseApplyConfiguration) *BuildTriggerCauseApplyConfiguration {
	b.GenericWebHook = value
	return b
}

// WithGitHubWebHook sets the GitHubWebHook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitHubWebHook field is set to the value of the last call.
func (b *BuildTriggerCauseApplyConfiguration) WithGitHubWebHook(value *GitHubWebHookCauseApplyConfiguration) *BuildTriggerCauseApplyConfiguration {
	b.GitHubWebHook = value
	return b
}

// WithImageChangeBuild sets the ImageChangeBuild field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImageChangeBuild field is set to the value of the last call.
func (b *BuildTriggerCauseApplyConfiguration) WithImageChangeBuild(value *ImageChangeCauseApplyConfiguration) *BuildTriggerCauseApplyConfiguration {
	b.ImageChangeBuild = value
	return b
}

// WithGitLabWebHook sets the GitLabWebHook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitLabWebHook field is set to the value of the last call.
func (b *BuildTriggerCauseApplyConfiguration) WithGitLabWebHook(value *GitLabWebHookCauseApplyConfiguration) *BuildTriggerCauseApplyConfiguration {
	b.GitLabWebHook = value
	return b
}

// WithBitbucketWebHook sets the BitbucketWebHook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BitbucketWebHook field is set to the value of the last call.
func (b *BuildTriggerCauseApplyConfiguration) WithBitbucketWebHook(value *BitbucketWebHookCauseApplyConfiguration) *BuildTriggerCauseApplyConfiguration {
	b.BitbucketWebHook = value
	return b
}

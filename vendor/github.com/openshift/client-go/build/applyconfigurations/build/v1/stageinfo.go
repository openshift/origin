// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/build/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// StageInfoApplyConfiguration represents a declarative configuration of the StageInfo type for use
// with apply.
type StageInfoApplyConfiguration struct {
	Name                 *v1.StageName                `json:"name,omitempty"`
	StartTime            *metav1.Time                 `json:"startTime,omitempty"`
	DurationMilliseconds *int64                       `json:"durationMilliseconds,omitempty"`
	Steps                []StepInfoApplyConfiguration `json:"steps,omitempty"`
}

// StageInfoApplyConfiguration constructs a declarative configuration of the StageInfo type for use with
// apply.
func StageInfo() *StageInfoApplyConfiguration {
	return &StageInfoApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *StageInfoApplyConfiguration) WithName(value v1.StageName) *StageInfoApplyConfiguration {
	b.Name = &value
	return b
}

// WithStartTime sets the StartTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartTime field is set to the value of the last call.
func (b *StageInfoApplyConfiguration) WithStartTime(value metav1.Time) *StageInfoApplyConfiguration {
	b.StartTime = &value
	return b
}

// WithDurationMilliseconds sets the DurationMilliseconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DurationMilliseconds field is set to the value of the last call.
func (b *StageInfoApplyConfiguration) WithDurationMilliseconds(value int64) *StageInfoApplyConfiguration {
	b.DurationMilliseconds = &value
	return b
}

// WithSteps adds the given value to the Steps field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Steps field.
func (b *StageInfoApplyConfiguration) WithSteps(values ...*StepInfoApplyConfiguration) *StageInfoApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithSteps")
		}
		b.Steps = append(b.Steps, *values[i])
	}
	return b
}

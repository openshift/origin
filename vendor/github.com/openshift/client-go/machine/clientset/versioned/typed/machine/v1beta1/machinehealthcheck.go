// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	"context"

	v1beta1 "github.com/openshift/api/machine/v1beta1"
	machinev1beta1 "github.com/openshift/client-go/machine/applyconfigurations/machine/v1beta1"
	scheme "github.com/openshift/client-go/machine/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// MachineHealthChecksGetter has a method to return a MachineHealthCheckInterface.
// A group's client should implement this interface.
type MachineHealthChecksGetter interface {
	MachineHealthChecks(namespace string) MachineHealthCheckInterface
}

// MachineHealthCheckInterface has methods to work with MachineHealthCheck resources.
type MachineHealthCheckInterface interface {
	Create(ctx context.Context, machineHealthCheck *v1beta1.MachineHealthCheck, opts v1.CreateOptions) (*v1beta1.MachineHealthCheck, error)
	Update(ctx context.Context, machineHealthCheck *v1beta1.MachineHealthCheck, opts v1.UpdateOptions) (*v1beta1.MachineHealthCheck, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, machineHealthCheck *v1beta1.MachineHealthCheck, opts v1.UpdateOptions) (*v1beta1.MachineHealthCheck, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1beta1.MachineHealthCheck, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1beta1.MachineHealthCheckList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1beta1.MachineHealthCheck, err error)
	Apply(ctx context.Context, machineHealthCheck *machinev1beta1.MachineHealthCheckApplyConfiguration, opts v1.ApplyOptions) (result *v1beta1.MachineHealthCheck, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, machineHealthCheck *machinev1beta1.MachineHealthCheckApplyConfiguration, opts v1.ApplyOptions) (result *v1beta1.MachineHealthCheck, err error)
	MachineHealthCheckExpansion
}

// machineHealthChecks implements MachineHealthCheckInterface
type machineHealthChecks struct {
	*gentype.ClientWithListAndApply[*v1beta1.MachineHealthCheck, *v1beta1.MachineHealthCheckList, *machinev1beta1.MachineHealthCheckApplyConfiguration]
}

// newMachineHealthChecks returns a MachineHealthChecks
func newMachineHealthChecks(c *MachineV1beta1Client, namespace string) *machineHealthChecks {
	return &machineHealthChecks{
		gentype.NewClientWithListAndApply[*v1beta1.MachineHealthCheck, *v1beta1.MachineHealthCheckList, *machinev1beta1.MachineHealthCheckApplyConfiguration](
			"machinehealthchecks",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1beta1.MachineHealthCheck { return &v1beta1.MachineHealthCheck{} },
			func() *v1beta1.MachineHealthCheckList { return &v1beta1.MachineHealthCheckList{} }),
	}
}

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	oauthv1 "github.com/openshift/api/oauth/v1"
	applyconfigurationsoauthv1 "github.com/openshift/client-go/oauth/applyconfigurations/oauth/v1"
	scheme "github.com/openshift/client-go/oauth/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// OAuthAccessTokensGetter has a method to return a OAuthAccessTokenInterface.
// A group's client should implement this interface.
type OAuthAccessTokensGetter interface {
	OAuthAccessTokens() OAuthAccessTokenInterface
}

// OAuthAccessTokenInterface has methods to work with OAuthAccessToken resources.
type OAuthAccessTokenInterface interface {
	Create(ctx context.Context, oAuthAccessToken *oauthv1.OAuthAccessToken, opts metav1.CreateOptions) (*oauthv1.OAuthAccessToken, error)
	Update(ctx context.Context, oAuthAccessToken *oauthv1.OAuthAccessToken, opts metav1.UpdateOptions) (*oauthv1.OAuthAccessToken, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*oauthv1.OAuthAccessToken, error)
	List(ctx context.Context, opts metav1.ListOptions) (*oauthv1.OAuthAccessTokenList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *oauthv1.OAuthAccessToken, err error)
	Apply(ctx context.Context, oAuthAccessToken *applyconfigurationsoauthv1.OAuthAccessTokenApplyConfiguration, opts metav1.ApplyOptions) (result *oauthv1.OAuthAccessToken, err error)
	OAuthAccessTokenExpansion
}

// oAuthAccessTokens implements OAuthAccessTokenInterface
type oAuthAccessTokens struct {
	*gentype.ClientWithListAndApply[*oauthv1.OAuthAccessToken, *oauthv1.OAuthAccessTokenList, *applyconfigurationsoauthv1.OAuthAccessTokenApplyConfiguration]
}

// newOAuthAccessTokens returns a OAuthAccessTokens
func newOAuthAccessTokens(c *OauthV1Client) *oAuthAccessTokens {
	return &oAuthAccessTokens{
		gentype.NewClientWithListAndApply[*oauthv1.OAuthAccessToken, *oauthv1.OAuthAccessTokenList, *applyconfigurationsoauthv1.OAuthAccessTokenApplyConfiguration](
			"oauthaccesstokens",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *oauthv1.OAuthAccessToken { return &oauthv1.OAuthAccessToken{} },
			func() *oauthv1.OAuthAccessTokenList { return &oauthv1.OAuthAccessTokenList{} },
		),
	}
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PerNodeAPIRequestLogApplyConfiguration represents a declarative configuration of the PerNodeAPIRequestLog type for use
// with apply.
type PerNodeAPIRequestLogApplyConfiguration struct {
	NodeName     *string                                    `json:"nodeName,omitempty"`
	RequestCount *int64                                     `json:"requestCount,omitempty"`
	ByUser       []PerUserAPIRequestCountApplyConfiguration `json:"byUser,omitempty"`
}

// PerNodeAPIRequestLogApplyConfiguration constructs a declarative configuration of the PerNodeAPIRequestLog type for use with
// apply.
func PerNodeAPIRequestLog() *PerNodeAPIRequestLogApplyConfiguration {
	return &PerNodeAPIRequestLogApplyConfiguration{}
}

// WithNodeName sets the NodeName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeName field is set to the value of the last call.
func (b *PerNodeAPIRequestLogApplyConfiguration) WithNodeName(value string) *PerNodeAPIRequestLogApplyConfiguration {
	b.NodeName = &value
	return b
}

// WithRequestCount sets the RequestCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestCount field is set to the value of the last call.
func (b *PerNodeAPIRequestLogApplyConfiguration) WithRequestCount(value int64) *PerNodeAPIRequestLogApplyConfiguration {
	b.RequestCount = &value
	return b
}

// WithByUser adds the given value to the ByUser field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ByUser field.
func (b *PerNodeAPIRequestLogApplyConfiguration) WithByUser(values ...*PerUserAPIRequestCountApplyConfiguration) *PerNodeAPIRequestLogApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithByUser")
		}
		b.ByUser = append(b.ByUser, *values[i])
	}
	return b
}

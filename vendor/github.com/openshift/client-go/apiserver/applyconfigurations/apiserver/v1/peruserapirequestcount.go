// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PerUserAPIRequestCountApplyConfiguration represents a declarative configuration of the PerUserAPIRequestCount type for use
// with apply.
type PerUserAPIRequestCountApplyConfiguration struct {
	UserName     *string                                    `json:"username,omitempty"`
	UserAgent    *string                                    `json:"userAgent,omitempty"`
	RequestCount *int64                                     `json:"requestCount,omitempty"`
	ByVerb       []PerVerbAPIRequestCountApplyConfiguration `json:"byVerb,omitempty"`
}

// PerUserAPIRequestCountApplyConfiguration constructs a declarative configuration of the PerUserAPIRequestCount type for use with
// apply.
func PerUserAPIRequestCount() *PerUserAPIRequestCountApplyConfiguration {
	return &PerUserAPIRequestCountApplyConfiguration{}
}

// WithUserName sets the UserName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UserName field is set to the value of the last call.
func (b *PerUserAPIRequestCountApplyConfiguration) WithUserName(value string) *PerUserAPIRequestCountApplyConfiguration {
	b.UserName = &value
	return b
}

// WithUserAgent sets the UserAgent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UserAgent field is set to the value of the last call.
func (b *PerUserAPIRequestCountApplyConfiguration) WithUserAgent(value string) *PerUserAPIRequestCountApplyConfiguration {
	b.UserAgent = &value
	return b
}

// WithRequestCount sets the RequestCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestCount field is set to the value of the last call.
func (b *PerUserAPIRequestCountApplyConfiguration) WithRequestCount(value int64) *PerUserAPIRequestCountApplyConfiguration {
	b.RequestCount = &value
	return b
}

// WithByVerb adds the given value to the ByVerb field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ByVerb field.
func (b *PerUserAPIRequestCountApplyConfiguration) WithByVerb(values ...*PerVerbAPIRequestCountApplyConfiguration) *PerUserAPIRequestCountApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithByVerb")
		}
		b.ByVerb = append(b.ByVerb, *values[i])
	}
	return b
}

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PerResourceAPIRequestLogApplyConfiguration represents a declarative configuration of the PerResourceAPIRequestLog type for use
// with apply.
type PerResourceAPIRequestLogApplyConfiguration struct {
	ByNode       []PerNodeAPIRequestLogApplyConfiguration `json:"byNode,omitempty"`
	RequestCount *int64                                   `json:"requestCount,omitempty"`
}

// PerResourceAPIRequestLogApplyConfiguration constructs a declarative configuration of the PerResourceAPIRequestLog type for use with
// apply.
func PerResourceAPIRequestLog() *PerResourceAPIRequestLogApplyConfiguration {
	return &PerResourceAPIRequestLogApplyConfiguration{}
}

// WithByNode adds the given value to the ByNode field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ByNode field.
func (b *PerResourceAPIRequestLogApplyConfiguration) WithByNode(values ...*PerNodeAPIRequestLogApplyConfiguration) *PerResourceAPIRequestLogApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithByNode")
		}
		b.ByNode = append(b.ByNode, *values[i])
	}
	return b
}

// WithRequestCount sets the RequestCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestCount field is set to the value of the last call.
func (b *PerResourceAPIRequestLogApplyConfiguration) WithRequestCount(value int64) *PerResourceAPIRequestLogApplyConfiguration {
	b.RequestCount = &value
	return b
}

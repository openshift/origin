// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type AiInteractionContext struct {
    Entity
}
// NewAiInteractionContext instantiates a new AiInteractionContext and sets the default values.
func NewAiInteractionContext()(*AiInteractionContext) {
    m := &AiInteractionContext{
        Entity: *NewEntity(),
    }
    return m
}
// CreateAiInteractionContextFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateAiInteractionContextFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewAiInteractionContext(), nil
}
// GetContextReference gets the contextReference property value. The full file URL where the interaction happened.
// returns a *string when successful
func (m *AiInteractionContext) GetContextReference()(*string) {
    val, err := m.GetBackingStore().Get("contextReference")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetContextType gets the contextType property value. The type of the file.
// returns a *string when successful
func (m *AiInteractionContext) GetContextType()(*string) {
    val, err := m.GetBackingStore().Get("contextType")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetDisplayName gets the displayName property value. The name of the file.
// returns a *string when successful
func (m *AiInteractionContext) GetDisplayName()(*string) {
    val, err := m.GetBackingStore().Get("displayName")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *AiInteractionContext) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["contextReference"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetContextReference(val)
        }
        return nil
    }
    res["contextType"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetContextType(val)
        }
        return nil
    }
    res["displayName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDisplayName(val)
        }
        return nil
    }
    return res
}
// Serialize serializes information the current object
func (m *AiInteractionContext) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    {
        err = writer.WriteStringValue("contextReference", m.GetContextReference())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("contextType", m.GetContextType())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("displayName", m.GetDisplayName())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetContextReference sets the contextReference property value. The full file URL where the interaction happened.
func (m *AiInteractionContext) SetContextReference(value *string)() {
    err := m.GetBackingStore().Set("contextReference", value)
    if err != nil {
        panic(err)
    }
}
// SetContextType sets the contextType property value. The type of the file.
func (m *AiInteractionContext) SetContextType(value *string)() {
    err := m.GetBackingStore().Set("contextType", value)
    if err != nil {
        panic(err)
    }
}
// SetDisplayName sets the displayName property value. The name of the file.
func (m *AiInteractionContext) SetDisplayName(value *string)() {
    err := m.GetBackingStore().Set("displayName", value)
    if err != nil {
        panic(err)
    }
}
type AiInteractionContextable interface {
    Entityable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetContextReference()(*string)
    GetContextType()(*string)
    GetDisplayName()(*string)
    SetContextReference(value *string)()
    SetContextType(value *string)()
    SetDisplayName(value *string)()
}

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type BinaryContent struct {
    ContentBase
}
// NewBinaryContent instantiates a new BinaryContent and sets the default values.
func NewBinaryContent()(*BinaryContent) {
    m := &BinaryContent{
        ContentBase: *NewContentBase(),
    }
    odataTypeValue := "#microsoft.graph.binaryContent"
    m.SetOdataType(&odataTypeValue)
    return m
}
// CreateBinaryContentFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateBinaryContentFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewBinaryContent(), nil
}
// GetData gets the data property value. The binary content, encoded as a Base64 string. Inherited from contentBase.
// returns a []byte when successful
func (m *BinaryContent) GetData()([]byte) {
    val, err := m.GetBackingStore().Get("data")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]byte)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *BinaryContent) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.ContentBase.GetFieldDeserializers()
    res["data"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetByteArrayValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetData(val)
        }
        return nil
    }
    return res
}
// Serialize serializes information the current object
func (m *BinaryContent) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.ContentBase.Serialize(writer)
    if err != nil {
        return err
    }
    {
        err = writer.WriteByteArrayValue("data", m.GetData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetData sets the data property value. The binary content, encoded as a Base64 string. Inherited from contentBase.
func (m *BinaryContent) SetData(value []byte)() {
    err := m.GetBackingStore().Set("data", value)
    if err != nil {
        panic(err)
    }
}
type BinaryContentable interface {
    ContentBaseable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetData()([]byte)
    SetData(value []byte)()
}

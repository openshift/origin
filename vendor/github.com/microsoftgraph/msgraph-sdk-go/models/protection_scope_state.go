// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type ProtectionScopeState int

const (
    NOTMODIFIED_PROTECTIONSCOPESTATE ProtectionScopeState = iota
    MODIFIED_PROTECTIONSCOPESTATE
    UNKNOWNFUTUREVALUE_PROTECTIONSCOPESTATE
)

func (i ProtectionScopeState) String() string {
    return []string{"notModified", "modified", "unknownFutureValue"}[i]
}
func ParseProtectionScopeState(v string) (any, error) {
    result := NOTMODIFIED_PROTECTIONSCOPESTATE
    switch v {
        case "notModified":
            result = NOTMODIFIED_PROTECTIONSCOPESTATE
        case "modified":
            result = MODIFIED_PROTECTIONSCOPESTATE
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_PROTECTIONSCOPESTATE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeProtectionScopeState(values []ProtectionScopeState) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i ProtectionScopeState) isMultiValue() bool {
    return false
}

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type UserActionContext struct {
    SignInContext
}
// NewUserActionContext instantiates a new UserActionContext and sets the default values.
func NewUserActionContext()(*UserActionContext) {
    m := &UserActionContext{
        SignInContext: *NewSignInContext(),
    }
    odataTypeValue := "#microsoft.graph.userActionContext"
    m.SetOdataType(&odataTypeValue)
    return m
}
// CreateUserActionContextFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateUserActionContextFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewUserActionContext(), nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *UserActionContext) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.SignInContext.GetFieldDeserializers()
    res["userAction"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseUserAction)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUserAction(val.(*UserAction))
        }
        return nil
    }
    return res
}
// GetUserAction gets the userAction property value. Represents the user action that the authenticating identity is performing. The possible values are: registerSecurityInformation, registerOrJoinDevices, unknownFutureValue.
// returns a *UserAction when successful
func (m *UserActionContext) GetUserAction()(*UserAction) {
    val, err := m.GetBackingStore().Get("userAction")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*UserAction)
    }
    return nil
}
// Serialize serializes information the current object
func (m *UserActionContext) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.SignInContext.Serialize(writer)
    if err != nil {
        return err
    }
    if m.GetUserAction() != nil {
        cast := (*m.GetUserAction()).String()
        err = writer.WriteStringValue("userAction", &cast)
        if err != nil {
            return err
        }
    }
    return nil
}
// SetUserAction sets the userAction property value. Represents the user action that the authenticating identity is performing. The possible values are: registerSecurityInformation, registerOrJoinDevices, unknownFutureValue.
func (m *UserActionContext) SetUserAction(value *UserAction)() {
    err := m.GetBackingStore().Set("userAction", value)
    if err != nil {
        panic(err)
    }
}
type UserActionContextable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    SignInContextable
    GetUserAction()(*UserAction)
    SetUserAction(value *UserAction)()
}

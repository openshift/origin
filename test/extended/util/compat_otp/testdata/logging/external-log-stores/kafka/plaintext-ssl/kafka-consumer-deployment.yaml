kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: kafkaserver-template
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    labels:
      component: kafka-consumer
      logging-infra: kafka
      provider: openshift
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: kafka-consumer
        logging-infra: kafka
        provider: openshift
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: kafka-consumer
          logging-infra: kafka
          provider: openshift
        name: kafka-consumer
      spec:
        containers:
        - command:
          - /bin/bash
          - -ce
          - /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server kafka:9093 --topic clo-topic --from-beginning  --consumer.config /etc/kafka-config/client.properties
          image: quay.io/openshifttest/kafka@sha256:2411662d89dd5700e1fe49aa8be1219843948da90cfe51a1c7a49bcef9d22dab
          imagePullPolicy: IfNotPresent
          name: kafka-consumer
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: shared
          - mountPath: /etc/kafka-config
            name: kafka-client
          - mountPath: /etc/kafkacert
            name: kafkacert
          env:
          - name: KAFKA_OPTS
            value: -Djava.security.auth.login.config=/etc/kafka-configmap/kafka_client_jaas.conf
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/arch: amd64
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: shared
        - configMap:
            defaultMode: 420
            name: ${CM_NAME}
          name: kafka-client
        - secret:
            defaultMode: 420
            secretName: ${SECRETNAME}
          name: kafkacert
parameters:
- name: NAME
  value: "kafka-consumer-plaintext-ssl"
- name: NAMESPACE
  value: "openshift-logging"
- name: CM_NAME
  value: "kafka-client"
- name: SECRETNAME
  value: "kafka-client-cert"

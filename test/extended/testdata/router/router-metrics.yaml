apiVersion: v1
kind: List
items:
# a route that has multiple weighted services that it points to
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: weightedroute
    labels:
      test: router
      select: weighted
  spec:
    to:
      name: weightedendpoints1
      kind: Service
      weight: 50
    alternateBackends:
    - name: weightedendpoints2
      kind: Service
      weight: 50
    port:
      targetPort: 8080

# a route that has multiple services but all weights are zero
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: zeroweightroute
    labels:
      test: router
      select: weighted
  spec:
    to:
      name: weightedendpoints1
      kind: Service
      weight: 0
    alternateBackends:
    - name: weightedendpoints2
      kind: Service
      weight: 0
    port:
      targetPort: 8080

# two services that can be routed to
- apiVersion: v1
  kind: Service
  metadata:
    name: weightedendpoints1
    labels:
      test: router
  spec:
    selector:
      test: weightedrouter1
      endpoints: weightedrouter1
    ports:
    - port: 8080
- apiVersion: v1
  kind: Service
  metadata:
    name: weightedendpoints2
    labels:
      test: router
  spec:
    selector:
      test: weightedrouter2
      endpoints: weightedrouter2
    ports:
    - port: 8080
# two pods that serves a response
- apiVersion: v1
  kind: Pod
  metadata:
    name: endpoint-1
    labels:
      test: weightedrouter1
      endpoints: weightedrouter1
  spec:
    terminationGracePeriodSeconds: 1
    containers:
    - name: test
      image: registry.k8s.io/e2e-test-images/agnhost:2.52
      args: ["netexec"]
      ports:
      - containerPort: 8080
        name: http
      - containerPort: 100
        protocol: UDP
- apiVersion: v1
  kind: Pod
  metadata:
    name: endpoint-2
    labels:
      test: weightedrouter2
      endpoints: weightedrouter2
  spec:
    terminationGracePeriodSeconds: 1
    containers:
    - name: test
      image: registry.k8s.io/e2e-test-images/agnhost:2.52
      args: ["netexec"]
      ports:
      - containerPort: 8080
        name: http
      - containerPort: 100
        protocol: UDP
